[94m[Info]    [0m[Reporting.Logs.logInfo#75] Parsing: ./play_fck.lat
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Parsed: ./play_fck.lat
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Transformed: ./play_fck.lat
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Construct inheritance graph
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> int main()
{
	int a = 1;
	int b = 2;
	int c = 1;
	int d = 2;
	int e = 1;
	int f = 2;
	int g = 42;
	int h = 2;
	int i = 1;
	int j = 2;
	int k = 1;
	int l = 2;
	int m = 1;
	int n = 2;
	return foo(a, b, c, d, e, f, g);
}

int foo(int a, int b, int c, int d, int e, int f, int g)
{
	int r = (((((((2 * a) + b) + c) + d) + e) + f) + g);
	printInt(r);
	return 0;
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> int main()
{
	int a = 1;
	int b = 2;
	int c = 1;
	int d = 2;
	int e = 1;
	int f = 2;
	int g = 42;
	int h = 2;
	int i = 1;
	int j = 2;
	int k = 1;
	int l = 2;
	int m = 1;
	int n = 2;
	return foo(a, b, c, d, e, f, g);
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> int a = 1;
int b = 2;
int c = 1;
int d = 2;
int e = 1;
int f = 2;
int g = 42;
int h = 2;
int i = 1;
int j = 2;
int k = 1;
int l = 2;
int m = 1;
int n = 2;
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- int a = (int)(1);
int b = (int)(2);
int c = (int)(1);
int d = (int)(2);
int e = (int)(1);
int f = (int)(2);
int g = (int)(42);
int h = (int)(2);
int i = (int)(1);
int j = (int)(2);
int k = (int)(1);
int l = (int)(2);
int m = (int)(1);
int n = (int)(2);
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> return foo(a, b, c, d, e, f, g);
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- return foo(a, b, c, d, e, f, g);
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- int main()
{
	int a = (int)(1);
	int b = (int)(2);
	int c = (int)(1);
	int d = (int)(2);
	int e = (int)(1);
	int f = (int)(2);
	int g = (int)(42);
	int h = (int)(2);
	int i = (int)(1);
	int j = (int)(2);
	int k = (int)(1);
	int l = (int)(2);
	int m = (int)(1);
	int n = (int)(2);
	return foo(a, b, c, d, e, f, g);
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> int foo(int a, int b, int c, int d, int e, int f, int g)
{
	int r = (((((((2 * a) + b) + c) + d) + e) + f) + g);
	printInt(r);
	return 0;
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> int r = (((((((2 * a) + b) + c) + d) + e) + f) + g);
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- int r = ((((((((int)(2) * a) + b) + c) + d) + e) + f) + g);
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> printInt(r);
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- printInt(r);
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> return 0;
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- return (int)(0);
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- int foo(int a, int b, int c, int d, int e, int f, int g)
{
	int r = ((((((((int)(2) * a) + b) + c) + d) + e) + f) + g);
	printInt(r);
	return (int)(0);
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- int main()
{
	int a = (int)(1);
	int b = (int)(2);
	int c = (int)(1);
	int d = (int)(2);
	int e = (int)(1);
	int f = (int)(2);
	int g = (int)(42);
	int h = (int)(2);
	int i = (int)(1);
	int j = (int)(2);
	int k = (int)(1);
	int l = (int)(2);
	int m = (int)(1);
	int n = (int)(2);
	return foo(a, b, c, d, e, f, g);
}

int foo(int a, int b, int c, int d, int e, int f, int g)
{
	int r = ((((((((int)(2) * a) + b) + c) + d) + e) + f) + g);
	printInt(r);
	return (int)(0);
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Typecheck done./play_fck.lat

int main()
{
	int a = (int)(1);
	int b = (int)(2);
	int c = (int)(1);
	int d = (int)(2);
	int e = (int)(1);
	int f = (int)(2);
	int g = (int)(42);
	int h = (int)(2);
	int i = (int)(1);
	int j = (int)(2);
	int k = (int)(1);
	int l = (int)(2);
	int m = (int)(1);
	int n = (int)(2);
	return foo(a, b, c, d, e, f, g);
}

int foo(int a, int b, int c, int d, int e, int f, int g)
{
	int r = ((((((((int)(2) * a) + b) + c) + d) + e) + f) + g);
	printInt(r);
	return (int)(0);
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] ConstPropagation.run before:int main()
{
	int a = (int)(1);
	int b = (int)(2);
	int c = (int)(1);
	int d = (int)(2);
	int e = (int)(1);
	int f = (int)(2);
	int g = (int)(42);
	int h = (int)(2);
	int i = (int)(1);
	int j = (int)(2);
	int k = (int)(1);
	int l = (int)(2);
	int m = (int)(1);
	int n = (int)(2);
	return foo(a, b, c, d, e, f, g);
}

int foo(int a, int b, int c, int d, int e, int f, int g)
{
	int r = ((((((((int)(2) * a) + b) + c) + d) + e) + f) + g);
	printInt(r);
	return (int)(0);
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP Before doNormalizeScope(Syntax.Program) int main()
{
	int a = (int)(1);
	int b = (int)(2);
	int c = (int)(1);
	int d = (int)(2);
	int e = (int)(1);
	int f = (int)(2);
	int g = (int)(42);
	int h = (int)(2);
	int i = (int)(1);
	int j = (int)(2);
	int k = (int)(1);
	int l = (int)(2);
	int m = (int)(1);
	int n = (int)(2);
	return foo(a, b, c, d, e, f, g);
}

int foo(int a, int b, int c, int d, int e, int f, int g)
{
	int r = ((((((((int)(2) * a) + b) + c) + d) + e) + f) + g);
	printInt(r);
	return (int)(0);
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP After doNormalizeScope(Syntax.Program) int main()
{
	int _var_1000002#a = (int)(1);
	int _var_1000003#b = (int)(2);
	int _var_1000004#c = (int)(1);
	int _var_1000005#d = (int)(2);
	int _var_1000006#e = (int)(1);
	int _var_1000007#f = (int)(2);
	int _var_1000008#g = (int)(42);
	int _var_1000009#h = (int)(2);
	int _var_1000010#i = (int)(1);
	int _var_1000011#j = (int)(2);
	int _var_1000012#k = (int)(1);
	int _var_1000013#l = (int)(2);
	int _var_1000014#m = (int)(1);
	int _var_1000015#n = (int)(2);
	return foo(_var_1000002#a, _var_1000003#b, _var_1000004#c, _var_1000005#d, _var_1000006#e, _var_1000007#f, _var_1000008#g);
}

int foo(int _var_1000019#a, int _var_1000020#b, int _var_1000021#c, int _var_1000022#d, int _var_1000023#e, int _var_1000024#f, int _var_1000025#g)
{
	int _var_1000027#r = ((((((((int)(2) * _var_1000019#a) + _var_1000020#b) + _var_1000021#c) + _var_1000022#d) + _var_1000023#e) + _var_1000024#f) + _var_1000025#g);
	printInt(_var_1000027#r);
	return (int)(0);
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] ConstPropagation.run after:int main()
{
	int _var_1000002#a = 1;
	int _var_1000003#b = 2;
	int _var_1000004#c = 1;
	int _var_1000005#d = 2;
	int _var_1000006#e = 1;
	int _var_1000007#f = 2;
	int _var_1000008#g = 42;
	int _var_1000009#h = 2;
	int _var_1000010#i = 1;
	int _var_1000011#j = 2;
	int _var_1000012#k = 1;
	int _var_1000013#l = 2;
	int _var_1000014#m = 1;
	int _var_1000015#n = 2;
	return foo(1, 2, 1, 2, 1, 2, 42);
}

int foo(int _var_1000019#a, int _var_1000020#b, int _var_1000021#c, int _var_1000022#d, int _var_1000023#e, int _var_1000024#f, int _var_1000025#g)
{
	int _var_1000027#r = ((((((_var_1000020#b + _var_1000021#c) + _var_1000022#d) + _var_1000023#e) + _var_1000024#f) + _var_1000025#g) + (2 * _var_1000019#a));
	printInt(_var_1000027#r);
	return 0;
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Optimizing AST round 1 (took 0 ms)
[94m[Info]    [0m[Reporting.Logs.logInfo#75] ConstPropagation.run before:int main()
{
	int _var_1000002#a = 1;
	int _var_1000003#b = 2;
	int _var_1000004#c = 1;
	int _var_1000005#d = 2;
	int _var_1000006#e = 1;
	int _var_1000007#f = 2;
	int _var_1000008#g = 42;
	int _var_1000009#h = 2;
	int _var_1000010#i = 1;
	int _var_1000011#j = 2;
	int _var_1000012#k = 1;
	int _var_1000013#l = 2;
	int _var_1000014#m = 1;
	int _var_1000015#n = 2;
	return foo(1, 2, 1, 2, 1, 2, 42);
}

int foo(int _var_1000019#a, int _var_1000020#b, int _var_1000021#c, int _var_1000022#d, int _var_1000023#e, int _var_1000024#f, int _var_1000025#g)
{
	int _var_1000027#r = ((((((_var_1000020#b + _var_1000021#c) + _var_1000022#d) + _var_1000023#e) + _var_1000024#f) + _var_1000025#g) + (2 * _var_1000019#a));
	printInt(_var_1000027#r);
	return 0;
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP Before doNormalizeScope(Syntax.Program) int main()
{
	int _var_1000002#a = 1;
	int _var_1000003#b = 2;
	int _var_1000004#c = 1;
	int _var_1000005#d = 2;
	int _var_1000006#e = 1;
	int _var_1000007#f = 2;
	int _var_1000008#g = 42;
	int _var_1000009#h = 2;
	int _var_1000010#i = 1;
	int _var_1000011#j = 2;
	int _var_1000012#k = 1;
	int _var_1000013#l = 2;
	int _var_1000014#m = 1;
	int _var_1000015#n = 2;
	return foo(1, 2, 1, 2, 1, 2, 42);
}

int foo(int _var_1000019#a, int _var_1000020#b, int _var_1000021#c, int _var_1000022#d, int _var_1000023#e, int _var_1000024#f, int _var_1000025#g)
{
	int _var_1000027#r = ((((((_var_1000020#b + _var_1000021#c) + _var_1000022#d) + _var_1000023#e) + _var_1000024#f) + _var_1000025#g) + (2 * _var_1000019#a));
	printInt(_var_1000027#r);
	return 0;
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP After doNormalizeScope(Syntax.Program) int main()
{
	int _var_1000002#a = 1;
	int _var_1000003#b = 2;
	int _var_1000004#c = 1;
	int _var_1000005#d = 2;
	int _var_1000006#e = 1;
	int _var_1000007#f = 2;
	int _var_1000008#g = 42;
	int _var_1000009#h = 2;
	int _var_1000010#i = 1;
	int _var_1000011#j = 2;
	int _var_1000012#k = 1;
	int _var_1000013#l = 2;
	int _var_1000014#m = 1;
	int _var_1000015#n = 2;
	return foo(1, 2, 1, 2, 1, 2, 42);
}

int foo(int _var_1000019#a, int _var_1000020#b, int _var_1000021#c, int _var_1000022#d, int _var_1000023#e, int _var_1000024#f, int _var_1000025#g)
{
	int _var_1000027#r = ((((((_var_1000020#b + _var_1000021#c) + _var_1000022#d) + _var_1000023#e) + _var_1000024#f) + _var_1000025#g) + (2 * _var_1000019#a));
	printInt(_var_1000027#r);
	return 0;
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] ConstPropagation.run after:int main()
{
	int _var_1000002#a = 1;
	int _var_1000003#b = 2;
	int _var_1000004#c = 1;
	int _var_1000005#d = 2;
	int _var_1000006#e = 1;
	int _var_1000007#f = 2;
	int _var_1000008#g = 42;
	int _var_1000009#h = 2;
	int _var_1000010#i = 1;
	int _var_1000011#j = 2;
	int _var_1000012#k = 1;
	int _var_1000013#l = 2;
	int _var_1000014#m = 1;
	int _var_1000015#n = 2;
	return foo(1, 2, 1, 2, 1, 2, 42);
}

int foo(int _var_1000019#a, int _var_1000020#b, int _var_1000021#c, int _var_1000022#d, int _var_1000023#e, int _var_1000024#f, int _var_1000025#g)
{
	int _var_1000027#r = ((((((_var_1000020#b + _var_1000021#c) + _var_1000022#d) + _var_1000023#e) + _var_1000024#f) + _var_1000025#g) + (2 * _var_1000019#a));
	printInt(_var_1000027#r);
	return 0;
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Optimizing AST round 2 (took 10 ms)
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Optimization done./play_fck.lat

int main()
{
	int _var_1000002#a = 1;
	int _var_1000003#b = 2;
	int _var_1000004#c = 1;
	int _var_1000005#d = 2;
	int _var_1000006#e = 1;
	int _var_1000007#f = 2;
	int _var_1000008#g = 42;
	int _var_1000009#h = 2;
	int _var_1000010#i = 1;
	int _var_1000011#j = 2;
	int _var_1000012#k = 1;
	int _var_1000013#l = 2;
	int _var_1000014#m = 1;
	int _var_1000015#n = 2;
	return foo(1, 2, 1, 2, 1, 2, 42);
}

int foo(int _var_1000019#a, int _var_1000020#b, int _var_1000021#c, int _var_1000022#d, int _var_1000023#e, int _var_1000024#f, int _var_1000025#g)
{
	int _var_1000027#r = ((((((_var_1000020#b + _var_1000021#c) + _var_1000022#d) + _var_1000023#e) + _var_1000024#f) + _var_1000025#g) + (2 * _var_1000019#a));
	printInt(_var_1000027#r);
	return 0;
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] APPDET [int,int,int,int,int,int,int]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] APPDET [int]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DEBUG COLLECT_FUNCTIONS PROTOTYPES
[94m[Info]    [0m[Reporting.Logs.logInfo#75] [int main()
    int t_7 = <int>1
    int t_8 = <int>t_7
    int t_9 = <int>2
    int t_10 = <int>t_9
    int t_11 = <int>1
    int t_12 = <int>t_11
    int t_13 = <int>2
    int t_14 = <int>t_13
    int t_15 = <int>1
    int t_16 = <int>t_15
    int t_17 = <int>2
    int t_18 = <int>t_17
    int t_19 = <int>42
    int t_20 = <int>t_19
    int t_21 = <int>2
    int t_22 = <int>t_21
    int t_23 = <int>1
    int t_24 = <int>t_23
    int t_25 = <int>2
    int t_26 = <int>t_25
    int t_27 = <int>1
    int t_28 = <int>t_27
    int t_29 = <int>2
    int t_30 = <int>t_29
    int t_31 = <int>1
    int t_32 = <int>t_31
    int t_33 = <int>2
    int t_34 = <int>t_33
    int t_35 = <int>1
    int t_36 = <int>2
    int t_37 = <int>1
    int t_38 = <int>2
    int t_39 = <int>1
    int t_40 = <int>2
    int t_41 = <int>42
    int t_42 =     call<function> foo(<int>t_35, <int>t_36, <int>t_37, <int>t_38, <int>t_39, <int>t_40, <int>t_41)
    return <int>t_42
,int foo(int t_43, int t_44, int t_45, int t_46, int t_47, int t_48, int t_49)
    int t_50 = <int>t_44 + <int>t_45
    int t_51 = <int>t_50 + <int>t_46
    int t_52 = <int>t_51 + <int>t_47
    int t_53 = <int>t_52 + <int>t_48
    int t_54 = <int>t_53 + <int>t_49
    int t_55 = <int>2
    int t_56 = <int>t_43 * <int>t_55
    int t_57 = <int>t_54 + <int>t_56
    int t_58 = <int>t_57
    byte t_59 =     call<function> printInt(<int>t_58)
    int t_60 = <int>0
    return <int>t_60
]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] END DEBUG
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Initial IR: 
struct Array extends [Array, Object]
    field obj<Object> elements;
    field int length;
    field int elementSize;
    method byte Object.equals ( obj<Object>)
    method int Object.getHashCode ()
    method obj<String> Array.toString ()

struct Object extends [Object]
    method byte Object.equals ( obj<Object>)
    method int Object.getHashCode ()
    method obj<String> Object.toString ()

struct String extends [String, Object]
    method int String.charAt ( int)
    method byte String.equals ( obj<Object>)
    method obj<String> String.concat ( obj<String>)
    method byte String.startsWith ( obj<String>)
    method byte String.endsWith ( obj<String>)
    method array<byte> String.getBytes ()
    method int String.indexOf ( int)
    method int String.length ()
    method obj<String> String.substring ( int)
    method obj<String> String.toString ()
    method int String.getHashCode ()

int main()
    int t_7 = <int>1
    int t_8 = <int>t_7
    int t_9 = <int>2
    int t_10 = <int>t_9
    int t_11 = <int>1
    int t_12 = <int>t_11
    int t_13 = <int>2
    int t_14 = <int>t_13
    int t_15 = <int>1
    int t_16 = <int>t_15
    int t_17 = <int>2
    int t_18 = <int>t_17
    int t_19 = <int>42
    int t_20 = <int>t_19
    int t_21 = <int>2
    int t_22 = <int>t_21
    int t_23 = <int>1
    int t_24 = <int>t_23
    int t_25 = <int>2
    int t_26 = <int>t_25
    int t_27 = <int>1
    int t_28 = <int>t_27
    int t_29 = <int>2
    int t_30 = <int>t_29
    int t_31 = <int>1
    int t_32 = <int>t_31
    int t_33 = <int>2
    int t_34 = <int>t_33
    int t_35 = <int>1
    int t_36 = <int>2
    int t_37 = <int>1
    int t_38 = <int>2
    int t_39 = <int>1
    int t_40 = <int>2
    int t_41 = <int>42
    int t_42 =     call<function> foo(<int>t_35, <int>t_36, <int>t_37, <int>t_38, <int>t_39, <int>t_40, <int>t_41)
    return <int>t_42

int foo(int t_43, int t_44, int t_45, int t_46, int t_47, int t_48, int t_49)
    int t_50 = <int>t_44 + <int>t_45
    int t_51 = <int>t_50 + <int>t_46
    int t_52 = <int>t_51 + <int>t_47
    int t_53 = <int>t_52 + <int>t_48
    int t_54 = <int>t_53 + <int>t_49
    int t_55 = <int>2
    int t_56 = <int>t_43 * <int>t_55
    int t_57 = <int>t_54 + <int>t_56
    int t_58 = <int>t_57
    byte t_59 =     call<function> printInt(<int>t_58)
    int t_60 = <int>0
    return <int>t_60


[94m[Info]    [0m[Reporting.Logs.logInfo#75] Running linearizer internal transformation: Value propagator
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Successfully completed internal linearizer transformation: Value propagator
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Running linearizer internal transformation: Expression substituter
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Successfully completed internal linearizer transformation: Expression substituter
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Optimizing IR round 1 (took 0 ms)
[94m[Info]    [0m[Reporting.Logs.logInfo#75] > BEFORE ROUND
struct Array extends [Array, Object]
    field obj<Object> elements;
    field int length;
    field int elementSize;
    method byte Object.equals ( obj<Object>)
    method int Object.getHashCode ()
    method obj<String> Array.toString ()

struct Object extends [Object]
    method byte Object.equals ( obj<Object>)
    method int Object.getHashCode ()
    method obj<String> Object.toString ()

struct String extends [String, Object]
    method int String.charAt ( int)
    method byte String.equals ( obj<Object>)
    method obj<String> String.concat ( obj<String>)
    method byte String.startsWith ( obj<String>)
    method byte String.endsWith ( obj<String>)
    method array<byte> String.getBytes ()
    method int String.indexOf ( int)
    method int String.length ()
    method obj<String> String.substring ( int)
    method obj<String> String.toString ()
    method int String.getHashCode ()

int main()
    int t_7 = <int>1
    int t_8 = <int>t_7
    int t_9 = <int>2
    int t_10 = <int>t_9
    int t_11 = <int>1
    int t_12 = <int>t_11
    int t_13 = <int>2
    int t_14 = <int>t_13
    int t_15 = <int>1
    int t_16 = <int>t_15
    int t_17 = <int>2
    int t_18 = <int>t_17
    int t_19 = <int>42
    int t_20 = <int>t_19
    int t_21 = <int>2
    int t_22 = <int>t_21
    int t_23 = <int>1
    int t_24 = <int>t_23
    int t_25 = <int>2
    int t_26 = <int>t_25
    int t_27 = <int>1
    int t_28 = <int>t_27
    int t_29 = <int>2
    int t_30 = <int>t_29
    int t_31 = <int>1
    int t_32 = <int>t_31
    int t_33 = <int>2
    int t_34 = <int>t_33
    int t_35 = <int>1
    int t_36 = <int>2
    int t_37 = <int>1
    int t_38 = <int>2
    int t_39 = <int>1
    int t_40 = <int>2
    int t_41 = <int>42
    int t_42 =     call<function> foo(<int>t_35, <int>t_36, <int>t_37, <int>t_38, <int>t_39, <int>t_40, <int>t_41)
    return <int>t_42

int foo(int t_43, int t_44, int t_45, int t_46, int t_47, int t_48, int t_49)
    int t_50 = <int>t_44 + <int>t_45
    int t_51 = <int>t_50 + <int>t_46
    int t_52 = <int>t_51 + <int>t_47
    int t_53 = <int>t_52 + <int>t_48
    int t_54 = <int>t_53 + <int>t_49
    int t_55 = <int>2
    int t_56 = <int>t_43 * <int>t_55
    int t_57 = <int>t_54 + <int>t_56
    int t_58 = <int>t_57
    byte t_59 =     call<function> printInt(<int>t_58)
    int t_60 = <int>0
    return <int>t_60


[94m[Info]    [0m[Reporting.Logs.logInfo#75] > AFTER ROUND
struct Array extends [Array, Object]
    field obj<Object> elements;
    field int length;
    field int elementSize;
    method byte Object.equals ( obj<Object>)
    method int Object.getHashCode ()
    method obj<String> Array.toString ()

struct Object extends [Object]
    method byte Object.equals ( obj<Object>)
    method int Object.getHashCode ()
    method obj<String> Object.toString ()

struct String extends [String, Object]
    method int String.charAt ( int)
    method byte String.equals ( obj<Object>)
    method obj<String> String.concat ( obj<String>)
    method byte String.startsWith ( obj<String>)
    method byte String.endsWith ( obj<String>)
    method array<byte> String.getBytes ()
    method int String.indexOf ( int)
    method int String.length ()
    method obj<String> String.substring ( int)
    method obj<String> String.toString ()
    method int String.getHashCode ()

int main()
    int t_42 =     call<function> foo(<int>1, <int>2, <int>1, <int>2, <int>1, <int>2, <int>42)
    return <int>t_42

int foo(int t_43, int t_44, int t_45, int t_46, int t_47, int t_48, int t_49)
    int t_50 = <int>t_44 + <int>t_45
    int t_51 = <int>t_50 + <int>t_46
    int t_52 = <int>t_51 + <int>t_47
    int t_53 = <int>t_52 + <int>t_48
    int t_54 = <int>t_53 + <int>t_49
    int t_56 = <int>t_43 * <int>2
    int t_57 = <int>t_54 + <int>t_56
    int t_58 = <int>t_57
    discard<byte> call<function> printInt(<int>t_58)
    return <int>0


[94m[Info]    [0m[Reporting.Logs.logInfo#75] Running linearizer internal transformation: Value propagator
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Successfully completed internal linearizer transformation: Value propagator
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Running linearizer internal transformation: Expression substituter
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Successfully completed internal linearizer transformation: Expression substituter
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Optimizing IR round 2 (took 9 ms)
[94m[Info]    [0m[Reporting.Logs.logInfo#75] > BEFORE ROUND
struct Array extends [Array, Object]
    field obj<Object> elements;
    field int length;
    field int elementSize;
    method byte Object.equals ( obj<Object>)
    method int Object.getHashCode ()
    method obj<String> Array.toString ()

struct Object extends [Object]
    method byte Object.equals ( obj<Object>)
    method int Object.getHashCode ()
    method obj<String> Object.toString ()

struct String extends [String, Object]
    method int String.charAt ( int)
    method byte String.equals ( obj<Object>)
    method obj<String> String.concat ( obj<String>)
    method byte String.startsWith ( obj<String>)
    method byte String.endsWith ( obj<String>)
    method array<byte> String.getBytes ()
    method int String.indexOf ( int)
    method int String.length ()
    method obj<String> String.substring ( int)
    method obj<String> String.toString ()
    method int String.getHashCode ()

int main()
    int t_42 =     call<function> foo(<int>1, <int>2, <int>1, <int>2, <int>1, <int>2, <int>42)
    return <int>t_42

int foo(int t_43, int t_44, int t_45, int t_46, int t_47, int t_48, int t_49)
    int t_50 = <int>t_44 + <int>t_45
    int t_51 = <int>t_50 + <int>t_46
    int t_52 = <int>t_51 + <int>t_47
    int t_53 = <int>t_52 + <int>t_48
    int t_54 = <int>t_53 + <int>t_49
    int t_56 = <int>t_43 * <int>2
    int t_57 = <int>t_54 + <int>t_56
    int t_58 = <int>t_57
    discard<byte> call<function> printInt(<int>t_58)
    return <int>0


[94m[Info]    [0m[Reporting.Logs.logInfo#75] > AFTER ROUND
struct Array extends [Array, Object]
    field obj<Object> elements;
    field int length;
    field int elementSize;
    method byte Object.equals ( obj<Object>)
    method int Object.getHashCode ()
    method obj<String> Array.toString ()

struct Object extends [Object]
    method byte Object.equals ( obj<Object>)
    method int Object.getHashCode ()
    method obj<String> Object.toString ()

struct String extends [String, Object]
    method int String.charAt ( int)
    method byte String.equals ( obj<Object>)
    method obj<String> String.concat ( obj<String>)
    method byte String.startsWith ( obj<String>)
    method byte String.endsWith ( obj<String>)
    method array<byte> String.getBytes ()
    method int String.indexOf ( int)
    method int String.length ()
    method obj<String> String.substring ( int)
    method obj<String> String.toString ()
    method int String.getHashCode ()

int main()
    int t_42 =     call<function> foo(<int>1, <int>2, <int>1, <int>2, <int>1, <int>2, <int>42)
    return <int>t_42

int foo(int t_43, int t_44, int t_45, int t_46, int t_47, int t_48, int t_49)
    int t_50 = <int>t_44 + <int>t_45
    int t_51 = <int>t_50 + <int>t_46
    int t_52 = <int>t_51 + <int>t_47
    int t_53 = <int>t_52 + <int>t_48
    int t_54 = <int>t_53 + <int>t_49
    int t_56 = <int>t_43 * <int>2
    int t_57 = <int>t_54 + <int>t_56
    int t_58 = <int>t_57
    discard<byte> call<function> printInt(<int>t_58)
    return <int>0


[94m[Info]    [0m[Reporting.Logs.logInfo#75] Running linearizer internal transformation: Convert to FIR
[94m[Info]    [0m[Reporting.Logs.logInfo#75] AST to convert:
struct Array extends [Array, Object]
    field obj<Object> elements;
    field int length;
    field int elementSize;
    method byte Object.equals ( obj<Object>)
    method int Object.getHashCode ()
    method obj<String> Array.toString ()

struct Object extends [Object]
    method byte Object.equals ( obj<Object>)
    method int Object.getHashCode ()
    method obj<String> Object.toString ()

struct String extends [String, Object]
    method int String.charAt ( int)
    method byte String.equals ( obj<Object>)
    method obj<String> String.concat ( obj<String>)
    method byte String.startsWith ( obj<String>)
    method byte String.endsWith ( obj<String>)
    method array<byte> String.getBytes ()
    method int String.indexOf ( int)
    method int String.length ()
    method obj<String> String.substring ( int)
    method obj<String> String.toString ()
    method int String.getHashCode ()

int main()
    int t_42 =     call<function> foo(<int>1, <int>2, <int>1, <int>2, <int>1, <int>2, <int>42)
    return <int>t_42

int foo(int t_43, int t_44, int t_45, int t_46, int t_47, int t_48, int t_49)
    int t_50 = <int>t_44 + <int>t_45
    int t_51 = <int>t_50 + <int>t_46
    int t_52 = <int>t_51 + <int>t_47
    int t_53 = <int>t_52 + <int>t_48
    int t_54 = <int>t_53 + <int>t_49
    int t_56 = <int>t_43 * <int>2
    int t_57 = <int>t_54 + <int>t_56
    int t_58 = <int>t_57
    discard<byte> call<function> printInt(<int>t_58)
    return <int>0


[94m[Info]    [0m[Reporting.Logs.logInfo#75] Successfully completed internal linearizer transformation: Convert to FIR
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Linearizer terminated
[94m[Info]    [0m[Reporting.Logs.logInfo#75] IR conversion done./play_fck.lat

.metadata: [
  .classes: [
    Array  extends [SymIdent "Array", SymIdent "Object"] : [
      .fields: [
        Object & elements;
        int length;
        int elementSize;
      ]
      .methods: [
        int (Object &)Object.equals;
        int () Object.getHashCode;
        String & () Array.toString;
      ]
    ]
    Object  extends [SymIdent "Object"] : [
      .fields: [
        ]
      .methods: [
        int (Object &)Object.equals;
        int () Object.getHashCode;
        String & () Object.toString;
      ]
    ]
    String  extends [SymIdent "String", SymIdent "Object"] : [
      .fields: [
        ]
      .methods: [
        int (int)String.charAt;
        int (Object &)String.equals;
        String & (String &)String.concat;
        int (String &)String.startsWith;
        int (String &)String.endsWith;
        int [] & () String.getBytes;
        int (int)String.indexOf;
        int () String.length;
        String & (int)String.substring;
        String & () String.toString;
        int () String.getHashCode;
      ]
    ]
    ~cl_TopLevel  extends [] : [
      .fields: [
        ]
      .methods: [
        Array & () Array.toString;
        Object & () Object.toString;
        int () Object.getHashCode;
        int (Object &)Object.equals;
        int (Object &)String.equals;
        int () String.getHashCode;
        String & () String.toString;
        String & () String.substring;
        int () String.length;
        int (String &, int)String.indexOf;
        String & () String.getBytes;
        int (String &)String.endsWith;
        int (String &)String.startsWith;
        String & (String &, String &)String.concat;
        int (int)String.charAt;
        int (String &)~cl_TopLevel.printString;
        int (int)~cl_TopLevel.printInt;
        int (int)~cl_TopLevel.printByte;
        int (int)~cl_TopLevel.printBoolean;
        int (Array &)~cl_TopLevel.printBinArray;
        String & (int)~cl_TopLevel.byteToString;
        String & (int)~cl_TopLevel.boolToString;
        String & (int)~cl_TopLevel.intToString;
        int (Object &)~cl_TopLevel.print;
        int () ~cl_TopLevel.error;
        int () ~cl_TopLevel.readInt;
        String & () ~cl_TopLevel.readString;
        Object & (Object &, Object &)~cl_TopLevel.__cast;
        int () ~cl_TopLevel.main;
        int (int, int, int, int, int, int, int)~cl_TopLevel.foo;
      ]
    ]
  ]
]
.method int ~cl_TopLevel.main (): [
.L_entry:
  %v_t_42 := call int ~cl_TopLevel.foo (1, 2, 1, 2, 1, 2, 42);
  %v___temp_0 := int %v_t_42;
  %v_return := int %v___temp_0;
  jump .L_exit;
.L_exit:
  return int %v_return;
]
.method int ~cl_TopLevel.foo (int %a_t_43, int %a_t_44, int %a_t_45, int %a_t_46, int %a_t_47, int %a_t_48, int %a_t_49): [
.L_entry:
  %v_t_43 := load int & param 0 %a_t_43;
  %v_t_44 := load int & param 1 %a_t_44;
  %v_t_45 := load int & param 2 %a_t_45;
  %v_t_46 := load int & param 3 %a_t_46;
  %v_t_47 := load int & param 4 %a_t_47;
  %v_t_48 := load int & param 5 %a_t_48;
  %v_t_49 := load int & param 6 %a_t_49;
  %v_t_50 := int %v_t_44 + int %v_t_45;
  %v_t_51 := int %v_t_50 + int %v_t_46;
  %v_t_52 := int %v_t_51 + int %v_t_47;
  %v_t_53 := int %v_t_52 + int %v_t_48;
  %v_t_54 := int %v_t_53 + int %v_t_49;
  %v_t_56 := int %v_t_43 * 2;
  %v_t_57 := int %v_t_54 + int %v_t_56;
  %v_t_58 := int %v_t_57;
  call int ~cl_TopLevel.printInt (int %v_t_58);
  %v___temp_1 := 0;
  %v_return := int %v___temp_1;
  jump .L_exit;
.L_exit:
  return int %v_return;
]

[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Try collapsing CFG nodes in CFG [
[".L_entry",".L_exit"]
".L_entry" -> fromList [LabIdent ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_entry"]

]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Collapse eligible edge .L_entry == to => .L_exit
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Try collapsing CFG nodes in CFG [
[".L_entry"]
".L_entry" -> fromList [] <- fromList []

]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Try collapsing CFG nodes in CFG [
[".L_entry",".L_exit"]
".L_entry" -> fromList [LabIdent ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_entry"]

]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Collapse eligible edge .L_entry == to => .L_exit
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Try collapsing CFG nodes in CFG [
[".L_entry"]
".L_entry" -> fromList [] <- fromList []

]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> GENERATED CFGS

CFG for ~cl_TopLevel.main:
[".L_entry",".L_exit"]
".L_entry" -> fromList [LabIdent ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_entry"]
Code: 
.method int ~cl_TopLevel.main (): [
.L_entry:
  %v_t_42 := call int ~cl_TopLevel.foo (1, 2, 1, 2, 1, 2, 42);
  %v___temp_0 := int %v_t_42;
  %v_return := int %v___temp_0;
  jump .L_exit;
.L_exit:
  return int %v_return;
]

CFG for ~cl_TopLevel.foo:
[".L_entry",".L_exit"]
".L_entry" -> fromList [LabIdent ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_entry"]
Code: 
.method int ~cl_TopLevel.foo (int %a_t_43, int %a_t_44, int %a_t_45, int %a_t_46, int %a_t_47, int %a_t_48, int %a_t_49): [
.L_entry:
  %v_t_43 := load int & param 0 %a_t_43;
  %v_t_44 := load int & param 1 %a_t_44;
  %v_t_45 := load int & param 2 %a_t_45;
  %v_t_46 := load int & param 3 %a_t_46;
  %v_t_47 := load int & param 4 %a_t_47;
  %v_t_48 := load int & param 5 %a_t_48;
  %v_t_49 := load int & param 6 %a_t_49;
  %v_t_50 := int %v_t_44 + int %v_t_45;
  %v_t_51 := int %v_t_50 + int %v_t_46;
  %v_t_52 := int %v_t_51 + int %v_t_47;
  %v_t_53 := int %v_t_52 + int %v_t_48;
  %v_t_54 := int %v_t_53 + int %v_t_49;
  %v_t_56 := int %v_t_43 * 2;
  %v_t_57 := int %v_t_54 + int %v_t_56;
  %v_t_58 := int %v_t_57;
  call int ~cl_TopLevel.printInt (int %v_t_58);
  %v___temp_1 := 0;
  %v_return := int %v___temp_1;
  jump .L_exit;
.L_exit:
  return int %v_return;
]


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> GENERATED INTERMEDIATE STEP Removing unreachable blocks...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] CFG for ~cl_TopLevel.main:
[".L_entry",".L_exit"]
".L_entry" -> fromList [LabIdent ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_entry"]
Code: 
.method int ~cl_TopLevel.main (): [
.L_entry:
  %v_t_42 := call int ~cl_TopLevel.foo (1, 2, 1, 2, 1, 2, 42);
  %v___temp_0 := int %v_t_42;
  %v_return := int %v___temp_0;
  jump .L_exit;
.L_exit:
  return int %v_return;
]

CFG for ~cl_TopLevel.foo:
[".L_entry",".L_exit"]
".L_entry" -> fromList [LabIdent ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_entry"]
Code: 
.method int ~cl_TopLevel.foo (int %a_t_43, int %a_t_44, int %a_t_45, int %a_t_46, int %a_t_47, int %a_t_48, int %a_t_49): [
.L_entry:
  %v_t_43 := load int & param 0 %a_t_43;
  %v_t_44 := load int & param 1 %a_t_44;
  %v_t_45 := load int & param 2 %a_t_45;
  %v_t_46 := load int & param 3 %a_t_46;
  %v_t_47 := load int & param 4 %a_t_47;
  %v_t_48 := load int & param 5 %a_t_48;
  %v_t_49 := load int & param 6 %a_t_49;
  %v_t_50 := int %v_t_44 + int %v_t_45;
  %v_t_51 := int %v_t_50 + int %v_t_46;
  %v_t_52 := int %v_t_51 + int %v_t_47;
  %v_t_53 := int %v_t_52 + int %v_t_48;
  %v_t_54 := int %v_t_53 + int %v_t_49;
  %v_t_56 := int %v_t_43 * 2;
  %v_t_57 := int %v_t_54 + int %v_t_56;
  %v_t_58 := int %v_t_57;
  call int ~cl_TopLevel.printInt (int %v_t_58);
  %v___temp_1 := 0;
  %v_return := int %v___temp_1;
  jump .L_exit;
.L_exit:
  return int %v_return;
]


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> END STEP Removing unreachable blocks...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> GENERATED INTERMEDIATE STEP Analysing liveness...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] CFG for ~cl_TopLevel.main:
[".L_entry",".L_exit"]
".L_entry" -> fromList [LabIdent ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_entry"]
Liveness at start of .L_entry: in = [], out = [], use = [], kill = []
Liveness at end of .L_entry: in = [("%v_return",(3,Int ()))], out = [("%v_return",(2,Int ()))], use = [], kill = []
Liveness at start of .L_exit: in = [("%v_return",(1,Int ()))], out = [("%v_return",(0,Int ()))], use = [], kill = []
Liveness at end of .L_exit: in = [("%v_return",(0,Int ()))], out = [], use = [("%v_return",Int ())], kill = []
Code: 
.method int ~cl_TopLevel.main (): [
.L_entry:
  %v_t_42 := call int ~cl_TopLevel.foo (1, 2, 1, 2, 1, 2, 42);
  %v___temp_0 := int %v_t_42;
  %v_return := int %v___temp_0;
  jump .L_exit;
.L_exit:
  return int %v_return;
]

CFG for ~cl_TopLevel.foo:
[".L_entry",".L_exit"]
".L_entry" -> fromList [LabIdent ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_entry"]
Liveness at start of .L_entry: in = [("%a_t_46",(4,Ref () (Int ()))),("%a_t_44",(2,Ref () (Int ()))),("%a_t_48",(6,Ref () (Int ()))),("%a_t_47",(5,Ref () (Int ()))),("%a_t_45",(3,Ref () (Int ()))),("%a_t_43",(1,Ref () (Int ()))),("%a_t_49",(7,Ref () (Int ())))], out = [("%a_t_46",(3,Ref () (Int ()))),("%a_t_44",(1,Ref () (Int ()))),("%a_t_48",(5,Ref () (Int ()))),("%a_t_47",(4,Ref () (Int ()))),("%a_t_45",(2,Ref () (Int ()))),("%a_t_43",(0,Ref () (Int ()))),("%a_t_49",(6,Ref () (Int ())))], use = [], kill = []
Liveness at end of .L_entry: in = [("%v_return",(3,Int ()))], out = [("%v_return",(2,Int ()))], use = [], kill = []
Liveness at start of .L_exit: in = [("%v_return",(1,Int ()))], out = [("%v_return",(0,Int ()))], use = [], kill = []
Liveness at end of .L_exit: in = [("%v_return",(0,Int ()))], out = [], use = [("%v_return",Int ())], kill = []
Code: 
.method int ~cl_TopLevel.foo (int %a_t_43, int %a_t_44, int %a_t_45, int %a_t_46, int %a_t_47, int %a_t_48, int %a_t_49): [
.L_entry:
  %v_t_43 := load int & param 0 %a_t_43;
  %v_t_44 := load int & param 1 %a_t_44;
  %v_t_45 := load int & param 2 %a_t_45;
  %v_t_46 := load int & param 3 %a_t_46;
  %v_t_47 := load int & param 4 %a_t_47;
  %v_t_48 := load int & param 5 %a_t_48;
  %v_t_49 := load int & param 6 %a_t_49;
  %v_t_50 := int %v_t_44 + int %v_t_45;
  %v_t_51 := int %v_t_50 + int %v_t_46;
  %v_t_52 := int %v_t_51 + int %v_t_47;
  %v_t_53 := int %v_t_52 + int %v_t_48;
  %v_t_54 := int %v_t_53 + int %v_t_49;
  %v_t_56 := int %v_t_43 * 2;
  %v_t_57 := int %v_t_54 + int %v_t_56;
  %v_t_58 := int %v_t_57;
  call int ~cl_TopLevel.printInt (int %v_t_58);
  %v___temp_1 := 0;
  %v_return := int %v___temp_1;
  jump .L_exit;
.L_exit:
  return int %v_return;
]


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> END STEP Analysing liveness...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> GENERATED INTERMEDIATE STEP Transforming to SSA...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] CFG for ~cl_TopLevel.main:
[".L_entry",".L_exit"]
".L_entry" -> fromList [LabIdent ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_entry"]
Code: 
.method int ~cl_TopLevel.main (): [
.L_entry:
  %v_t_42 := call int ~cl_TopLevel.foo (1, 2, 1, 2, 1, 2, 42);
  %v___temp_0 := int %v_t_42;
  %v_return := int %v___temp_0;
  jump .L_exit;
.L_exit:
  return int %v_return;
]

CFG for ~cl_TopLevel.foo:
[".L_entry",".L_exit"]
".L_entry" -> fromList [LabIdent ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_entry"]
Code: 
.method int ~cl_TopLevel.foo (int %a_t_43, int %a_t_44, int %a_t_45, int %a_t_46, int %a_t_47, int %a_t_48, int %a_t_49): [
.L_entry:
  %v_t_43 := load int & param 0 %a_t_43;
  %v_t_44 := load int & param 1 %a_t_44;
  %v_t_45 := load int & param 2 %a_t_45;
  %v_t_46 := load int & param 3 %a_t_46;
  %v_t_47 := load int & param 4 %a_t_47;
  %v_t_48 := load int & param 5 %a_t_48;
  %v_t_49 := load int & param 6 %a_t_49;
  %v_t_50 := int %v_t_44 + int %v_t_45;
  %v_t_51 := int %v_t_50 + int %v_t_46;
  %v_t_52 := int %v_t_51 + int %v_t_47;
  %v_t_53 := int %v_t_52 + int %v_t_48;
  %v_t_54 := int %v_t_53 + int %v_t_49;
  %v_t_56 := int %v_t_43 * 2;
  %v_t_57 := int %v_t_54 + int %v_t_56;
  %v_t_58 := int %v_t_57;
  call int ~cl_TopLevel.printInt (int %v_t_58);
  %v___temp_1 := 0;
  %v_return := int %v___temp_1;
  jump .L_exit;
.L_exit:
  return int %v_return;
]


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> END STEP Transforming to SSA...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> ENTIRE SSA CODE DUMP 


[94m[Info]    [0m[Reporting.Logs.logInfo#75] [(SSA [".L_entry",".L_exit"]
".L_entry" -> fromList [LabIdent ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_entry"]
,Mthd ./play_fck.lat:1:1 (Int ./play_fck.lat:1:1) (QIdent ./play_fck.lat:1:5 (SymIdent "~cl_TopLevel") (SymIdent "main")) [] [ILabel ./play_fck.lat:1:1 (LabIdent ".L_entry"),ICall ./play_fck.lat:3:10 (ValIdent "%v_t_42") (Call ./play_fck.lat:3:10 (Int ./play_fck.lat:7:1) (QIdent ./play_fck.lat:3:10 (SymIdent "~cl_TopLevel") (SymIdent "foo")) [VInt ./play_fck.lat:3:10 1,VInt ./play_fck.lat:3:10 2,VInt ./play_fck.lat:3:10 1,VInt ./play_fck.lat:3:10 2,VInt ./play_fck.lat:3:10 1,VInt ./play_fck.lat:3:10 2,VInt ./play_fck.lat:3:10 42] []),ISet ./play_fck.lat:3:3 (ValIdent "%v___temp_0") (VVal ./play_fck.lat:3:3 (Int ./play_fck.lat:7:1) (ValIdent "%v_t_42")),ISet ./play_fck.lat:3:3 (ValIdent "%v_return") (VVal ./play_fck.lat:3:3 (Int ./play_fck.lat:7:1) (ValIdent "%v___temp_0")),IJmp ./play_fck.lat:3:3 (LabIdent ".L_exit"),ILabel ./play_fck.lat:1:1 (LabIdent ".L_exit"),IRet ./play_fck.lat:1:1 (VVal ./play_fck.lat:1:1 (Int ./play_fck.lat:1:1) (ValIdent "%v_return"))]),(SSA [".L_entry",".L_exit"]
".L_entry" -> fromList [LabIdent ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_entry"]
,Mthd ./play_fck.lat:7:1 (Int ./play_fck.lat:7:1) (QIdent ./play_fck.lat:7:5 (SymIdent "~cl_TopLevel") (SymIdent "foo")) [Param ./play_fck.lat:7:1 (Int ./play_fck.lat:7:9) (ValIdent "%a_t_43"),Param ./play_fck.lat:7:1 (Int ./play_fck.lat:7:15) (ValIdent "%a_t_44"),Param ./play_fck.lat:7:1 (Int ./play_fck.lat:7:21) (ValIdent "%a_t_45"),Param ./play_fck.lat:7:1 (Int ./play_fck.lat:7:27) (ValIdent "%a_t_46"),Param ./play_fck.lat:7:1 (Int ./play_fck.lat:7:33) (ValIdent "%a_t_47"),Param ./play_fck.lat:7:1 (Int ./play_fck.lat:7:39) (ValIdent "%a_t_48"),Param ./play_fck.lat:7:1 (Int ./play_fck.lat:7:45) (ValIdent "%a_t_49")] [ILabel ./play_fck.lat:7:1 (LabIdent ".L_entry"),ILoad ./play_fck.lat:7:1 (ValIdent "%v_t_43") (PParam ./play_fck.lat:7:1 (Ref ./play_fck.lat:7:1 (Int ./play_fck.lat:7:9)) 0 (ValIdent "%a_t_43")),ILoad ./play_fck.lat:7:1 (ValIdent "%v_t_44") (PParam ./play_fck.lat:7:1 (Ref ./play_fck.lat:7:1 (Int ./play_fck.lat:7:15)) 1 (ValIdent "%a_t_44")),ILoad ./play_fck.lat:7:1 (ValIdent "%v_t_45") (PParam ./play_fck.lat:7:1 (Ref ./play_fck.lat:7:1 (Int ./play_fck.lat:7:21)) 2 (ValIdent "%a_t_45")),ILoad ./play_fck.lat:7:1 (ValIdent "%v_t_46") (PParam ./play_fck.lat:7:1 (Ref ./play_fck.lat:7:1 (Int ./play_fck.lat:7:27)) 3 (ValIdent "%a_t_46")),ILoad ./play_fck.lat:7:1 (ValIdent "%v_t_47") (PParam ./play_fck.lat:7:1 (Ref ./play_fck.lat:7:1 (Int ./play_fck.lat:7:33)) 4 (ValIdent "%a_t_47")),ILoad ./play_fck.lat:7:1 (ValIdent "%v_t_48") (PParam ./play_fck.lat:7:1 (Ref ./play_fck.lat:7:1 (Int ./play_fck.lat:7:39)) 5 (ValIdent "%a_t_48")),ILoad ./play_fck.lat:7:1 (ValIdent "%v_t_49") (PParam ./play_fck.lat:7:1 (Ref ./play_fck.lat:7:1 (Int ./play_fck.lat:7:45)) 6 (ValIdent "%a_t_49")),IOp ./play_fck.lat:15:30 (ValIdent "%v_t_50") (VVal ./play_fck.lat:15:30 (Int ./play_fck.lat:7:15) (ValIdent "%v_t_44")) (OpAdd ./play_fck.lat:15:30) (VVal ./play_fck.lat:15:30 (Int ./play_fck.lat:7:15) (ValIdent "%v_t_45")),IOp ./play_fck.lat:15:30 (ValIdent "%v_t_51") (VVal ./play_fck.lat:15:30 (Int ./play_fck.lat:7:15) (ValIdent "%v_t_50")) (OpAdd ./play_fck.lat:15:30) (VVal ./play_fck.lat:15:30 (Int ./play_fck.lat:7:15) (ValIdent "%v_t_46")),IOp ./play_fck.lat:15:30 (ValIdent "%v_t_52") (VVal ./play_fck.lat:15:30 (Int ./play_fck.lat:7:15) (ValIdent "%v_t_51")) (OpAdd ./play_fck.lat:15:30) (VVal ./play_fck.lat:15:30 (Int ./play_fck.lat:7:15) (ValIdent "%v_t_47")),IOp ./play_fck.lat:15:30 (ValIdent "%v_t_53") (VVal ./play_fck.lat:15:30 (Int ./play_fck.lat:7:15) (ValIdent "%v_t_52")) (OpAdd ./play_fck.lat:15:30) (VVal ./play_fck.lat:15:30 (Int ./play_fck.lat:7:15) (ValIdent "%v_t_48")),IOp ./play_fck.lat:15:30 (ValIdent "%v_t_54") (VVal ./play_fck.lat:15:30 (Int ./play_fck.lat:7:15) (ValIdent "%v_t_53")) (OpAdd ./play_fck.lat:15:30) (VVal ./play_fck.lat:15:30 (Int ./play_fck.lat:7:15) (ValIdent "%v_t_49")),IOp ./play_fck.lat:15:18 (ValIdent "%v_t_56") (VVal ./play_fck.lat:15:18 (Int ./play_fck.lat:15:17) (ValIdent "%v_t_43")) (OpMul ./play_fck.lat:15:18) (VInt ./play_fck.lat:15:18 2),IOp ./play_fck.lat:15:30 (ValIdent "%v_t_57") (VVal ./play_fck.lat:15:30 (Int ./play_fck.lat:7:15) (ValIdent "%v_t_54")) (OpAdd ./play_fck.lat:15:30) (VVal ./play_fck.lat:15:30 (Int ./play_fck.lat:7:15) (ValIdent "%v_t_56")),ISet ./play_fck.lat:15:13 (ValIdent "%v_t_58") (VVal ./play_fck.lat:15:13 (Int ./play_fck.lat:7:15) (ValIdent "%v_t_57")),IVCall ./play_fck.lat:17:3 (Call ./play_fck.lat:17:3 (Int inside standard library) (QIdent ./play_fck.lat:17:3 (SymIdent "~cl_TopLevel") (SymIdent "printInt")) [VVal ./play_fck.lat:17:3 (Int inside standard library) (ValIdent "%v_t_58")] []),ISet ./play_fck.lat:18:3 (ValIdent "%v___temp_1") (VInt ./play_fck.lat:18:3 0),ISet ./play_fck.lat:18:3 (ValIdent "%v_return") (VVal ./play_fck.lat:18:3 (Int ./play_fck.lat:18:10) (ValIdent "%v___temp_1")),IJmp ./play_fck.lat:18:3 (LabIdent ".L_exit"),ILabel ./play_fck.lat:7:1 (LabIdent ".L_exit"),IRet ./play_fck.lat:7:1 (VVal ./play_fck.lat:7:1 (Int ./play_fck.lat:7:1) (ValIdent "%v_return"))])]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> END SSA CODE DUMP 


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> GENERATED INTERMEDIATE STEP Optimising Espresso...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] CFG for ~cl_TopLevel.main:
[".L_entry",".L_exit"]
".L_entry" -> fromList [LabIdent ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_entry"]
Code: 
.method int ~cl_TopLevel.main (): [
.L_entry:
  %v_t_42 := call int ~cl_TopLevel.foo (1, 2, 1, 2, 1, 2, 42);
  %v___temp_0 := int %v_t_42;
  %v_return := int %v___temp_0;
  jump .L_exit;
.L_exit:
  return int %v_return;
]

CFG for ~cl_TopLevel.foo:
[".L_entry",".L_exit"]
".L_entry" -> fromList [LabIdent ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_entry"]
Code: 
.method int ~cl_TopLevel.foo (int %a_t_43, int %a_t_44, int %a_t_45, int %a_t_46, int %a_t_47, int %a_t_48, int %a_t_49): [
.L_entry:
  %v_t_43 := load int & param 0 %a_t_43;
  %v_t_44 := load int & param 1 %a_t_44;
  %v_t_45 := load int & param 2 %a_t_45;
  %v_t_46 := load int & param 3 %a_t_46;
  %v_t_47 := load int & param 4 %a_t_47;
  %v_t_48 := load int & param 5 %a_t_48;
  %v_t_49 := load int & param 6 %a_t_49;
  %v_t_50 := int %v_t_44 + int %v_t_45;
  %v_t_51 := int %v_t_50 + int %v_t_46;
  %v_t_52 := int %v_t_51 + int %v_t_47;
  %v_t_53 := int %v_t_52 + int %v_t_48;
  %v_t_54 := int %v_t_53 + int %v_t_49;
  %v_t_56 := int %v_t_43 * 2;
  %v_t_57 := int %v_t_54 + int %v_t_56;
  %v_t_58 := int %v_t_57;
  call int ~cl_TopLevel.printInt (int %v_t_58);
  %v___temp_1 := 0;
  %v_return := int %v___temp_1;
  jump .L_exit;
.L_exit:
  return int %v_return;
]


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> END STEP Optimising Espresso...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> ENTIRE OPTIMIZED CODE DUMP 


[94m[Info]    [0m[Reporting.Logs.logInfo#75] [(SSA [".L_entry",".L_exit"]
".L_entry" -> fromList [LabIdent ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_entry"]
,Mthd ./play_fck.lat:1:1 (Int ./play_fck.lat:1:1) (QIdent ./play_fck.lat:1:5 (SymIdent "~cl_TopLevel") (SymIdent "main")) [] [ILabel ./play_fck.lat:1:1 (LabIdent ".L_entry"),ICall ./play_fck.lat:3:10 (ValIdent "%v_t_42") (Call ./play_fck.lat:3:10 (Int ./play_fck.lat:7:1) (QIdent ./play_fck.lat:3:10 (SymIdent "~cl_TopLevel") (SymIdent "foo")) [VInt ./play_fck.lat:3:10 1,VInt ./play_fck.lat:3:10 2,VInt ./play_fck.lat:3:10 1,VInt ./play_fck.lat:3:10 2,VInt ./play_fck.lat:3:10 1,VInt ./play_fck.lat:3:10 2,VInt ./play_fck.lat:3:10 42] []),ISet ./play_fck.lat:3:3 (ValIdent "%v___temp_0") (VVal ./play_fck.lat:3:3 (Int ./play_fck.lat:7:1) (ValIdent "%v_t_42")),ISet ./play_fck.lat:3:3 (ValIdent "%v_return") (VVal ./play_fck.lat:3:3 (Int ./play_fck.lat:7:1) (ValIdent "%v___temp_0")),IJmp ./play_fck.lat:3:3 (LabIdent ".L_exit"),ILabel ./play_fck.lat:1:1 (LabIdent ".L_exit"),IRet ./play_fck.lat:1:1 (VVal ./play_fck.lat:1:1 (Int ./play_fck.lat:1:1) (ValIdent "%v_return"))]),(SSA [".L_entry",".L_exit"]
".L_entry" -> fromList [LabIdent ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_entry"]
,Mthd ./play_fck.lat:7:1 (Int ./play_fck.lat:7:1) (QIdent ./play_fck.lat:7:5 (SymIdent "~cl_TopLevel") (SymIdent "foo")) [Param ./play_fck.lat:7:1 (Int ./play_fck.lat:7:9) (ValIdent "%a_t_43"),Param ./play_fck.lat:7:1 (Int ./play_fck.lat:7:15) (ValIdent "%a_t_44"),Param ./play_fck.lat:7:1 (Int ./play_fck.lat:7:21) (ValIdent "%a_t_45"),Param ./play_fck.lat:7:1 (Int ./play_fck.lat:7:27) (ValIdent "%a_t_46"),Param ./play_fck.lat:7:1 (Int ./play_fck.lat:7:33) (ValIdent "%a_t_47"),Param ./play_fck.lat:7:1 (Int ./play_fck.lat:7:39) (ValIdent "%a_t_48"),Param ./play_fck.lat:7:1 (Int ./play_fck.lat:7:45) (ValIdent "%a_t_49")] [ILabel ./play_fck.lat:7:1 (LabIdent ".L_entry"),ILoad ./play_fck.lat:7:1 (ValIdent "%v_t_43") (PParam ./play_fck.lat:7:1 (Ref ./play_fck.lat:7:1 (Int ./play_fck.lat:7:9)) 0 (ValIdent "%a_t_43")),ILoad ./play_fck.lat:7:1 (ValIdent "%v_t_44") (PParam ./play_fck.lat:7:1 (Ref ./play_fck.lat:7:1 (Int ./play_fck.lat:7:15)) 1 (ValIdent "%a_t_44")),ILoad ./play_fck.lat:7:1 (ValIdent "%v_t_45") (PParam ./play_fck.lat:7:1 (Ref ./play_fck.lat:7:1 (Int ./play_fck.lat:7:21)) 2 (ValIdent "%a_t_45")),ILoad ./play_fck.lat:7:1 (ValIdent "%v_t_46") (PParam ./play_fck.lat:7:1 (Ref ./play_fck.lat:7:1 (Int ./play_fck.lat:7:27)) 3 (ValIdent "%a_t_46")),ILoad ./play_fck.lat:7:1 (ValIdent "%v_t_47") (PParam ./play_fck.lat:7:1 (Ref ./play_fck.lat:7:1 (Int ./play_fck.lat:7:33)) 4 (ValIdent "%a_t_47")),ILoad ./play_fck.lat:7:1 (ValIdent "%v_t_48") (PParam ./play_fck.lat:7:1 (Ref ./play_fck.lat:7:1 (Int ./play_fck.lat:7:39)) 5 (ValIdent "%a_t_48")),ILoad ./play_fck.lat:7:1 (ValIdent "%v_t_49") (PParam ./play_fck.lat:7:1 (Ref ./play_fck.lat:7:1 (Int ./play_fck.lat:7:45)) 6 (ValIdent "%a_t_49")),IOp ./play_fck.lat:15:30 (ValIdent "%v_t_50") (VVal ./play_fck.lat:15:30 (Int ./play_fck.lat:7:15) (ValIdent "%v_t_44")) (OpAdd ./play_fck.lat:15:30) (VVal ./play_fck.lat:15:30 (Int ./play_fck.lat:7:15) (ValIdent "%v_t_45")),IOp ./play_fck.lat:15:30 (ValIdent "%v_t_51") (VVal ./play_fck.lat:15:30 (Int ./play_fck.lat:7:15) (ValIdent "%v_t_50")) (OpAdd ./play_fck.lat:15:30) (VVal ./play_fck.lat:15:30 (Int ./play_fck.lat:7:15) (ValIdent "%v_t_46")),IOp ./play_fck.lat:15:30 (ValIdent "%v_t_52") (VVal ./play_fck.lat:15:30 (Int ./play_fck.lat:7:15) (ValIdent "%v_t_51")) (OpAdd ./play_fck.lat:15:30) (VVal ./play_fck.lat:15:30 (Int ./play_fck.lat:7:15) (ValIdent "%v_t_47")),IOp ./play_fck.lat:15:30 (ValIdent "%v_t_53") (VVal ./play_fck.lat:15:30 (Int ./play_fck.lat:7:15) (ValIdent "%v_t_52")) (OpAdd ./play_fck.lat:15:30) (VVal ./play_fck.lat:15:30 (Int ./play_fck.lat:7:15) (ValIdent "%v_t_48")),IOp ./play_fck.lat:15:30 (ValIdent "%v_t_54") (VVal ./play_fck.lat:15:30 (Int ./play_fck.lat:7:15) (ValIdent "%v_t_53")) (OpAdd ./play_fck.lat:15:30) (VVal ./play_fck.lat:15:30 (Int ./play_fck.lat:7:15) (ValIdent "%v_t_49")),IOp ./play_fck.lat:15:18 (ValIdent "%v_t_56") (VVal ./play_fck.lat:15:18 (Int ./play_fck.lat:15:17) (ValIdent "%v_t_43")) (OpMul ./play_fck.lat:15:18) (VInt ./play_fck.lat:15:18 2),IOp ./play_fck.lat:15:30 (ValIdent "%v_t_57") (VVal ./play_fck.lat:15:30 (Int ./play_fck.lat:7:15) (ValIdent "%v_t_54")) (OpAdd ./play_fck.lat:15:30) (VVal ./play_fck.lat:15:30 (Int ./play_fck.lat:7:15) (ValIdent "%v_t_56")),ISet ./play_fck.lat:15:13 (ValIdent "%v_t_58") (VVal ./play_fck.lat:15:13 (Int ./play_fck.lat:7:15) (ValIdent "%v_t_57")),IVCall ./play_fck.lat:17:3 (Call ./play_fck.lat:17:3 (Int inside standard library) (QIdent ./play_fck.lat:17:3 (SymIdent "~cl_TopLevel") (SymIdent "printInt")) [VVal ./play_fck.lat:17:3 (Int inside standard library) (ValIdent "%v_t_58")] []),ISet ./play_fck.lat:18:3 (ValIdent "%v___temp_1") (VInt ./play_fck.lat:18:3 0),ISet ./play_fck.lat:18:3 (ValIdent "%v_return") (VVal ./play_fck.lat:18:3 (Int ./play_fck.lat:18:10) (ValIdent "%v___temp_1")),IJmp ./play_fck.lat:18:3 (LabIdent ".L_exit"),ILabel ./play_fck.lat:7:1 (LabIdent ".L_exit"),IRet ./play_fck.lat:7:1 (VVal ./play_fck.lat:7:1 (Int ./play_fck.lat:7:1) (ValIdent "%v_return"))])]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> END OPTIMIZED CODE DUMP 


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> GENERATED INTERMEDIATE STEP Reanalysing liveness...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] CFG for ~cl_TopLevel.main:
[".L_entry",".L_exit"]
".L_entry" -> fromList [LabIdent ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_entry"]
Liveness at start of .L_entry: in = [], out = [], use = [], kill = []
Liveness at end of .L_entry: in = [("%v_t_42",(4,Int ()))], out = [("%v_t_42",(3,Int ()))], use = [], kill = []
Liveness at start of .L_exit: in = [("%v_t_42",(2,Int ()))], out = [("%v_t_42",(1,Int ()))], use = [], kill = []
Liveness at end of .L_exit: in = [("%v_t_42",(0,Int ()))], out = [], use = [("%v_t_42",Int ())], kill = []
Code: 
.method int ~cl_TopLevel.main (): [
.L_entry:
  %v_t_42 := call int ~cl_TopLevel.foo (1, 2, 1, 2, 1, 2, 42);
  %v___temp_0 := int %v_t_42;
  %v_return := int %v___temp_0;
  jump .L_exit;
.L_exit:
  return int %v_return;
]

CFG for ~cl_TopLevel.foo:
[".L_entry",".L_exit"]
".L_entry" -> fromList [LabIdent ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_entry"]
Liveness at start of .L_entry: in = [("%a_t_46",(5,Ref () (Int ()))),("%a_t_44",(3,Ref () (Int ()))),("%a_t_48",(7,Ref () (Int ()))),("%a_t_47",(6,Ref () (Int ()))),("%a_t_45",(4,Ref () (Int ()))),("%a_t_43",(2,Ref () (Int ()))),("%a_t_49",(8,Ref () (Int ())))], out = [("%a_t_46",(4,Ref () (Int ()))),("%a_t_44",(2,Ref () (Int ()))),("%a_t_48",(6,Ref () (Int ()))),("%a_t_47",(5,Ref () (Int ()))),("%a_t_45",(3,Ref () (Int ()))),("%a_t_43",(1,Ref () (Int ()))),("%a_t_49",(7,Ref () (Int ())))], use = [], kill = []
Liveness at end of .L_entry: in = [], out = [], use = [], kill = []
Liveness at start of .L_exit: in = [], out = [], use = [], kill = []
Liveness at end of .L_exit: in = [], out = [], use = [], kill = []
Code: 
.method int ~cl_TopLevel.foo (int %a_t_43, int %a_t_44, int %a_t_45, int %a_t_46, int %a_t_47, int %a_t_48, int %a_t_49): [
.L_entry:
  %v_t_43 := load int & param 0 %a_t_43;
  %v_t_44 := load int & param 1 %a_t_44;
  %v_t_45 := load int & param 2 %a_t_45;
  %v_t_46 := load int & param 3 %a_t_46;
  %v_t_47 := load int & param 4 %a_t_47;
  %v_t_48 := load int & param 5 %a_t_48;
  %v_t_49 := load int & param 6 %a_t_49;
  %v_t_50 := int %v_t_44 + int %v_t_45;
  %v_t_51 := int %v_t_50 + int %v_t_46;
  %v_t_52 := int %v_t_51 + int %v_t_47;
  %v_t_53 := int %v_t_52 + int %v_t_48;
  %v_t_54 := int %v_t_53 + int %v_t_49;
  %v_t_56 := int %v_t_43 * 2;
  %v_t_57 := int %v_t_54 + int %v_t_56;
  %v_t_58 := int %v_t_57;
  call int ~cl_TopLevel.printInt (int %v_t_58);
  %v___temp_1 := 0;
  %v_return := int %v___temp_1;
  jump .L_exit;
.L_exit:
  return int %v_return;
]


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> END STEP Reanalysing liveness...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> GENERATED INTERMEDIATE STEP Allocating registers...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] CFG for ~cl_TopLevel.main:
[".L_entry",".L_exit"]
".L_entry" -> fromList [LabIdent ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_entry"]
Liveness at start of .L_entry: in = [], out = [], use = [], kill = []
Liveness at end of .L_entry: in = [("%v_t_42",(4,Int ()))], out = [("%v_t_42",(3,Int ()))], use = [], kill = []
Liveness at start of .L_exit: in = [("%v_t_42",(2,Int ()))], out = [("%v_t_42",(1,Int ()))], use = [], kill = []
Liveness at end of .L_exit: in = [("%v_t_42",(0,Int ()))], out = [], use = [("%v_t_42",Int ())], kill = []
Code: 
.method int ~cl_TopLevel.main (): [
.L_entry:
  %v_t_42 := call int ~cl_TopLevel.foo (1, 2, 1, 2, 1, 2, 42);
  %v___temp_0 := int %v_t_42;
  %v_return := int %v___temp_0;
  jump .L_exit;
.L_exit:
  return int %v_return;
]

CFG for ~cl_TopLevel.foo:
[".L_entry",".L_exit"]
".L_entry" -> fromList [LabIdent ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_entry"]
Liveness at start of .L_entry: in = [("%a_t_46",(5,Ref () (Int ()))),("%a_t_44",(3,Ref () (Int ()))),("%a_t_48",(7,Ref () (Int ()))),("%a_t_47",(6,Ref () (Int ()))),("%a_t_45",(4,Ref () (Int ()))),("%a_t_43",(2,Ref () (Int ()))),("%a_t_49",(8,Ref () (Int ())))], out = [("%a_t_46",(4,Ref () (Int ()))),("%a_t_44",(2,Ref () (Int ()))),("%a_t_48",(6,Ref () (Int ()))),("%a_t_47",(5,Ref () (Int ()))),("%a_t_45",(3,Ref () (Int ()))),("%a_t_43",(1,Ref () (Int ()))),("%a_t_49",(7,Ref () (Int ())))], use = [], kill = []
Liveness at end of .L_entry: in = [], out = [], use = [], kill = []
Liveness at start of .L_exit: in = [], out = [], use = [], kill = []
Liveness at end of .L_exit: in = [], out = [], use = [], kill = []
Code: 
.method int ~cl_TopLevel.foo (int %a_t_43, int %a_t_44, int %a_t_45, int %a_t_46, int %a_t_47, int %a_t_48, int %a_t_49): [
.L_entry:
  %v_t_43 := load int & param 0 %a_t_43;
  %v_t_44 := load int & param 1 %a_t_44;
  %v_t_45 := load int & param 2 %a_t_45;
  %v_t_46 := load int & param 3 %a_t_46;
  %v_t_47 := load int & param 4 %a_t_47;
  %v_t_48 := load int & param 5 %a_t_48;
  %v_t_49 := load int & param 6 %a_t_49;
  %v_t_50 := int %v_t_44 + int %v_t_45;
  %v_t_51 := int %v_t_50 + int %v_t_46;
  %v_t_52 := int %v_t_51 + int %v_t_47;
  %v_t_53 := int %v_t_52 + int %v_t_48;
  %v_t_54 := int %v_t_53 + int %v_t_49;
  %v_t_56 := int %v_t_43 * 2;
  %v_t_57 := int %v_t_54 + int %v_t_56;
  %v_t_58 := int %v_t_57;
  call int ~cl_TopLevel.printInt (int %v_t_58);
  %v___temp_1 := 0;
  %v_return := int %v___temp_1;
  jump .L_exit;
.L_exit:
  return int %v_return;
]


[94m[Info]    [0m[Reporting.Logs.logInfo#75] [%v_t_42 (reg preference: CallerSaved) (RAX): []
~arg_0_RDI (reg preference: CallerSaved) (RDI): []
~arg_1_RSI (reg preference: CallerSaved) (RSI): []
~arg_2_RDX (reg preference: CallerSaved) (RDX): []
~arg_3_RCX (reg preference: CallerSaved) (RCX): []
~arg_4_R8 (reg preference: CallerSaved) (R8): []
~arg_5_R9 (reg preference: CallerSaved) (R9): []
,%a_t_43 (reg preference: CallerSaved) (RDI): ["%a_t_44","%a_t_45","%a_t_46","%a_t_47","%a_t_48"]
%a_t_44 (reg preference: CallerSaved) (RSI): ["%a_t_43","%a_t_45","%a_t_46","%a_t_47","%a_t_48","%v_t_43"]
%a_t_45 (reg preference: CallerSaved) (RDX): ["%a_t_43","%a_t_44","%a_t_46","%a_t_47","%a_t_48","%v_t_43","%v_t_44"]
%a_t_46 (reg preference: CallerSaved) (RCX): ["%a_t_43","%a_t_44","%a_t_45","%a_t_47","%a_t_48","%v_t_43","%v_t_44","%v_t_45"]
%a_t_47 (reg preference: CallerSaved) (R8): ["%a_t_43","%a_t_44","%a_t_45","%a_t_46","%a_t_48","%v_t_43","%v_t_44","%v_t_45","%v_t_46"]
%a_t_48 (reg preference: CallerSaved) (R9): ["%a_t_43","%a_t_44","%a_t_45","%a_t_46","%a_t_47","%v_t_43","%v_t_44","%v_t_45","%v_t_46","%v_t_47"]
%v_t_43 (reg preference: CallerSaved) (R11): ["%a_t_44","%a_t_45","%a_t_46","%a_t_47","%a_t_48","%v_t_44","%v_t_45","%v_t_46","%v_t_47","%v_t_48","%v_t_49","%v_t_50","%v_t_51","%v_t_52","%v_t_53","%v_t_54"]
%v_t_44 (reg preference: CallerSaved) (R10): ["%a_t_45","%a_t_46","%a_t_47","%a_t_48","%v_t_43","%v_t_45","%v_t_46","%v_t_47","%v_t_48","%v_t_49"]
%v_t_45 (reg preference: CallerSaved) (RSI): ["%a_t_46","%a_t_47","%a_t_48","%v_t_43","%v_t_44","%v_t_46","%v_t_47","%v_t_48","%v_t_49"]
%v_t_46 (reg preference: CallerSaved) (RDI): ["%a_t_47","%a_t_48","%v_t_43","%v_t_44","%v_t_45","%v_t_47","%v_t_48","%v_t_49","%v_t_50"]
%v_t_47 (reg preference: CallerSaved) (RDX): ["%a_t_48","%v_t_43","%v_t_44","%v_t_45","%v_t_46","%v_t_48","%v_t_49","%v_t_50","%v_t_51"]
%v_t_48 (reg preference: CallerSaved) (RAX): ["%v_t_43","%v_t_44","%v_t_45","%v_t_46","%v_t_47","%v_t_49","%v_t_50","%v_t_51","%v_t_52"]
%v_t_49 (reg preference: CallerSaved) (RCX): ["%v_t_43","%v_t_44","%v_t_45","%v_t_46","%v_t_47","%v_t_48","%v_t_50","%v_t_51","%v_t_52","%v_t_53"]
%v_t_50 (reg preference: CallerSaved) (RSI): ["%v_t_43","%v_t_46","%v_t_47","%v_t_48","%v_t_49"]
%v_t_51 (reg preference: CallerSaved) (RDI): ["%v_t_43","%v_t_47","%v_t_48","%v_t_49"]
%v_t_52 (reg preference: CallerSaved) (RDX): ["%v_t_43","%v_t_48","%v_t_49"]
%v_t_53 (reg preference: CallerSaved) (RAX): ["%v_t_43","%v_t_49"]
%v_t_54 (reg preference: CallerSaved) (RAX): ["%v_t_43","%v_t_56"]
%v_t_56 (reg preference: CallerSaved) (RCX): ["%v_t_54"]
%v_t_57 (reg preference: CallerSaved) (RAX): []
~arg_0_RDI (reg preference: CallerSaved) (RDI): []
]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> END STEP Allocating registers...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> GENERATED INTERMEDIATE STEP Unfolding phis...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] CFG for ~cl_TopLevel.main:
[".L_entry",".L_exit"]
".L_entry" -> fromList [LabIdent ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_entry"]
Code: 
.method int ~cl_TopLevel.main (): [
.L_entry:
  %v_t_42 := call int ~cl_TopLevel.foo (1, 2, 1, 2, 1, 2, 42);
  %v___temp_0 := int %v_t_42;
  %v_return := int %v___temp_0;
  jump .L_exit;
.L_exit:
  return int %v_return;
]

CFG for ~cl_TopLevel.foo:
[".L_entry",".L_exit"]
".L_entry" -> fromList [LabIdent ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_entry"]
Code: 
.method int ~cl_TopLevel.foo (int %a_t_43, int %a_t_44, int %a_t_45, int %a_t_46, int %a_t_47, int %a_t_48, int %a_t_49): [
.L_entry:
  %v_t_43 := load int & param 0 %a_t_43;
  %v_t_44 := load int & param 1 %a_t_44;
  %v_t_45 := load int & param 2 %a_t_45;
  %v_t_46 := load int & param 3 %a_t_46;
  %v_t_47 := load int & param 4 %a_t_47;
  %v_t_48 := load int & param 5 %a_t_48;
  %v_t_49 := load int & param 6 %a_t_49;
  %v_t_50 := int %v_t_44 + int %v_t_45;
  %v_t_51 := int %v_t_50 + int %v_t_46;
  %v_t_52 := int %v_t_51 + int %v_t_47;
  %v_t_53 := int %v_t_52 + int %v_t_48;
  %v_t_54 := int %v_t_53 + int %v_t_49;
  %v_t_56 := int %v_t_43 * 2;
  %v_t_57 := int %v_t_54 + int %v_t_56;
  %v_t_58 := int %v_t_57;
  call int ~cl_TopLevel.printInt (int %v_t_58);
  %v___temp_1 := 0;
  %v_return := int %v___temp_1;
  jump .L_exit;
.L_exit:
  return int %v_return;
]


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> END STEP Unfolding phis...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> GENERATED INTERMEDIATE STEP Inlining trivial jumps...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] CFG for ~cl_TopLevel.main:
[".L_entry"]
".L_entry" -> fromList [] <- fromList []
Code: 
.method int ~cl_TopLevel.main (): [
.L_entry:
  endphi;
  %v_t_42 := call int ~cl_TopLevel.foo (1, 2, 1, 2, 1, 2, 42);
  endphi;
  return int %v_t_42;
]

CFG for ~cl_TopLevel.foo:
[".L_entry"]
".L_entry" -> fromList [] <- fromList []
Code: 
.method int ~cl_TopLevel.foo (int %a_t_43, int %a_t_44, int %a_t_45, int %a_t_46, int %a_t_47, int %a_t_48, int %a_t_49): [
.L_entry:
  endphi;
  %v_t_43 := load int & param 0 %a_t_43;
  %v_t_44 := load int & param 1 %a_t_44;
  %v_t_45 := load int & param 2 %a_t_45;
  %v_t_46 := load int & param 3 %a_t_46;
  %v_t_47 := load int & param 4 %a_t_47;
  %v_t_48 := load int & param 5 %a_t_48;
  %v_t_49 := load int & param 6 %a_t_49;
  %v_t_50 := int %v_t_44 + int %v_t_45;
  %v_t_51 := int %v_t_50 + int %v_t_46;
  %v_t_52 := int %v_t_51 + int %v_t_47;
  %v_t_53 := int %v_t_52 + int %v_t_48;
  %v_t_54 := int %v_t_53 + int %v_t_49;
  %v_t_56 := int %v_t_43 * 2;
  %v_t_57 := int %v_t_54 + int %v_t_56;
  call int ~cl_TopLevel.printInt (int %v_t_57);
  endphi;
  return 0;
]


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> END STEP Inlining trivial jumps...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> GENERATED INTERMEDIATE STEP Final liveness analysis...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] CFG for ~cl_TopLevel.main:
[".L_entry"]
".L_entry" -> fromList [] <- fromList []
Liveness at start of .L_entry: in = [], out = [], use = [], kill = []
Liveness at end of .L_entry: in = [("%v_t_42",(0,Int ()))], out = [], use = [("%v_t_42",Int ())], kill = []
Code: 
.method int ~cl_TopLevel.main (): [
.L_entry:
  endphi;
  %v_t_42 := call int ~cl_TopLevel.foo (1, 2, 1, 2, 1, 2, 42);
  endphi;
  return int %v_t_42;
]

CFG for ~cl_TopLevel.foo:
[".L_entry"]
".L_entry" -> fromList [] <- fromList []
Liveness at start of .L_entry: in = [("%a_t_46",(5,Ref () (Int ()))),("%a_t_44",(3,Ref () (Int ()))),("%a_t_48",(7,Ref () (Int ()))),("%a_t_47",(6,Ref () (Int ()))),("%a_t_45",(4,Ref () (Int ()))),("%a_t_43",(2,Ref () (Int ()))),("%a_t_49",(8,Ref () (Int ())))], out = [("%a_t_46",(4,Ref () (Int ()))),("%a_t_44",(2,Ref () (Int ()))),("%a_t_48",(6,Ref () (Int ()))),("%a_t_47",(5,Ref () (Int ()))),("%a_t_45",(3,Ref () (Int ()))),("%a_t_43",(1,Ref () (Int ()))),("%a_t_49",(7,Ref () (Int ())))], use = [], kill = []
Liveness at end of .L_entry: in = [], out = [], use = [], kill = []
Code: 
.method int ~cl_TopLevel.foo (int %a_t_43, int %a_t_44, int %a_t_45, int %a_t_46, int %a_t_47, int %a_t_48, int %a_t_49): [
.L_entry:
  endphi;
  //a=1,b=2,c=1,d=2,e=1,f=2,g=42
  %v_t_43 1 := load int & param 0 %a_t_43; 
  %v_t_44 2 := load int & param 1 %a_t_44;
  %v_t_45 1 := load int & param 2 %a_t_45;
  %v_t_46 2 := load int & param 3 %a_t_46;
  %v_t_47 1 := load int & param 4 %a_t_47;
  %v_t_48 2 := load int & param 5 %a_t_48;
  %v_t_49 42 := load int & param 6 %a_t_49;
  %v_t_50 3 := int %v_t_44 + int %v_t_45;
  %v_t_51 5 := int %v_t_50 + int %v_t_46;
  %v_t_52 6 := int %v_t_51 + int %v_t_47;
  %v_t_53 8 := int %v_t_52 + int %v_t_48;
  %v_t_54 50 := int %v_t_53 + int %v_t_49;
  %v_t_56 2 := int %v_t_43 * 2;
  %v_t_57 52 := int %v_t_54 + int %v_t_56;
  call int ~cl_TopLevel.printInt (int %v_t_57);
  endphi;
  return 0;
]


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> END STEP Final liveness analysis...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] COMPL_ DONE./play_fck.lat

CompiledProg ./play_fck.lat:1:1 (Meta ./play_fck.lat:1:1 [ClDef inside standard library (SymIdent "Array") [SymIdent "Array",SymIdent "Object"] [FldDef inside standard library (Ref inside standard library (Cl inside standard library (SymIdent "Object"))) (SymIdent "elements"),FldDef inside standard library (Int inside standard library) (SymIdent "length"),FldDef inside standard library (Int inside standard library) (SymIdent "elementSize")] [MthdDef inside standard library (FType inside standard library (Int inside standard library) [Ref inside standard library (Cl inside standard library (SymIdent "Object"))]) (QIdent inside standard library (SymIdent "Object") (SymIdent "equals")),MthdDef inside standard library (FType inside standard library (Int inside standard library) []) (QIdent inside standard library (SymIdent "Object") (SymIdent "getHashCode")),MthdDef inside standard library (FType inside standard library (Ref inside standard library (Cl inside standard library (SymIdent "String"))) []) (QIdent inside standard library (SymIdent "Array") (SymIdent "toString"))],ClDef inside standard library (SymIdent "Object") [SymIdent "Object"] [] [MthdDef inside standard library (FType inside standard library (Int inside standard library) [Ref inside standard library (Cl inside standard library (SymIdent "Object"))]) (QIdent inside standard library (SymIdent "Object") (SymIdent "equals")),MthdDef inside standard library (FType inside standard library (Int inside standard library) []) (QIdent inside standard library (SymIdent "Object") (SymIdent "getHashCode")),MthdDef inside standard library (FType inside standard library (Ref inside standard library (Cl inside standard library (SymIdent "String"))) []) (QIdent inside standard library (SymIdent "Object") (SymIdent "toString"))],ClDef inside standard library (SymIdent "String") [SymIdent "String",SymIdent "Object"] [] [MthdDef inside standard library (FType inside standard library (Int inside standard library) [Int inside standard library]) (QIdent inside standard library (SymIdent "String") (SymIdent "charAt")),MthdDef inside standard library (FType inside standard library (Int inside standard library) [Ref inside standard library (Cl inside standard library (SymIdent "Object"))]) (QIdent inside standard library (SymIdent "String") (SymIdent "equals")),MthdDef inside standard library (FType inside standard library (Ref inside standard library (Cl inside standard library (SymIdent "String"))) [Ref inside standard library (Cl inside standard library (SymIdent "String"))]) (QIdent inside standard library (SymIdent "String") (SymIdent "concat")),MthdDef inside standard library (FType inside standard library (Int inside standard library) [Ref inside standard library (Cl inside standard library (SymIdent "String"))]) (QIdent inside standard library (SymIdent "String") (SymIdent "startsWith")),MthdDef inside standard library (FType inside standard library (Int inside standard library) [Ref inside standard library (Cl inside standard library (SymIdent "String"))]) (QIdent inside standard library (SymIdent "String") (SymIdent "endsWith")),MthdDef inside standard library (FType inside standard library (Ref inside standard library (Arr inside standard library (Int inside standard library))) []) (QIdent inside standard library (SymIdent "String") (SymIdent "getBytes")),MthdDef inside standard library (FType inside standard library (Int inside standard library) [Int inside standard library]) (QIdent inside standard library (SymIdent "String") (SymIdent "indexOf")),MthdDef inside standard library (FType inside standard library (Int inside standard library) []) (QIdent inside standard library (SymIdent "String") (SymIdent "length")),MthdDef inside standard library (FType inside standard library (Ref inside standard library (Cl inside standard library (SymIdent "String"))) [Int inside standard library]) (QIdent inside standard library (SymIdent "String") (SymIdent "substring")),MthdDef inside standard library (FType inside standard library (Ref inside standard library (Cl inside standard library (SymIdent "String"))) []) (QIdent inside standard library (SymIdent "String") (SymIdent "toString")),MthdDef inside standard library (FType inside standard library (Int inside standard library) []) (QIdent inside standard library (SymIdent "String") (SymIdent "getHashCode"))],ClDef ./play_fck.lat:1:1 (SymIdent "~cl_TopLevel") [] [] [MthdDef ./play_fck.lat:1:1 (FType ./play_fck.lat:1:1 (Ref ./play_fck.lat:1:1 (Cl ./play_fck.lat:1:1 (SymIdent "Array"))) []) (QIdent ./play_fck.lat:1:1 (SymIdent "Array") (SymIdent "toString")),MthdDef ./play_fck.lat:1:1 (FType ./play_fck.lat:1:1 (Ref ./play_fck.lat:1:1 (Cl ./play_fck.lat:1:1 (SymIdent "Object"))) []) (QIdent ./play_fck.lat:1:1 (SymIdent "Object") (SymIdent "toString")),MthdDef ./play_fck.lat:1:1 (FType ./play_fck.lat:1:1 (Int ./play_fck.lat:1:1) []) (QIdent ./play_fck.lat:1:1 (SymIdent "Object") (SymIdent "getHashCode")),MthdDef ./play_fck.lat:1:1 (FType ./play_fck.lat:1:1 (Int ./play_fck.lat:1:1) [Ref ./play_fck.lat:1:1 (Cl ./play_fck.lat:1:1 (SymIdent "Object"))]) (QIdent ./play_fck.lat:1:1 (SymIdent "Object") (SymIdent "equals")),MthdDef ./play_fck.lat:1:1 (FType ./play_fck.lat:1:1 (Int ./play_fck.lat:1:1) [Ref ./play_fck.lat:1:1 (Cl ./play_fck.lat:1:1 (SymIdent "Object"))]) (QIdent ./play_fck.lat:1:1 (SymIdent "String") (SymIdent "equals")),MthdDef ./play_fck.lat:1:1 (FType ./play_fck.lat:1:1 (Int ./play_fck.lat:1:1) []) (QIdent ./play_fck.lat:1:1 (SymIdent "String") (SymIdent "getHashCode")),MthdDef ./play_fck.lat:1:1 (FType ./play_fck.lat:1:1 (Ref ./play_fck.lat:1:1 (Cl ./play_fck.lat:1:1 (SymIdent "String"))) []) (QIdent ./play_fck.lat:1:1 (SymIdent "String") (SymIdent "toString")),MthdDef ./play_fck.lat:1:1 (FType ./play_fck.lat:1:1 (Ref ./play_fck.lat:1:1 (Cl ./play_fck.lat:1:1 (SymIdent "String"))) []) (QIdent ./play_fck.lat:1:1 (SymIdent "String") (SymIdent "substring")),MthdDef ./play_fck.lat:1:1 (FType ./play_fck.lat:1:1 (Int ./play_fck.lat:1:1) []) (QIdent ./play_fck.lat:1:1 (SymIdent "String") (SymIdent "length")),MthdDef ./play_fck.lat:1:1 (FType ./play_fck.lat:1:1 (Int ./play_fck.lat:1:1) [Ref ./play_fck.lat:1:1 (Cl ./play_fck.lat:1:1 (SymIdent "String")),Int ./play_fck.lat:1:1]) (QIdent ./play_fck.lat:1:1 (SymIdent "String") (SymIdent "indexOf")),MthdDef ./play_fck.lat:1:1 (FType ./play_fck.lat:1:1 (Ref ./play_fck.lat:1:1 (Cl ./play_fck.lat:1:1 (SymIdent "String"))) []) (QIdent ./play_fck.lat:1:1 (SymIdent "String") (SymIdent "getBytes")),MthdDef ./play_fck.lat:1:1 (FType ./play_fck.lat:1:1 (Int ./play_fck.lat:1:1) [Ref ./play_fck.lat:1:1 (Cl ./play_fck.lat:1:1 (SymIdent "String"))]) (QIdent ./play_fck.lat:1:1 (SymIdent "String") (SymIdent "endsWith")),MthdDef ./play_fck.lat:1:1 (FType ./play_fck.lat:1:1 (Int ./play_fck.lat:1:1) [Ref ./play_fck.lat:1:1 (Cl ./play_fck.lat:1:1 (SymIdent "String"))]) (QIdent ./play_fck.lat:1:1 (SymIdent "String") (SymIdent "startsWith")),MthdDef ./play_fck.lat:1:1 (FType ./play_fck.lat:1:1 (Ref ./play_fck.lat:1:1 (Cl ./play_fck.lat:1:1 (SymIdent "String"))) [Ref ./play_fck.lat:1:1 (Cl ./play_fck.lat:1:1 (SymIdent "String")),Ref ./play_fck.lat:1:1 (Cl ./play_fck.lat:1:1 (SymIdent "String"))]) (QIdent ./play_fck.lat:1:1 (SymIdent "String") (SymIdent "concat")),MthdDef ./play_fck.lat:1:1 (FType ./play_fck.lat:1:1 (Int ./play_fck.lat:1:1) [Int ./play_fck.lat:1:1]) (QIdent ./play_fck.lat:1:1 (SymIdent "String") (SymIdent "charAt")),MthdDef ./play_fck.lat:1:1 (FType ./play_fck.lat:1:1 (Int ./play_fck.lat:1:1) [Ref ./play_fck.lat:1:1 (Cl ./play_fck.lat:1:1 (SymIdent "String"))]) (QIdent ./play_fck.lat:1:1 (SymIdent "~cl_TopLevel") (SymIdent "printString")),MthdDef ./play_fck.lat:1:1 (FType ./play_fck.lat:1:1 (Int ./play_fck.lat:1:1) [Int ./play_fck.lat:1:1]) (QIdent ./play_fck.lat:1:1 (SymIdent "~cl_TopLevel") (SymIdent "printInt")),MthdDef ./play_fck.lat:1:1 (FType ./play_fck.lat:1:1 (Int ./play_fck.lat:1:1) [Int ./play_fck.lat:1:1]) (QIdent ./play_fck.lat:1:1 (SymIdent "~cl_TopLevel") (SymIdent "printByte")),MthdDef ./play_fck.lat:1:1 (FType ./play_fck.lat:1:1 (Int ./play_fck.lat:1:1) [Int ./play_fck.lat:1:1]) (QIdent ./play_fck.lat:1:1 (SymIdent "~cl_TopLevel") (SymIdent "printBoolean")),MthdDef ./play_fck.lat:1:1 (FType ./play_fck.lat:1:1 (Int ./play_fck.lat:1:1) [Ref ./play_fck.lat:1:1 (Cl ./play_fck.lat:1:1 (SymIdent "Array"))]) (QIdent ./play_fck.lat:1:1 (SymIdent "~cl_TopLevel") (SymIdent "printBinArray")),MthdDef ./play_fck.lat:1:1 (FType ./play_fck.lat:1:1 (Ref ./play_fck.lat:1:1 (Cl ./play_fck.lat:1:1 (SymIdent "String"))) [Int ./play_fck.lat:1:1]) (QIdent ./play_fck.lat:1:1 (SymIdent "~cl_TopLevel") (SymIdent "byteToString")),MthdDef ./play_fck.lat:1:1 (FType ./play_fck.lat:1:1 (Ref ./play_fck.lat:1:1 (Cl ./play_fck.lat:1:1 (SymIdent "String"))) [Int ./play_fck.lat:1:1]) (QIdent ./play_fck.lat:1:1 (SymIdent "~cl_TopLevel") (SymIdent "boolToString")),MthdDef ./play_fck.lat:1:1 (FType ./play_fck.lat:1:1 (Ref ./play_fck.lat:1:1 (Cl ./play_fck.lat:1:1 (SymIdent "String"))) [Int ./play_fck.lat:1:1]) (QIdent ./play_fck.lat:1:1 (SymIdent "~cl_TopLevel") (SymIdent "intToString")),MthdDef ./play_fck.lat:1:1 (FType ./play_fck.lat:1:1 (Int ./play_fck.lat:1:1) [Ref ./play_fck.lat:1:1 (Cl ./play_fck.lat:1:1 (SymIdent "Object"))]) (QIdent ./play_fck.lat:1:1 (SymIdent "~cl_TopLevel") (SymIdent "print")),MthdDef ./play_fck.lat:1:1 (FType ./play_fck.lat:1:1 (Int ./play_fck.lat:1:1) []) (QIdent ./play_fck.lat:1:1 (SymIdent "~cl_TopLevel") (SymIdent "error")),MthdDef ./play_fck.lat:1:1 (FType ./play_fck.lat:1:1 (Int ./play_fck.lat:1:1) []) (QIdent ./play_fck.lat:1:1 (SymIdent "~cl_TopLevel") (SymIdent "readInt")),MthdDef ./play_fck.lat:1:1 (FType ./play_fck.lat:1:1 (Ref ./play_fck.lat:1:1 (Cl ./play_fck.lat:1:1 (SymIdent "String"))) []) (QIdent ./play_fck.lat:1:1 (SymIdent "~cl_TopLevel") (SymIdent "readString")),MthdDef ./play_fck.lat:1:1 (FType ./play_fck.lat:1:1 (Ref ./play_fck.lat:1:1 (Cl ./play_fck.lat:1:1 (SymIdent "Object"))) [Ref ./play_fck.lat:1:1 (Cl ./play_fck.lat:1:1 (SymIdent "Object")),Ref ./play_fck.lat:1:1 (Cl ./play_fck.lat:1:1 (SymIdent "Object"))]) (QIdent ./play_fck.lat:1:1 (SymIdent "~cl_TopLevel") (SymIdent "__cast")),MthdDef ./play_fck.lat:1:1 (FType ./play_fck.lat:1:1 (Int ./play_fck.lat:1:1) []) (QIdent ./play_fck.lat:1:5 (SymIdent "~cl_TopLevel") (SymIdent "main")),MthdDef ./play_fck.lat:7:1 (FType ./play_fck.lat:7:1 (Int ./play_fck.lat:7:1) [Int ./play_fck.lat:7:9,Int ./play_fck.lat:7:15,Int ./play_fck.lat:7:21,Int ./play_fck.lat:7:27,Int ./play_fck.lat:7:33,Int ./play_fck.lat:7:39,Int ./play_fck.lat:7:45]) (QIdent ./play_fck.lat:7:5 (SymIdent "~cl_TopLevel") (SymIdent "foo"))]]) [([".L_entry"]
".L_entry" -> fromList [] <- fromList []
,Mthd ./play_fck.lat:1:1 (Int ./play_fck.lat:1:1) (QIdent ./play_fck.lat:1:5 (SymIdent "~cl_TopLevel") (SymIdent "main")) [] [ILabel ./play_fck.lat:1:1 (LabIdent ".L_entry"),IEndPhi ./play_fck.lat:1:1,ICall ./play_fck.lat:3:10 (ValIdent "%v_t_42") (Call ./play_fck.lat:3:10 (Int ./play_fck.lat:7:1) (QIdent ./play_fck.lat:3:10 (SymIdent "~cl_TopLevel") (SymIdent "foo")) [VInt ./play_fck.lat:3:10 1,VInt ./play_fck.lat:3:10 2,VInt ./play_fck.lat:3:10 1,VInt ./play_fck.lat:3:10 2,VInt ./play_fck.lat:3:10 1,VInt ./play_fck.lat:3:10 2,VInt ./play_fck.lat:3:10 42] []),IEndPhi ./play_fck.lat:1:1,IRet ./play_fck.lat:1:1 (VVal ./play_fck.lat:1:1 (Int ./play_fck.lat:1:1) (ValIdent "%v_t_42"))],RegAlloc {regAlloc = fromList [(ValIdent "%v_t_42",RAX),(ValIdent "~arg_0_RDI",RDI),(ValIdent "~arg_1_RSI",RSI),(ValIdent "~arg_2_RDX",RDX),(ValIdent "~arg_3_RCX",RCX),(ValIdent "~arg_4_R8",R8),(ValIdent "~arg_5_R9",R9)], numLocals = 0}),([".L_entry"]
".L_entry" -> fromList [] <- fromList []
,Mthd ./play_fck.lat:7:1 (Int ./play_fck.lat:7:1) (QIdent ./play_fck.lat:7:5 (SymIdent "~cl_TopLevel") (SymIdent "foo")) [Param ./play_fck.lat:7:1 (Int ./play_fck.lat:7:9) (ValIdent "%a_t_43"),Param ./play_fck.lat:7:1 (Int ./play_fck.lat:7:15) (ValIdent "%a_t_44"),Param ./play_fck.lat:7:1 (Int ./play_fck.lat:7:21) (ValIdent "%a_t_45"),Param ./play_fck.lat:7:1 (Int ./play_fck.lat:7:27) (ValIdent "%a_t_46"),Param ./play_fck.lat:7:1 (Int ./play_fck.lat:7:33) (ValIdent "%a_t_47"),Param ./play_fck.lat:7:1 (Int ./play_fck.lat:7:39) (ValIdent "%a_t_48"),Param ./play_fck.lat:7:1 (Int ./play_fck.lat:7:45) (ValIdent "%a_t_49")] [ILabel ./play_fck.lat:7:1 (LabIdent ".L_entry"),IEndPhi ./play_fck.lat:7:1,ILoad ./play_fck.lat:7:1 (ValIdent "%v_t_43") (PParam ./play_fck.lat:7:1 (Ref ./play_fck.lat:7:1 (Int ./play_fck.lat:7:9)) 0 (ValIdent "%a_t_43")),ILoad ./play_fck.lat:7:1 (ValIdent "%v_t_44") (PParam ./play_fck.lat:7:1 (Ref ./play_fck.lat:7:1 (Int ./play_fck.lat:7:15)) 1 (ValIdent "%a_t_44")),ILoad ./play_fck.lat:7:1 (ValIdent "%v_t_45") (PParam ./play_fck.lat:7:1 (Ref ./play_fck.lat:7:1 (Int ./play_fck.lat:7:21)) 2 (ValIdent "%a_t_45")),ILoad ./play_fck.lat:7:1 (ValIdent "%v_t_46") (PParam ./play_fck.lat:7:1 (Ref ./play_fck.lat:7:1 (Int ./play_fck.lat:7:27)) 3 (ValIdent "%a_t_46")),ILoad ./play_fck.lat:7:1 (ValIdent "%v_t_47") (PParam ./play_fck.lat:7:1 (Ref ./play_fck.lat:7:1 (Int ./play_fck.lat:7:33)) 4 (ValIdent "%a_t_47")),ILoad ./play_fck.lat:7:1 (ValIdent "%v_t_48") (PParam ./play_fck.lat:7:1 (Ref ./play_fck.lat:7:1 (Int ./play_fck.lat:7:39)) 5 (ValIdent "%a_t_48")),ILoad ./play_fck.lat:7:1 (ValIdent "%v_t_49") (PParam ./play_fck.lat:7:1 (Ref ./play_fck.lat:7:1 (Int ./play_fck.lat:7:45)) 6 (ValIdent "%a_t_49")),IOp ./play_fck.lat:15:30 (ValIdent "%v_t_50") (VVal ./play_fck.lat:15:30 (Int ./play_fck.lat:7:15) (ValIdent "%v_t_44")) (OpAdd ./play_fck.lat:15:30) (VVal ./play_fck.lat:15:30 (Int ./play_fck.lat:7:15) (ValIdent "%v_t_45")),IOp ./play_fck.lat:15:30 (ValIdent "%v_t_51") (VVal ./play_fck.lat:15:30 (Int ./play_fck.lat:7:15) (ValIdent "%v_t_50")) (OpAdd ./play_fck.lat:15:30) (VVal ./play_fck.lat:15:30 (Int ./play_fck.lat:7:15) (ValIdent "%v_t_46")),IOp ./play_fck.lat:15:30 (ValIdent "%v_t_52") (VVal ./play_fck.lat:15:30 (Int ./play_fck.lat:7:15) (ValIdent "%v_t_51")) (OpAdd ./play_fck.lat:15:30) (VVal ./play_fck.lat:15:30 (Int ./play_fck.lat:7:15) (ValIdent "%v_t_47")),IOp ./play_fck.lat:15:30 (ValIdent "%v_t_53") (VVal ./play_fck.lat:15:30 (Int ./play_fck./usr/bin/ld: /tmp/ccuqshbr.o: warning: relocation against `_String_getBytes' in read-only section `.rodata'
/usr/bin/ld: warning: creating DT_TEXTREL in a PIE
lat:7:15) (ValIdent "%v_t_52")) (OpAdd ./play_fck.lat:15:30) (VVal ./play_fck.lat:15:30 (Int ./play_fck.lat:7:15) (ValIdent "%v_t_48")),IOp ./play_fck.lat:15:30 (ValIdent "%v_t_54") (VVal ./play_fck.lat:15:30 (Int ./play_fck.lat:7:15) (ValIdent "%v_t_53")) (OpAdd ./play_fck.lat:15:30) (VVal ./play_fck.lat:15:30 (Int ./play_fck.lat:7:15) (ValIdent "%v_t_49")),IOp ./play_fck.lat:15:18 (ValIdent "%v_t_56") (VVal ./play_fck.lat:15:18 (Int ./play_fck.lat:15:17) (ValIdent "%v_t_43")) (OpMul ./play_fck.lat:15:18) (VInt ./play_fck.lat:15:18 2),IOp ./play_fck.lat:15:30 (ValIdent "%v_t_57") (VVal ./play_fck.lat:15:30 (Int ./play_fck.lat:7:15) (ValIdent "%v_t_54")) (OpAdd ./play_fck.lat:15:30) (VVal ./play_fck.lat:15:30 (Int ./play_fck.lat:7:15) (ValIdent "%v_t_56")),IVCall ./play_fck.lat:17:3 (Call ./play_fck.lat:17:3 (Int inside standard library) (QIdent ./play_fck.lat:17:3 (SymIdent "~cl_TopLevel") (SymIdent "printInt")) [VVal ./play_fck.lat:17:3 (Int ./play_fck.lat:17:3) (ValIdent "%v_t_57")] []),IEndPhi ./play_fck.lat:7:1,IRet ./play_fck.lat:7:1 (VInt ./play_fck.lat:7:1 0)],RegAlloc {regAlloc = fromList [(ValIdent "%a_t_43",RDI),(ValIdent "%a_t_44",RSI),(ValIdent "%a_t_45",RDX),(ValIdent "%a_t_46",RCX),(ValIdent "%a_t_47",R8),(ValIdent "%a_t_48",R9),(ValIdent "%v_t_43",R11),(ValIdent "%v_t_44",R10),(ValIdent "%v_t_45",RSI),(ValIdent "%v_t_46",RDI),(ValIdent "%v_t_47",RDX),(ValIdent "%v_t_48",RAX),(ValIdent "%v_t_49",RCX),(ValIdent "%v_t_50",RSI),(ValIdent "%v_t_51",RDI),(ValIdent "%v_t_52",RDX),(ValIdent "%v_t_53",RAX),(ValIdent "%v_t_54",RAX),(ValIdent "%v_t_56",RCX),(ValIdent "%v_t_57",RAX),(ValIdent "~arg_0_RDI",RDI)], numLocals = 0})]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Running correct compiler backend: X64
[94m[Info]    [0m[Reporting.Logs.logInfo#75] emitMethod Fix method stack offsets 8
[94m[Info]    [0m[Reporting.Logs.logInfo#75] emitMethod Fix method stack offsets 8
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Created file: ./play_fck.s
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Calling backend compile step: X64
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Run GCC for X64 backend to generate './play_fck' executable from object file './play_fck.o'
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Executing command 'gcc -fPIE -Lsrc/Runtime/dependencies/_built_/lib lib/runtime -l:libunistring.a ./play_fck.s -o ./play_fck -z noexecstack'
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Command executed successfully.
[94m[Info]    [0m[Reporting.Logs.logInfo#75] X64 compilation of './play_fck.s' seems to be successfull
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Backend code generation completed successfully ./play_fck.lat -> ./play_fck
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DONE
