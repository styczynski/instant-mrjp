[94m[Info]    [0m[Reporting.Logs.logInfo#75] Reading: example.lat
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Parsing: example.lat
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Parsed: example.lat
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Transformed: example.lat
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Construct inheritance graph
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> string[][] resize(string[][] matrix, int extra_cells)
{
	print(matrix);
	string[][] matrix2 = new string[][(matrix.length<???> + extra_cells)];
	int i = 0;
	{
		int n__e = 0;
		var a__e = matrix;
		while (<implicit>(n__e < a__e.length<???>))
			{
				string[] e = a__e[n__e];
				{
					matrix2[i] = e;
					i = <implicit>(i + 1);
					print(e);
				}
				n__e = <implicit>(n__e + 1);
			}
	}
	return matrix2;
}

int main()
{
	string[] arr = new string[5];
	arr[0] = "Hello";
	printString(arr[0]);
	int[] arr2 = new int[10];
	arr2[0] = 42;
	arr2[3] = 69;
	print(arr2);
	string[][] arr3 = new string[][2];
	arr3[0] = new string[3];
	arr3[0][0] = "Hello!";
	arr3[0][2] = ":D";
	printString("ELO?");
	return 0;
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> string[][] resize(string[][] matrix, int extra_cells)
{
	print(matrix);
	string[][] matrix2 = new string[][(matrix.length<???> + extra_cells)];
	int i = 0;
	{
		int n__e = 0;
		var a__e = matrix;
		while (<implicit>(n__e < a__e.length<???>))
			{
				string[] e = a__e[n__e];
				{
					matrix2[i] = e;
					i = <implicit>(i + 1);
					print(e);
				}
				n__e = <implicit>(n__e + 1);
			}
	}
	return matrix2;
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> print(matrix);
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGELO App ===> FunT inside standard library (VoidT inside standard library) [ClassT inside standard library (Ident inside standard library "Object")]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- print(matrix);
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> string[][] matrix2 = new string[][(matrix.length<???> + extra_cells)];
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- string[][] matrix2 = new string[][(matrix.length<"Array"> + extra_cells)];
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> int i = 0;
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- int i = (int)(0);
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> {
	int n__e = 0;
	var a__e = matrix;
	while (<implicit>(n__e < a__e.length<???>))
		{
			string[] e = a__e[n__e];
			{
				matrix2[i] = e;
				i = <implicit>(i + 1);
				print(e);
			}
			n__e = <implicit>(n__e + 1);
		}
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> {
int n__e = 0;
var a__e = matrix;
while (<implicit>(n__e < a__e.length<???>))
	{
		string[] e = a__e[n__e];
		{
			matrix2[i] = e;
			i = <implicit>(i + 1);
			print(e);
		}
		n__e = <implicit>(n__e + 1);
	}
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> int n__e = 0;
var a__e = matrix;
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- int n__e = (int)(0);
string[][] a__e = matrix;
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> while (<implicit>(n__e < a__e.length<???>))
	{
		string[] e = a__e[n__e];
		{
			matrix2[i] = e;
			i = <implicit>(i + 1);
			print(e);
		}
		n__e = <implicit>(n__e + 1);
	}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> {
	string[] e = a__e[n__e];
	{
		matrix2[i] = e;
		i = <implicit>(i + 1);
		print(e);
	}
	n__e = <implicit>(n__e + 1);
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> {
string[] e = a__e[n__e];
{
	matrix2[i] = e;
	i = <implicit>(i + 1);
	print(e);
}
n__e = <implicit>(n__e + 1);
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> string[] e = a__e[n__e];
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- string[] e = a__e[n__e];
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> {
	matrix2[i] = e;
	i = <implicit>(i + 1);
	print(e);
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> {
matrix2[i] = e;
i = <implicit>(i + 1);
print(e);
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> matrix2[i] = e;
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Assignemnt mapped LEFT ?=> matrix2[i]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- matrix2[i] = e;
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> i = <implicit>(i + 1);
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Assignemnt mapped LEFT ?=> i
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- i = <implicit>(i + (int)(1));
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> print(e);
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGELO App ===> FunT inside standard library (VoidT inside standard library) [ClassT inside standard library (Ident inside standard library "Object")]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- print(e);
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- {
matrix2[i] = e;
i = <implicit>(i + (int)(1));
print(e);
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- {
	matrix2[i] = e;
	i = <implicit>(i + (int)(1));
	print(e);
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> n__e = <implicit>(n__e + 1);
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Assignemnt mapped LEFT ?=> n__e
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- n__e = <implicit>(n__e + (int)(1));
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- {
string[] e = a__e[n__e];
{
	matrix2[i] = e;
	i = <implicit>(i + (int)(1));
	print(e);
}
n__e = <implicit>(n__e + (int)(1));
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- {
	string[] e = a__e[n__e];
	{
		matrix2[i] = e;
		i = <implicit>(i + (int)(1));
		print(e);
	}
	n__e = <implicit>(n__e + (int)(1));
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- while (<implicit>(n__e < a__e.length<"Array">))
	{
		string[] e = a__e[n__e];
		{
			matrix2[i] = e;
			i = <implicit>(i + (int)(1));
			print(e);
		}
		n__e = <implicit>(n__e + (int)(1));
	}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- {
int n__e = (int)(0);
string[][] a__e = matrix;
while (<implicit>(n__e < a__e.length<"Array">))
	{
		string[] e = a__e[n__e];
		{
			matrix2[i] = e;
			i = <implicit>(i + (int)(1));
			print(e);
		}
		n__e = <implicit>(n__e + (int)(1));
	}
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- {
	int n__e = (int)(0);
	string[][] a__e = matrix;
	while (<implicit>(n__e < a__e.length<"Array">))
		{
			string[] e = a__e[n__e];
			{
				matrix2[i] = e;
				i = <implicit>(i + (int)(1));
				print(e);
			}
			n__e = <implicit>(n__e + (int)(1));
		}
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> return matrix2;
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- return matrix2;
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- string[][] resize(string[][] matrix, int extra_cells)
{
	print(matrix);
	string[][] matrix2 = new string[][(matrix.length<"Array"> + extra_cells)];
	int i = (int)(0);
	{
		int n__e = (int)(0);
		string[][] a__e = matrix;
		while (<implicit>(n__e < a__e.length<"Array">))
			{
				string[] e = a__e[n__e];
				{
					matrix2[i] = e;
					i = <implicit>(i + (int)(1));
					print(e);
				}
				n__e = <implicit>(n__e + (int)(1));
			}
	}
	return matrix2;
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> int main()
{
	string[] arr = new string[5];
	arr[0] = "Hello";
	printString(arr[0]);
	int[] arr2 = new int[10];
	arr2[0] = 42;
	arr2[3] = 69;
	print(arr2);
	string[][] arr3 = new string[][2];
	arr3[0] = new string[3];
	arr3[0][0] = "Hello!";
	arr3[0][2] = ":D";
	printString("ELO?");
	return 0;
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> string[] arr = new string[5];
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- string[] arr = new string[5];
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> arr[0] = "Hello";
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Assignemnt mapped LEFT ?=> arr[(int)(0)]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- arr[(int)(0)] = "Hello";
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> printString(arr[0]);
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGELO App ===> FunT inside standard library (VoidT inside standard library) [StringT inside standard library]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- printString(arr[(int)(0)]);
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> int[] arr2 = new int[10];
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- int[] arr2 = new int[10];
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> arr2[0] = 42;
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Assignemnt mapped LEFT ?=> arr2[(int)(0)]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- arr2[(int)(0)] = (int)(42);
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> arr2[3] = 69;
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Assignemnt mapped LEFT ?=> arr2[(int)(3)]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- arr2[(int)(3)] = (int)(69);
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> print(arr2);
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGELO App ===> FunT inside standard library (VoidT inside standard library) [ClassT inside standard library (Ident inside standard library "Object")]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- print(arr2);
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> string[][] arr3 = new string[][2];
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- string[][] arr3 = new string[][2];
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> arr3[0] = new string[3];
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Assignemnt mapped LEFT ?=> arr3[(int)(0)]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- arr3[(int)(0)] = new string[3];
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> arr3[0][0] = "Hello!";
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Assignemnt mapped LEFT ?=> arr3[(int)(0)][(int)(0)]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- arr3[(int)(0)][(int)(0)] = "Hello!";
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> arr3[0][2] = ":D";
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Assignemnt mapped LEFT ?=> arr3[(int)(0)][(int)(2)]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- arr3[(int)(0)][(int)(2)] = ":D";
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> printString("ELO?");
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGELO App ===> FunT inside standard library (VoidT inside standard library) [StringT inside standard library]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- printString("ELO?");
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> return 0;
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- return (int)(0);
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- int main()
{
	string[] arr = new string[5];
	arr[(int)(0)] = "Hello";
	printString(arr[(int)(0)]);
	int[] arr2 = new int[10];
	arr2[(int)(0)] = (int)(42);
	arr2[(int)(3)] = (int)(69);
	print(arr2);
	string[][] arr3 = new string[][2];
	arr3[(int)(0)] = new string[3];
	arr3[(int)(0)][(int)(0)] = "Hello!";
	arr3[(int)(0)][(int)(2)] = ":D";
	printString("ELO?");
	return (int)(0);
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- string[][] resize(string[][] matrix, int extra_cells)
{
	print(matrix);
	string[][] matrix2 = new string[][(matrix.length<"Array"> + extra_cells)];
	int i = (int)(0);
	{
		int n__e = (int)(0);
		string[][] a__e = matrix;
		while (<implicit>(n__e < a__e.length<"Array">))
			{
				string[] e = a__e[n__e];
				{
					matrix2[i] = e;
					i = <implicit>(i + (int)(1));
					print(e);
				}
				n__e = <implicit>(n__e + (int)(1));
			}
	}
	return matrix2;
}

int main()
{
	string[] arr = new string[5];
	arr[(int)(0)] = "Hello";
	printString(arr[(int)(0)]);
	int[] arr2 = new int[10];
	arr2[(int)(0)] = (int)(42);
	arr2[(int)(3)] = (int)(69);
	print(arr2);
	string[][] arr3 = new string[][2];
	arr3[(int)(0)] = new string[3];
	arr3[(int)(0)][(int)(0)] = "Hello!";
	arr3[(int)(0)][(int)(2)] = ":D";
	printString("ELO?");
	return (int)(0);
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Typecheck doneexample.lat

string[][] resize(string[][] matrix, int extra_cells)
{
	print(matrix);
	string[][] matrix2 = new string[][(matrix.length<"Array"> + extra_cells)];
	int i = (int)(0);
	{
		int n__e = (int)(0);
		string[][] a__e = matrix;
		while (<implicit>(n__e < a__e.length<"Array">))
			{
				string[] e = a__e[n__e];
				{
					matrix2[i] = e;
					i = <implicit>(i + (int)(1));
					print(e);
				}
				n__e = <implicit>(n__e + (int)(1));
			}
	}
	return matrix2;
}

int main()
{
	string[] arr = new string[5];
	arr[(int)(0)] = "Hello";
	printString(arr[(int)(0)]);
	int[] arr2 = new int[10];
	arr2[(int)(0)] = (int)(42);
	arr2[(int)(3)] = (int)(69);
	print(arr2);
	string[][] arr3 = new string[][2];
	arr3[(int)(0)] = new string[3];
	arr3[(int)(0)][(int)(0)] = "Hello!";
	arr3[(int)(0)][(int)(2)] = ":D";
	printString("ELO?");
	return (int)(0);
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] ConstPropagation.run before:string[][] resize(string[][] matrix, int extra_cells)
{
	print(matrix);
	string[][] matrix2 = new string[][(matrix.length<"Array"> + extra_cells)];
	int i = (int)(0);
	{
		int n__e = (int)(0);
		string[][] a__e = matrix;
		while (<implicit>(n__e < a__e.length<"Array">))
			{
				string[] e = a__e[n__e];
				{
					matrix2[i] = e;
					i = <implicit>(i + (int)(1));
					print(e);
				}
				n__e = <implicit>(n__e + (int)(1));
			}
	}
	return matrix2;
}

int main()
{
	string[] arr = new string[5];
	arr[(int)(0)] = "Hello";
	printString(arr[(int)(0)]);
	int[] arr2 = new int[10];
	arr2[(int)(0)] = (int)(42);
	arr2[(int)(3)] = (int)(69);
	print(arr2);
	string[][] arr3 = new string[][2];
	arr3[(int)(0)] = new string[3];
	arr3[(int)(0)][(int)(0)] = "Hello!";
	arr3[(int)(0)][(int)(2)] = ":D";
	printString("ELO?");
	return (int)(0);
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP Before doNormalizeScope(Syntax.Program) string[][] resize(string[][] matrix, int extra_cells)
{
	print(matrix);
	string[][] matrix2 = new string[][(matrix.length<"Array"> + extra_cells)];
	int i = (int)(0);
	{
		int n__e = (int)(0);
		string[][] a__e = matrix;
		while (<implicit>(n__e < a__e.length<"Array">))
			{
				string[] e = a__e[n__e];
				{
					matrix2[i] = e;
					i = <implicit>(i + (int)(1));
					print(e);
				}
				n__e = <implicit>(n__e + (int)(1));
			}
	}
	return matrix2;
}

int main()
{
	string[] arr = new string[5];
	arr[(int)(0)] = "Hello";
	printString(arr[(int)(0)]);
	int[] arr2 = new int[10];
	arr2[(int)(0)] = (int)(42);
	arr2[(int)(3)] = (int)(69);
	print(arr2);
	string[][] arr3 = new string[][2];
	arr3[(int)(0)] = new string[3];
	arr3[(int)(0)][(int)(0)] = "Hello!";
	arr3[(int)(0)][(int)(2)] = ":D";
	printString("ELO?");
	return (int)(0);
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP After doNormalizeScope(Syntax.Program) string[][] resize(string[][] _var_1000001#matrix, int _var_1000002#extra_cells)
{
	print(_var_1000001#matrix);
	string[][] _var_1000004#matrix2 = new string[][(_var_1000001#matrix.length<"Array"> + _var_1000002#extra_cells)];
	int _var_1000005#i = (int)(0);
	int _var_1000007#n__e = (int)(0);
	string[][] _var_1000008#a__e = _var_1000001#matrix;
	while (<implicit>(_var_1000007#n__e < _var_1000008#a__e.length<"Array">))
		{
			string[] _var_1000011#e = _var_1000008#a__e[_var_1000007#n__e];
			_var_1000004#matrix2[_var_1000005#i] = _var_1000011#e;
			_var_1000005#i = <implicit>(_var_1000005#i + (int)(1));
			print(_var_1000011#e);
			_var_1000007#n__e = <implicit>(_var_1000007#n__e + (int)(1));
		}
	return _var_1000004#matrix2;
}

int main()
{
	string[] _var_1000021#arr = new string[5];
	_var_1000021#arr[(int)(0)] = "Hello";
	printString(_var_1000021#arr[(int)(0)]);
	int[] _var_1000022#arr2 = new int[10];
	_var_1000022#arr2[(int)(0)] = (int)(42);
	_var_1000022#arr2[(int)(3)] = (int)(69);
	print(_var_1000022#arr2);
	string[][] _var_1000023#arr3 = new string[][2];
	_var_1000023#arr3[(int)(0)] = new string[3];
	_var_1000023#arr3[(int)(0)][(int)(0)] = "Hello!";
	_var_1000023#arr3[(int)(0)][(int)(2)] = ":D";
	printString("ELO?");
	return (int)(0);
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000005#i] ~> False
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000007#n__e] ~> False
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000005#i] ~> False
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000007#n__e] ~> False
[94m[Info]    [0m[Reporting.Logs.logInfo#75] ConstPropagation.run after:string[][] resize(string[][] _var_1000001#matrix, int _var_1000002#extra_cells)
{
	print(_var_1000001#matrix);
	string[][] _var_1000004#matrix2 = new string[][(_var_1000002#extra_cells + _var_1000001#matrix.length<"Array">)];
	int _var_1000005#i = 0;
	int _var_1000007#n__e = 0;
	string[][] _var_1000008#a__e = _var_1000001#matrix;
	while (<implicit>(_var_1000007#n__e < _var_1000008#a__e.length<"Array">))
		{
			string[] _var_1000011#e = _var_1000008#a__e[_var_1000007#n__e];
			_var_1000004#matrix2[_var_1000005#i] = _var_1000011#e;
			_var_1000005#i = <implicit>(1 + _var_1000005#i);
			print(_var_1000011#e);
			_var_1000007#n__e = <implicit>(1 + _var_1000007#n__e);
		}
	return _var_1000004#matrix2;
}

int main()
{
	string[] _var_1000021#arr = new string[5];
	_var_1000021#arr[0] = "Hello";
	printString(_var_1000021#arr[0]);
	int[] _var_1000022#arr2 = new int[10];
	_var_1000022#arr2[0] = 42;
	_var_1000022#arr2[3] = 69;
	print(_var_1000022#arr2);
	string[][] _var_1000023#arr3 = new string[][2];
	_var_1000023#arr3[0] = new string[3];
	_var_1000023#arr3[0][0] = "Hello!";
	_var_1000023#arr3[0][2] = ":D";
	printString("ELO?");
	return 0;
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Optimizing AST round 1 (took 6 ms)
[94m[Info]    [0m[Reporting.Logs.logInfo#75] ConstPropagation.run before:string[][] resize(string[][] _var_1000001#matrix, int _var_1000002#extra_cells)
{
	print(_var_1000001#matrix);
	string[][] _var_1000004#matrix2 = new string[][(_var_1000002#extra_cells + _var_1000001#matrix.length<"Array">)];
	int _var_1000005#i = 0;
	int _var_1000007#n__e = 0;
	string[][] _var_1000008#a__e = _var_1000001#matrix;
	while (<implicit>(_var_1000007#n__e < _var_1000008#a__e.length<"Array">))
		{
			string[] _var_1000011#e = _var_1000008#a__e[_var_1000007#n__e];
			_var_1000004#matrix2[_var_1000005#i] = _var_1000011#e;
			_var_1000005#i = <implicit>(1 + _var_1000005#i);
			print(_var_1000011#e);
			_var_1000007#n__e = <implicit>(1 + _var_1000007#n__e);
		}
	return _var_1000004#matrix2;
}

int main()
{
	string[] _var_1000021#arr = new string[5];
	_var_1000021#arr[0] = "Hello";
	printString(_var_1000021#arr[0]);
	int[] _var_1000022#arr2 = new int[10];
	_var_1000022#arr2[0] = 42;
	_var_1000022#arr2[3] = 69;
	print(_var_1000022#arr2);
	string[][] _var_1000023#arr3 = new string[][2];
	_var_1000023#arr3[0] = new string[3];
	_var_1000023#arr3[0][0] = "Hello!";
	_var_1000023#arr3[0][2] = ":D";
	printString("ELO?");
	return 0;
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP Before doNormalizeScope(Syntax.Program) string[][] resize(string[][] _var_1000001#matrix, int _var_1000002#extra_cells)
{
	print(_var_1000001#matrix);
	string[][] _var_1000004#matrix2 = new string[][(_var_1000002#extra_cells + _var_1000001#matrix.length<"Array">)];
	int _var_1000005#i = 0;
	int _var_1000007#n__e = 0;
	string[][] _var_1000008#a__e = _var_1000001#matrix;
	while (<implicit>(_var_1000007#n__e < _var_1000008#a__e.length<"Array">))
		{
			string[] _var_1000011#e = _var_1000008#a__e[_var_1000007#n__e];
			_var_1000004#matrix2[_var_1000005#i] = _var_1000011#e;
			_var_1000005#i = <implicit>(1 + _var_1000005#i);
			print(_var_1000011#e);
			_var_1000007#n__e = <implicit>(1 + _var_1000007#n__e);
		}
	return _var_1000004#matrix2;
}

int main()
{
	string[] _var_1000021#arr = new string[5];
	_var_1000021#arr[0] = "Hello";
	printString(_var_1000021#arr[0]);
	int[] _var_1000022#arr2 = new int[10];
	_var_1000022#arr2[0] = 42;
	_var_1000022#arr2[3] = 69;
	print(_var_1000022#arr2);
	string[][] _var_1000023#arr3 = new string[][2];
	_var_1000023#arr3[0] = new string[3];
	_var_1000023#arr3[0][0] = "Hello!";
	_var_1000023#arr3[0][2] = ":D";
	printString("ELO?");
	return 0;
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP After doNormalizeScope(Syntax.Program) string[][] resize(string[][] _var_1000001#matrix, int _var_1000002#extra_cells)
{
	print(_var_1000001#matrix);
	string[][] _var_1000004#matrix2 = new string[][(_var_1000002#extra_cells + _var_1000001#matrix.length<"Array">)];
	int _var_1000005#i = 0;
	int _var_1000006#n__e = 0;
	string[][] _var_1000007#a__e = _var_1000001#matrix;
	while (<implicit>(_var_1000006#n__e < _var_1000007#a__e.length<"Array">))
		{
			string[] _var_1000010#e = _var_1000007#a__e[_var_1000006#n__e];
			_var_1000004#matrix2[_var_1000005#i] = _var_1000010#e;
			_var_1000005#i = <implicit>(1 + _var_1000005#i);
			print(_var_1000010#e);
			_var_1000006#n__e = <implicit>(1 + _var_1000006#n__e);
		}
	return _var_1000004#matrix2;
}

int main()
{
	string[] _var_1000017#arr = new string[5];
	_var_1000017#arr[0] = "Hello";
	printString(_var_1000017#arr[0]);
	int[] _var_1000018#arr2 = new int[10];
	_var_1000018#arr2[0] = 42;
	_var_1000018#arr2[3] = 69;
	print(_var_1000018#arr2);
	string[][] _var_1000019#arr3 = new string[][2];
	_var_1000019#arr3[0] = new string[3];
	_var_1000019#arr3[0][0] = "Hello!";
	_var_1000019#arr3[0][2] = ":D";
	printString("ELO?");
	return 0;
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000005#i] ~> False
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000006#n__e] ~> False
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000005#i] ~> False
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000006#n__e] ~> False
[94m[Info]    [0m[Reporting.Logs.logInfo#75] ConstPropagation.run after:string[][] resize(string[][] _var_1000001#matrix, int _var_1000002#extra_cells)
{
	print(_var_1000001#matrix);
	string[][] _var_1000004#matrix2 = new string[][(_var_1000002#extra_cells + _var_1000001#matrix.length<"Array">)];
	int _var_1000005#i = 0;
	int _var_1000006#n__e = 0;
	string[][] _var_1000007#a__e = _var_1000001#matrix;
	while (<implicit>(_var_1000006#n__e < _var_1000007#a__e.length<"Array">))
		{
			string[] _var_1000010#e = _var_1000007#a__e[_var_1000006#n__e];
			_var_1000004#matrix2[_var_1000005#i] = _var_1000010#e;
			_var_1000005#i = <implicit>(1 + _var_1000005#i);
			print(_var_1000010#e);
			_var_1000006#n__e = <implicit>(1 + _var_1000006#n__e);
		}
	return _var_1000004#matrix2;
}

int main()
{
	string[] _var_1000017#arr = new string[5];
	_var_1000017#arr[0] = "Hello";
	printString(_var_1000017#arr[0]);
	int[] _var_1000018#arr2 = new int[10];
	_var_1000018#arr2[0] = 42;
	_var_1000018#arr2[3] = 69;
	print(_var_1000018#arr2);
	string[][] _var_1000019#arr3 = new string[][2];
	_var_1000019#arr3[0] = new string[3];
	_var_1000019#arr3[0][0] = "Hello!";
	_var_1000019#arr3[0][2] = ":D";
	printString("ELO?");
	return 0;
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Optimizing AST round 2 (took 6 ms)
[94m[Info]    [0m[Reporting.Logs.logInfo#75] ConstPropagation.run before:string[][] resize(string[][] _var_1000001#matrix, int _var_1000002#extra_cells)
{
	print(_var_1000001#matrix);
	string[][] _var_1000004#matrix2 = new string[][(_var_1000002#extra_cells + _var_1000001#matrix.length<"Array">)];
	int _var_1000005#i = 0;
	int _var_1000006#n__e = 0;
	string[][] _var_1000007#a__e = _var_1000001#matrix;
	while (<implicit>(_var_1000006#n__e < _var_1000007#a__e.length<"Array">))
		{
			string[] _var_1000010#e = _var_1000007#a__e[_var_1000006#n__e];
			_var_1000004#matrix2[_var_1000005#i] = _var_1000010#e;
			_var_1000005#i = <implicit>(1 + _var_1000005#i);
			print(_var_1000010#e);
			_var_1000006#n__e = <implicit>(1 + _var_1000006#n__e);
		}
	return _var_1000004#matrix2;
}

int main()
{
	string[] _var_1000017#arr = new string[5];
	_var_1000017#arr[0] = "Hello";
	printString(_var_1000017#arr[0]);
	int[] _var_1000018#arr2 = new int[10];
	_var_1000018#arr2[0] = 42;
	_var_1000018#arr2[3] = 69;
	print(_var_1000018#arr2);
	string[][] _var_1000019#arr3 = new string[][2];
	_var_1000019#arr3[0] = new string[3];
	_var_1000019#arr3[0][0] = "Hello!";
	_var_1000019#arr3[0][2] = ":D";
	printString("ELO?");
	return 0;
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP Before doNormalizeScope(Syntax.Program) string[][] resize(string[][] _var_1000001#matrix, int _var_1000002#extra_cells)
{
	print(_var_1000001#matrix);
	string[][] _var_1000004#matrix2 = new string[][(_var_1000002#extra_cells + _var_1000001#matrix.length<"Array">)];
	int _var_1000005#i = 0;
	int _var_1000006#n__e = 0;
	string[][] _var_1000007#a__e = _var_1000001#matrix;
	while (<implicit>(_var_1000006#n__e < _var_1000007#a__e.length<"Array">))
		{
			string[] _var_1000010#e = _var_1000007#a__e[_var_1000006#n__e];
			_var_1000004#matrix2[_var_1000005#i] = _var_1000010#e;
			_var_1000005#i = <implicit>(1 + _var_1000005#i);
			print(_var_1000010#e);
			_var_1000006#n__e = <implicit>(1 + _var_1000006#n__e);
		}
	return _var_1000004#matrix2;
}

int main()
{
	string[] _var_1000017#arr = new string[5];
	_var_1000017#arr[0] = "Hello";
	printString(_var_1000017#arr[0]);
	int[] _var_1000018#arr2 = new int[10];
	_var_1000018#arr2[0] = 42;
	_var_1000018#arr2[3] = 69;
	print(_var_1000018#arr2);
	string[][] _var_1000019#arr3 = new string[][2];
	_var_1000019#arr3[0] = new string[3];
	_var_1000019#arr3[0][0] = "Hello!";
	_var_1000019#arr3[0][2] = ":D";
	printString("ELO?");
	return 0;
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP After doNormalizeScope(Syntax.Program) string[][] resize(string[][] _var_1000001#matrix, int _var_1000002#extra_cells)
{
	print(_var_1000001#matrix);
	string[][] _var_1000004#matrix2 = new string[][(_var_1000002#extra_cells + _var_1000001#matrix.length<"Array">)];
	int _var_1000005#i = 0;
	int _var_1000006#n__e = 0;
	string[][] _var_1000007#a__e = _var_1000001#matrix;
	while (<implicit>(_var_1000006#n__e < _var_1000007#a__e.length<"Array">))
		{
			string[] _var_1000010#e = _var_1000007#a__e[_var_1000006#n__e];
			_var_1000004#matrix2[_var_1000005#i] = _var_1000010#e;
			_var_1000005#i = <implicit>(1 + _var_1000005#i);
			print(_var_1000010#e);
			_var_1000006#n__e = <implicit>(1 + _var_1000006#n__e);
		}
	return _var_1000004#matrix2;
}

int main()
{
	string[] _var_1000017#arr = new string[5];
	_var_1000017#arr[0] = "Hello";
	printString(_var_1000017#arr[0]);
	int[] _var_1000018#arr2 = new int[10];
	_var_1000018#arr2[0] = 42;
	_var_1000018#arr2[3] = 69;
	print(_var_1000018#arr2);
	string[][] _var_1000019#arr3 = new string[][2];
	_var_1000019#arr3[0] = new string[3];
	_var_1000019#arr3[0][0] = "Hello!";
	_var_1000019#arr3[0][2] = ":D";
	printString("ELO?");
	return 0;
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000005#i] ~> False
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000006#n__e] ~> False
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000005#i] ~> False
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000006#n__e] ~> False
[94m[Info]    [0m[Reporting.Logs.logInfo#75] ConstPropagation.run after:string[][] resize(string[][] _var_1000001#matrix, int _var_1000002#extra_cells)
{
	print(_var_1000001#matrix);
	string[][] _var_1000004#matrix2 = new string[][(_var_1000002#extra_cells + _var_1000001#matrix.length<"Array">)];
	int _var_1000005#i = 0;
	int _var_1000006#n__e = 0;
	string[][] _var_1000007#a__e = _var_1000001#matrix;
	while (<implicit>(_var_1000006#n__e < _var_1000007#a__e.length<"Array">))
		{
			string[] _var_1000010#e = _var_1000007#a__e[_var_1000006#n__e];
			_var_1000004#matrix2[_var_1000005#i] = _var_1000010#e;
			_var_1000005#i = <implicit>(1 + _var_1000005#i);
			print(_var_1000010#e);
			_var_1000006#n__e = <implicit>(1 + _var_1000006#n__e);
		}
	return _var_1000004#matrix2;
}

int main()
{
	string[] _var_1000017#arr = new string[5];
	_var_1000017#arr[0] = "Hello";
	printString(_var_1000017#arr[0]);
	int[] _var_1000018#arr2 = new int[10];
	_var_1000018#arr2[0] = 42;
	_var_1000018#arr2[3] = 69;
	print(_var_1000018#arr2);
	string[][] _var_1000019#arr3 = new string[][2];
	_var_1000019#arr3[0] = new string[3];
	_var_1000019#arr3[0][0] = "Hello!";
	_var_1000019#arr3[0][2] = ":D";
	printString("ELO?");
	return 0;
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Optimizing AST round 3 (took 17 ms)
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Optimization doneexample.lat

string[][] resize(string[][] _var_1000001#matrix, int _var_1000002#extra_cells)
{
	print(_var_1000001#matrix);
	string[][] _var_1000004#matrix2 = new string[][(_var_1000002#extra_cells + _var_1000001#matrix.length<"Array">)];
	int _var_1000005#i = 0;
	int _var_1000006#n__e = 0;
	string[][] _var_1000007#a__e = _var_1000001#matrix;
	while (<implicit>(_var_1000006#n__e < _var_1000007#a__e.length<"Array">))
		{
			string[] _var_1000010#e = _var_1000007#a__e[_var_1000006#n__e];
			_var_1000004#matrix2[_var_1000005#i] = _var_1000010#e;
			_var_1000005#i = <implicit>(1 + _var_1000005#i);
			print(_var_1000010#e);
			_var_1000006#n__e = <implicit>(1 + _var_1000006#n__e);
		}
	return _var_1000004#matrix2;
}

int main()
{
	string[] _var_1000017#arr = new string[5];
	_var_1000017#arr[0] = "Hello";
	printString(_var_1000017#arr[0]);
	int[] _var_1000018#arr2 = new int[10];
	_var_1000018#arr2[0] = 42;
	_var_1000018#arr2[3] = 69;
	print(_var_1000018#arr2);
	string[][] _var_1000019#arr3 = new string[][2];
	_var_1000019#arr3[0] = new string[3];
	_var_1000019#arr3[0][0] = "Hello!";
	_var_1000019#arr3[0][2] = ":D";
	printString("ELO?");
	return 0;
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] APPDET [obj<Object>]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Assign ArrAccess example.lat:6:17 (Var example.lat:6:17 (Ident example.lat:6:17 "_var_1000004#matrix2")) (Var example.lat:6:25 (Ident example.lat:6:25 "_var_1000005#i")) (Just (ArrayT example.lat:3:13 (StringT example.lat:3:13)))
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Assign Var example.lat:7:17 (Ident example.lat:7:17 "_var_1000005#i")
[94m[Info]    [0m[Reporting.Logs.logInfo#75] APPDET [obj<Object>]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Assign Var example.lat:5:13 (Ident example.lat:5:27 "_var_1000006#n__e")
[94m[Info]    [0m[Reporting.Logs.logInfo#75] transform condition: BinaryOp example.lat:5:13 Implicit (Lt example.lat:5:13) (Var example.lat:5:13 (Ident example.lat:5:27 "_var_1000006#n__e")) (Member example.lat:5:13 (Var example.lat:5:13 (Ident example.lat:5:27 "_var_1000007#a__e")) (Ident example.lat:5:13 "length") (Just "Array"))
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Assign ArrAccess example.lat:15:13 (Var example.lat:15:13 (Ident example.lat:15:13 "_var_1000017#arr")) (Lit example.lat:15:17 (Int example.lat:15:17 0)) (Just (StringT example.lat:14:13))
[94m[Info]    [0m[Reporting.Logs.logInfo#75] APPDET [obj<String>]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Assign ArrAccess example.lat:18:13 (Var example.lat:18:13 (Ident example.lat:18:13 "_var_1000018#arr2")) (Lit example.lat:18:18 (Int example.lat:18:18 0)) (Just (IntT example.lat:17:13))
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Assign ArrAccess example.lat:19:13 (Var example.lat:19:13 (Ident example.lat:19:13 "_var_1000018#arr2")) (Lit example.lat:19:18 (Int example.lat:19:18 3)) (Just (IntT example.lat:17:13))
[94m[Info]    [0m[Reporting.Logs.logInfo#75] APPDET [obj<Object>]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Assign ArrAccess example.lat:22:13 (Var example.lat:22:13 (Ident example.lat:22:13 "_var_1000019#arr3")) (Lit example.lat:22:18 (Int example.lat:22:18 0)) (Just (ArrayT example.lat:21:13 (StringT example.lat:21:13)))
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Assign ArrAccess example.lat:23:13 (ArrAccess example.lat:23:13 (Var example.lat:23:13 (Ident example.lat:23:13 "_var_1000019#arr3")) (Lit example.lat:23:18 (Int example.lat:23:18 0)) (Just (ArrayT example.lat:21:13 (StringT example.lat:21:13)))) (Lit example.lat:23:21 (Int example.lat:23:21 0)) (Just (StringT example.lat:21:13))
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Assign ArrAccess example.lat:24:13 (ArrAccess example.lat:24:13 (Var example.lat:24:13 (Ident example.lat:24:13 "_var_1000019#arr3")) (Lit example.lat:24:18 (Int example.lat:24:18 0)) (Just (ArrayT example.lat:21:13 (StringT example.lat:21:13)))) (Lit example.lat:24:21 (Int example.lat:24:21 2)) (Just (StringT example.lat:21:13))
[94m[Info]    [0m[Reporting.Logs.logInfo#75] APPDET [obj<String>]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DEBUG COLLECT_FUNCTIONS PROTOTYPES
[94m[Info]    [0m[Reporting.Logs.logInfo#75] [array<array<obj<String>>> resize(array<array<obj<String>>> t_2, int t_3)
    byte t_4 =     call<function> print(<obj<Object>>t_2)
    int t_5 = t_2.field<int>[Array.length]
    int t_6 = <int>t_3 + <int>t_5
    array<array<obj<String>>> t_7 = new array<obj<String>>[<int>t_6]
    array<array<obj<String>>> t_8 = <array<array<obj<String>>>>t_7
    int t_9 = <int>0
    int t_10 = <int>t_9
    int t_11 = <int>0
    int t_12 = <int>t_11
    array<array<obj<String>>> t_13 = <array<array<obj<String>>>>t_2
    jump _WCOND14
  _WCOND14:
    int t_24 = t_13.field<int>[Array.length]
    jump _WBEG15 if <int>t_12 < <int>t_24 or pass-through to _WEND16
  _WBEG15:
    array<obj<String>> t_17 = t_13[<int>t_12]
    array<obj<String>> t_18 = <array<obj<String>>>t_17
    t_8[<int>t_10] = <array<obj<String>>>t_18
    int t_19 = <int>1
    int t_20 = <int>t_10 + <int>t_19
    t_10 = <int>t_20
    byte t_21 =     call<function> print(<obj<Object>>t_18)
    int t_22 = <int>1
    int t_23 = <int>t_12 + <int>t_22
    t_12 = <int>t_23
    jump _WCOND14
  _WEND16:
    return <array<array<obj<String>>>>t_8
,int main()
    int t_25 = <int>5
    array<obj<String>> t_26 = new obj<String>[<int>t_25]
    array<obj<String>> t_27 = <array<obj<String>>>t_26
    obj<String> t_29 =     new string _S28
    int t_30 = <int>0
    t_27[<int>t_30] = <obj<String>>t_29
    int t_31 = <int>0
    obj<String> t_32 = t_27[<int>t_31]
    byte t_33 =     call<function> printString(<obj<String>>t_32)
    int t_34 = <int>10
    array<int> t_35 = new int[<int>t_34]
    array<int> t_36 = <array<int>>t_35
    int t_37 = <int>42
    int t_38 = <int>0
    t_36[<int>t_38] = <int>t_37
    int t_39 = <int>69
    int t_40 = <int>3
    t_36[<int>t_40] = <int>t_39
    byte t_41 =     call<function> print(<obj<Object>>t_36)
    int t_42 = <int>2
    array<array<obj<String>>> t_43 = new array<obj<String>>[<int>t_42]
    array<array<obj<String>>> t_44 = <array<array<obj<String>>>>t_43
    int t_45 = <int>3
    array<obj<String>> t_46 = new obj<String>[<int>t_45]
    int t_47 = <int>0
    t_44[<int>t_47] = <array<obj<String>>>t_46
    obj<String> t_49 =     new string _S48
    int t_50 = <int>0
    array<obj<String>> t_51 = t_44[<int>t_50]
    int t_52 = <int>0
    t_51[<int>t_52] = <obj<String>>t_49
    obj<String> t_54 =     new string _S53
    int t_55 = <int>0
    array<obj<String>> t_56 = t_44[<int>t_55]
    int t_57 = <int>2
    t_56[<int>t_57] = <obj<String>>t_54
    obj<String> t_59 =     new string _S58
    byte t_60 =     call<function> printString(<obj<String>>t_59)
    int t_61 = <int>0
    return <int>t_61
]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] END DEBUG
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Initial IR: 
struct Array extends [Array, Object]
    field obj<Object> elements;
    field int length;
    field int elementSize;
    method <from:Object> byte Object.equals (_arg_1 obj<Object>)
    method <from:Object> int Object.getHashCode ()
    method <from:Object> obj<String> Array.toString ()

struct Object extends [Object]
    method <from:Object> byte Object.equals (_arg_1 obj<Object>)
    method <from:Object> int Object.getHashCode ()
    method <from:Object> obj<String> Object.toString ()

struct String extends [String, Object]
    method <from:String> int String.charAt (_arg_1 int)
    method <from:Object> byte String.equals (_arg_1 obj<Object>)
    method <from:String> obj<String> String.concat (_arg_1 obj<String>)
    method <from:String> byte String.startsWith (_arg_1 obj<String>)
    method <from:String> byte String.endsWith (_arg_1 obj<String>)
    method <from:String> array<int> String.getBytes ()
    method <from:String> int String.indexOf (_arg_1 obj<String>, _arg_2 int)
    method <from:String> int String.length ()
    method <from:String> obj<String> String.substring (_arg_1 int, _arg_2 int)
    method <from:Object> obj<String> String.toString ()
    method <from:Object> int String.getHashCode ()

array<array<obj<String>>> resize(array<array<obj<String>>> t_2, int t_3)
    byte t_4 =     call<function> print(<obj<Object>>t_2)
    int t_5 = t_2.field<int>[Array.length]
    int t_6 = <int>t_3 + <int>t_5
    array<array<obj<String>>> t_7 = new array<obj<String>>[<int>t_6]
    array<array<obj<String>>> t_8 = <array<array<obj<String>>>>t_7
    int t_9 = <int>0
    int t_10 = <int>t_9
    int t_11 = <int>0
    int t_12 = <int>t_11
    array<array<obj<String>>> t_13 = <array<array<obj<String>>>>t_2
    jump _WCOND14
  _WCOND14:
    int t_24 = t_13.field<int>[Array.length]
    jump _WBEG15 if <int>t_12 < <int>t_24 or pass-through to _WEND16
  _WBEG15:
    array<obj<String>> t_17 = t_13[<int>t_12]
    array<obj<String>> t_18 = <array<obj<String>>>t_17
    t_8[<int>t_10] = <array<obj<String>>>t_18
    int t_19 = <int>1
    int t_20 = <int>t_10 + <int>t_19
    t_10 = <int>t_20
    byte t_21 =     call<function> print(<obj<Object>>t_18)
    int t_22 = <int>1
    int t_23 = <int>t_12 + <int>t_22
    t_12 = <int>t_23
    jump _WCOND14
  _WEND16:
    return <array<array<obj<String>>>>t_8

int main()
    int t_25 = <int>5
    array<obj<String>> t_26 = new obj<String>[<int>t_25]
    array<obj<String>> t_27 = <array<obj<String>>>t_26
    obj<String> t_29 =     new string _S28
    int t_30 = <int>0
    t_27[<int>t_30] = <obj<String>>t_29
    int t_31 = <int>0
    obj<String> t_32 = t_27[<int>t_31]
    byte t_33 =     call<function> printString(<obj<String>>t_32)
    int t_34 = <int>10
    array<int> t_35 = new int[<int>t_34]
    array<int> t_36 = <array<int>>t_35
    int t_37 = <int>42
    int t_38 = <int>0
    t_36[<int>t_38] = <int>t_37
    int t_39 = <int>69
    int t_40 = <int>3
    t_36[<int>t_40] = <int>t_39
    byte t_41 =     call<function> print(<obj<Object>>t_36)
    int t_42 = <int>2
    array<array<obj<String>>> t_43 = new array<obj<String>>[<int>t_42]
    array<array<obj<String>>> t_44 = <array<array<obj<String>>>>t_43
    int t_45 = <int>3
    array<obj<String>> t_46 = new obj<String>[<int>t_45]
    int t_47 = <int>0
    t_44[<int>t_47] = <array<obj<String>>>t_46
    obj<String> t_49 =     new string _S48
    int t_50 = <int>0
    array<obj<String>> t_51 = t_44[<int>t_50]
    int t_52 = <int>0
    t_51[<int>t_52] = <obj<String>>t_49
    obj<String> t_54 =     new string _S53
    int t_55 = <int>0
    array<obj<String>> t_56 = t_44[<int>t_55]
    int t_57 = <int>2
    t_56[<int>t_57] = <obj<String>>t_54
    obj<String> t_59 =     new string _S58
    byte t_60 =     call<function> printString(<obj<String>>t_59)
    int t_61 = <int>0
    return <int>t_61

data string _S28 = "Hello"
data string _S48 = "Hello!"
data string _S53 = ":D"
data string _S58 = "ELO?"
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Running linearizer internal transformation: Value propagator
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Successfully completed internal linearizer transformation: Value propagator
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Running linearizer internal transformation: Expression substituter
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Successfully completed internal linearizer transformation: Expression substituter
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Optimizing IR round 1 (took 0 ms)
[94m[Info]    [0m[Reporting.Logs.logInfo#75] > BEFORE ROUND
struct Array extends [Array, Object]
    field obj<Object> elements;
    field int length;
    field int elementSize;
    method <from:Object> byte Object.equals (_arg_1 obj<Object>)
    method <from:Object> int Object.getHashCode ()
    method <from:Object> obj<String> Array.toString ()

struct Object extends [Object]
    method <from:Object> byte Object.equals (_arg_1 obj<Object>)
    method <from:Object> int Object.getHashCode ()
    method <from:Object> obj<String> Object.toString ()

struct String extends [String, Object]
    method <from:String> int String.charAt (_arg_1 int)
    method <from:Object> byte String.equals (_arg_1 obj<Object>)
    method <from:String> obj<String> String.concat (_arg_1 obj<String>)
    method <from:String> byte String.startsWith (_arg_1 obj<String>)
    method <from:String> byte String.endsWith (_arg_1 obj<String>)
    method <from:String> array<int> String.getBytes ()
    method <from:String> int String.indexOf (_arg_1 obj<String>, _arg_2 int)
    method <from:String> int String.length ()
    method <from:String> obj<String> String.substring (_arg_1 int, _arg_2 int)
    method <from:Object> obj<String> String.toString ()
    method <from:Object> int String.getHashCode ()

array<array<obj<String>>> resize(array<array<obj<String>>> t_2, int t_3)
    byte t_4 =     call<function> print(<obj<Object>>t_2)
    int t_5 = t_2.field<int>[Array.length]
    int t_6 = <int>t_3 + <int>t_5
    array<array<obj<String>>> t_7 = new array<obj<String>>[<int>t_6]
    array<array<obj<String>>> t_8 = <array<array<obj<String>>>>t_7
    int t_9 = <int>0
    int t_10 = <int>t_9
    int t_11 = <int>0
    int t_12 = <int>t_11
    array<array<obj<String>>> t_13 = <array<array<obj<String>>>>t_2
    jump _WCOND14
  _WCOND14:
    int t_24 = t_13.field<int>[Array.length]
    jump _WBEG15 if <int>t_12 < <int>t_24 or pass-through to _WEND16
  _WBEG15:
    array<obj<String>> t_17 = t_13[<int>t_12]
    array<obj<String>> t_18 = <array<obj<String>>>t_17
    t_8[<int>t_10] = <array<obj<String>>>t_18
    int t_19 = <int>1
    int t_20 = <int>t_10 + <int>t_19
    t_10 = <int>t_20
    byte t_21 =     call<function> print(<obj<Object>>t_18)
    int t_22 = <int>1
    int t_23 = <int>t_12 + <int>t_22
    t_12 = <int>t_23
    jump _WCOND14
  _WEND16:
    return <array<array<obj<String>>>>t_8

int main()
    int t_25 = <int>5
    array<obj<String>> t_26 = new obj<String>[<int>t_25]
    array<obj<String>> t_27 = <array<obj<String>>>t_26
    obj<String> t_29 =     new string _S28
    int t_30 = <int>0
    t_27[<int>t_30] = <obj<String>>t_29
    int t_31 = <int>0
    obj<String> t_32 = t_27[<int>t_31]
    byte t_33 =     call<function> printString(<obj<String>>t_32)
    int t_34 = <int>10
    array<int> t_35 = new int[<int>t_34]
    array<int> t_36 = <array<int>>t_35
    int t_37 = <int>42
    int t_38 = <int>0
    t_36[<int>t_38] = <int>t_37
    int t_39 = <int>69
    int t_40 = <int>3
    t_36[<int>t_40] = <int>t_39
    byte t_41 =     call<function> print(<obj<Object>>t_36)
    int t_42 = <int>2
    array<array<obj<String>>> t_43 = new array<obj<String>>[<int>t_42]
    array<array<obj<String>>> t_44 = <array<array<obj<String>>>>t_43
    int t_45 = <int>3
    array<obj<String>> t_46 = new obj<String>[<int>t_45]
    int t_47 = <int>0
    t_44[<int>t_47] = <array<obj<String>>>t_46
    obj<String> t_49 =     new string _S48
    int t_50 = <int>0
    array<obj<String>> t_51 = t_44[<int>t_50]
    int t_52 = <int>0
    t_51[<int>t_52] = <obj<String>>t_49
    obj<String> t_54 =     new string _S53
    int t_55 = <int>0
    array<obj<String>> t_56 = t_44[<int>t_55]
    int t_57 = <int>2
    t_56[<int>t_57] = <obj<String>>t_54
    obj<String> t_59 =     new string _S58
    byte t_60 =     call<function> printString(<obj<String>>t_59)
    int t_61 = <int>0
    return <int>t_61

data string _S28 = "Hello"
data string _S48 = "Hello!"
data string _S53 = ":D"
data string _S58 = "ELO?"
[94m[Info]    [0m[Reporting.Logs.logInfo#75] > AFTER ROUND
struct Array extends [Array, Object]
    field obj<Object> elements;
    field int length;
    field int elementSize;
    method <from:Object> byte Object.equals (_arg_1 obj<Object>)
    method <from:Object> int Object.getHashCode ()
    method <from:Object> obj<String> Array.toString ()

struct Object extends [Object]
    method <from:Object> byte Object.equals (_arg_1 obj<Object>)
    method <from:Object> int Object.getHashCode ()
    method <from:Object> obj<String> Object.toString ()

struct String extends [String, Object]
    method <from:String> int String.charAt (_arg_1 int)
    method <from:Object> byte String.equals (_arg_1 obj<Object>)
    method <from:String> obj<String> String.concat (_arg_1 obj<String>)
    method <from:String> byte String.startsWith (_arg_1 obj<String>)
    method <from:String> byte String.endsWith (_arg_1 obj<String>)
    method <from:String> array<int> String.getBytes ()
    method <from:String> int String.indexOf (_arg_1 obj<String>, _arg_2 int)
    method <from:String> int String.length ()
    method <from:String> obj<String> String.substring (_arg_1 int, _arg_2 int)
    method <from:Object> obj<String> String.toString ()
    method <from:Object> int String.getHashCode ()

array<array<obj<String>>> resize(array<array<obj<String>>> t_2, int t_3)
    discard<byte> call<function> print(<obj<Object>>t_2)
    int t_5 = t_2.field<int>[Array.length]
    int t_6 = <int>t_3 + <int>t_5
    array<array<obj<String>>> t_7 = new array<obj<String>>[<int>t_6]
    array<array<obj<String>>> t_8 = <array<array<obj<String>>>>t_7
    int t_10 = <int>0
    int t_12 = <int>0
    array<array<obj<String>>> t_13 = <array<array<obj<String>>>>t_2
    jump _WCOND14
  _WCOND14:
    int t_24 = t_13.field<int>[Array.length]
    jump _WBEG15 if <int>t_12 < <int>t_24 or pass-through to _WEND16
  _WBEG15:
    array<obj<String>> t_17 = t_13[<int>t_12]
    array<obj<String>> t_18 = <array<obj<String>>>t_17
    t_8[<int>t_10] = <array<obj<String>>>t_18
    int t_20 = <int>t_10 + <int>1
    t_10 = <int>t_20
    discard<byte> call<function> print(<obj<Object>>t_18)
    int t_23 = <int>t_12 + <int>1
    t_12 = <int>t_23
    jump _WCOND14
  _WEND16:
    return <array<array<obj<String>>>>t_8

int main()
    array<obj<String>> t_26 = new obj<String>[<int>5]
    array<obj<String>> t_27 = <array<obj<String>>>t_26
    obj<String> t_29 =     new string _S28
    t_27[<int>0] = <obj<String>>t_29
    obj<String> t_32 = t_27[<int>0]
    discard<byte> call<function> printString(<obj<String>>t_32)
    array<int> t_35 = new int[<int>10]
    array<int> t_36 = <array<int>>t_35
    t_36[<int>0] = <int>42
    t_36[<int>3] = <int>69
    discard<byte> call<function> print(<obj<Object>>t_36)
    array<array<obj<String>>> t_43 = new array<obj<String>>[<int>2]
    array<array<obj<String>>> t_44 = <array<array<obj<String>>>>t_43
    array<obj<String>> t_46 = new obj<String>[<int>3]
    t_44[<int>0] = <array<obj<String>>>t_46
    obj<String> t_49 =     new string _S48
    array<obj<String>> t_51 = t_44[<int>0]
    t_51[<int>0] = <obj<String>>t_49
    obj<String> t_54 =     new string _S53
    array<obj<String>> t_56 = t_44[<int>0]
    t_56[<int>2] = <obj<String>>t_54
    obj<String> t_59 =     new string _S58
    discard<byte> call<function> printString(<obj<String>>t_59)
    return <int>0

data string _S28 = "Hello"
data string _S48 = "Hello!"
data string _S53 = ":D"
data string _S58 = "ELO?"
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Running linearizer internal transformation: Value propagator
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Successfully completed internal linearizer transformation: Value propagator
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Running linearizer internal transformation: Expression substituter
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Successfully completed internal linearizer transformation: Expression substituter
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Optimizing IR round 2 (took 3 ms)
[94m[Info]    [0m[Reporting.Logs.logInfo#75] > BEFORE ROUND
struct Array extends [Array, Object]
    field obj<Object> elements;
    field int length;
    field int elementSize;
    method <from:Object> byte Object.equals (_arg_1 obj<Object>)
    method <from:Object> int Object.getHashCode ()
    method <from:Object> obj<String> Array.toString ()

struct Object extends [Object]
    method <from:Object> byte Object.equals (_arg_1 obj<Object>)
    method <from:Object> int Object.getHashCode ()
    method <from:Object> obj<String> Object.toString ()

struct String extends [String, Object]
    method <from:String> int String.charAt (_arg_1 int)
    method <from:Object> byte String.equals (_arg_1 obj<Object>)
    method <from:String> obj<String> String.concat (_arg_1 obj<String>)
    method <from:String> byte String.startsWith (_arg_1 obj<String>)
    method <from:String> byte String.endsWith (_arg_1 obj<String>)
    method <from:String> array<int> String.getBytes ()
    method <from:String> int String.indexOf (_arg_1 obj<String>, _arg_2 int)
    method <from:String> int String.length ()
    method <from:String> obj<String> String.substring (_arg_1 int, _arg_2 int)
    method <from:Object> obj<String> String.toString ()
    method <from:Object> int String.getHashCode ()

array<array<obj<String>>> resize(array<array<obj<String>>> t_2, int t_3)
    discard<byte> call<function> print(<obj<Object>>t_2)
    int t_5 = t_2.field<int>[Array.length]
    int t_6 = <int>t_3 + <int>t_5
    array<array<obj<String>>> t_7 = new array<obj<String>>[<int>t_6]
    array<array<obj<String>>> t_8 = <array<array<obj<String>>>>t_7
    int t_10 = <int>0
    int t_12 = <int>0
    array<array<obj<String>>> t_13 = <array<array<obj<String>>>>t_2
    jump _WCOND14
  _WCOND14:
    int t_24 = t_13.field<int>[Array.length]
    jump _WBEG15 if <int>t_12 < <int>t_24 or pass-through to _WEND16
  _WBEG15:
    array<obj<String>> t_17 = t_13[<int>t_12]
    array<obj<String>> t_18 = <array<obj<String>>>t_17
    t_8[<int>t_10] = <array<obj<String>>>t_18
    int t_20 = <int>t_10 + <int>1
    t_10 = <int>t_20
    discard<byte> call<function> print(<obj<Object>>t_18)
    int t_23 = <int>t_12 + <int>1
    t_12 = <int>t_23
    jump _WCOND14
  _WEND16:
    return <array<array<obj<String>>>>t_8

int main()
    array<obj<String>> t_26 = new obj<String>[<int>5]
    array<obj<String>> t_27 = <array<obj<String>>>t_26
    obj<String> t_29 =     new string _S28
    t_27[<int>0] = <obj<String>>t_29
    obj<String> t_32 = t_27[<int>0]
    discard<byte> call<function> printString(<obj<String>>t_32)
    array<int> t_35 = new int[<int>10]
    array<int> t_36 = <array<int>>t_35
    t_36[<int>0] = <int>42
    t_36[<int>3] = <int>69
    discard<byte> call<function> print(<obj<Object>>t_36)
    array<array<obj<String>>> t_43 = new array<obj<String>>[<int>2]
    array<array<obj<String>>> t_44 = <array<array<obj<String>>>>t_43
    array<obj<String>> t_46 = new obj<String>[<int>3]
    t_44[<int>0] = <array<obj<String>>>t_46
    obj<String> t_49 =     new string _S48
    array<obj<String>> t_51 = t_44[<int>0]
    t_51[<int>0] = <obj<String>>t_49
    obj<String> t_54 =     new string _S53
    array<obj<String>> t_56 = t_44[<int>0]
    t_56[<int>2] = <obj<String>>t_54
    obj<String> t_59 =     new string _S58
    discard<byte> call<function> printString(<obj<String>>t_59)
    return <int>0

data string _S28 = "Hello"
data string _S48 = "Hello!"
data string _S53 = ":D"
data string _S58 = "ELO?"
[94m[Info]    [0m[Reporting.Logs.logInfo#75] > AFTER ROUND
struct Array extends [Array, Object]
    field obj<Object> elements;
    field int length;
    field int elementSize;
    method <from:Object> byte Object.equals (_arg_1 obj<Object>)
    method <from:Object> int Object.getHashCode ()
    method <from:Object> obj<String> Array.toString ()

struct Object extends [Object]
    method <from:Object> byte Object.equals (_arg_1 obj<Object>)
    method <from:Object> int Object.getHashCode ()
    method <from:Object> obj<String> Object.toString ()

struct String extends [String, Object]
    method <from:String> int String.charAt (_arg_1 int)
    method <from:Object> byte String.equals (_arg_1 obj<Object>)
    method <from:String> obj<String> String.concat (_arg_1 obj<String>)
    method <from:String> byte String.startsWith (_arg_1 obj<String>)
    method <from:String> byte String.endsWith (_arg_1 obj<String>)
    method <from:String> array<int> String.getBytes ()
    method <from:String> int String.indexOf (_arg_1 obj<String>, _arg_2 int)
    method <from:String> int String.length ()
    method <from:String> obj<String> String.substring (_arg_1 int, _arg_2 int)
    method <from:Object> obj<String> String.toString ()
    method <from:Object> int String.getHashCode ()

array<array<obj<String>>> resize(array<array<obj<String>>> t_2, int t_3)
    discard<byte> call<function> print(<obj<Object>>t_2)
    int t_5 = t_2.field<int>[Array.length]
    int t_6 = <int>t_3 + <int>t_5
    array<array<obj<String>>> t_7 = new array<obj<String>>[<int>t_6]
    array<array<obj<String>>> t_8 = <array<array<obj<String>>>>t_7
    int t_10 = <int>0
    int t_12 = <int>0
    array<array<obj<String>>> t_13 = <array<array<obj<String>>>>t_2
    jump _WCOND14
  _WCOND14:
    int t_24 = t_13.field<int>[Array.length]
    jump _WBEG15 if <int>t_12 < <int>t_24 or pass-through to _WEND16
  _WBEG15:
    array<obj<String>> t_17 = t_13[<int>t_12]
    array<obj<String>> t_18 = <array<obj<String>>>t_17
    t_8[<int>t_10] = <array<obj<String>>>t_18
    int t_20 = <int>t_10 + <int>1
    t_10 = <int>t_20
    discard<byte> call<function> print(<obj<Object>>t_18)
    int t_23 = <int>t_12 + <int>1
    t_12 = <int>t_23
    jump _WCOND14
  _WEND16:
    return <array<array<obj<String>>>>t_8

int main()
    array<obj<String>> t_26 = new obj<String>[<int>5]
    array<obj<String>> t_27 = <array<obj<String>>>t_26
    obj<String> t_29 =     new string _S28
    t_27[<int>0] = <obj<String>>t_29
    obj<String> t_32 = t_27[<int>0]
    discard<byte> call<function> printString(<obj<String>>t_32)
    array<int> t_35 = new int[<int>10]
    array<int> t_36 = <array<int>>t_35
    t_36[<int>0] = <int>42
    t_36[<int>3] = <int>69
    discard<byte> call<function> print(<obj<Object>>t_36)
    array<array<obj<String>>> t_43 = new array<obj<String>>[<int>2]
    array<array<obj<String>>> t_44 = <array<array<obj<String>>>>t_43
    array<obj<String>> t_46 = new obj<String>[<int>3]
    t_44[<int>0] = <array<obj<String>>>t_46
    obj<String> t_49 =     new string _S48
    array<obj<String>> t_51 = t_44[<int>0]
    t_51[<int>0] = <obj<String>>t_49
    obj<String> t_54 =     new string _S53
    array<obj<String>> t_56 = t_44[<int>0]
    t_56[<int>2] = <obj<String>>t_54
    obj<String> t_59 =     new string _S58
    discard<byte> call<function> printString(<obj<String>>t_59)
    return <int>0

data string _S28 = "Hello"
data string _S48 = "Hello!"
data string _S53 = ":D"
data string _S58 = "ELO?"
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Running linearizer internal transformation: Reference counters embedding
[94m[Info]    [0m[Reporting.Logs.logInfo#75] addRefCounters for new function!
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Register var "t_2" of type array<array<obj<String>>> just as-is
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Register var "t_3" of type int just as-is
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Register var "t_5" of type int in stmt     int t_5 = t_2.field<int>[Array.length]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Register var "t_6" of type int in stmt     int t_6 = <int>t_3 + <int>t_5
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Register var "t_7" of type array<array<obj<String>>> in stmt     array<array<obj<String>>> t_7 = new array<obj<String>>[<int>t_6]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Register var "t_8" of type array<array<obj<String>>> in stmt     array<array<obj<String>>> t_8 = <array<array<obj<String>>>>t_7
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Register var "t_10" of type int in stmt     int t_10 = <int>0
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Register var "t_12" of type int in stmt     int t_12 = <int>0
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Register var "t_13" of type array<array<obj<String>>> in stmt     array<array<obj<String>>> t_13 = <array<array<obj<String>>>>t_2
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Register var "t_24" of type int in stmt     int t_24 = t_13.field<int>[Array.length]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Register var "t_17" of type array<obj<String>> in stmt     array<obj<String>> t_17 = t_13[<int>t_12]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Register var "t_18" of type array<obj<String>> in stmt     array<obj<String>> t_18 = <array<obj<String>>>t_17
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Register var "t_20" of type int in stmt     int t_20 = <int>t_10 + <int>1
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Register var "t_10" of type int in stmt     t_10 = <int>t_20
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Register var "t_23" of type int in stmt     int t_23 = <int>t_12 + <int>1
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Register var "t_12" of type int in stmt     t_12 = <int>t_23
[94m[Info]    [0m[Reporting.Logs.logInfo#75] addRefCounters for new function!
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Register var "t_26" of type array<obj<String>> in stmt     array<obj<String>> t_26 = new obj<String>[<int>5]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Register var "t_27" of type array<obj<String>> in stmt     array<obj<String>> t_27 = <array<obj<String>>>t_26
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Register var "t_29" of type obj<String> in stmt     obj<String> t_29 =     new string _S28
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Register var "c0" of type obj<String> in stmt     obj<String> c0 = t_27[<int>0]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Register var "t_32" of type obj<String> in stmt     obj<String> t_32 = t_27[<int>0]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Register var "t_35" of type array<int> in stmt     array<int> t_35 = new int[<int>10]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Register var "t_36" of type array<int> in stmt     array<int> t_36 = <array<int>>t_35
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Register var "t_43" of type array<array<obj<String>>> in stmt     array<array<obj<String>>> t_43 = new array<obj<String>>[<int>2]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Register var "t_44" of type array<array<obj<String>>> in stmt     array<array<obj<String>>> t_44 = <array<array<obj<String>>>>t_43
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Register var "t_46" of type array<obj<String>> in stmt     array<obj<String>> t_46 = new obj<String>[<int>3]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Register var "t_49" of type obj<String> in stmt     obj<String> t_49 =     new string _S48
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Register var "t_51" of type array<obj<String>> in stmt     array<obj<String>> t_51 = t_44[<int>0]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Register var "c1" of type obj<String> in stmt     obj<String> c1 = t_51[<int>0]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Register var "t_54" of type obj<String> in stmt     obj<String> t_54 =     new string _S53
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Register var "t_56" of type array<obj<String>> in stmt     array<obj<String>> t_56 = t_44[<int>0]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Register var "c2" of type obj<String> in stmt     obj<String> c2 = t_56[<int>2]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Register var "t_59" of type obj<String> in stmt     obj<String> t_59 =     new string _S58
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Successfully completed internal linearizer transformation: Reference counters embedding
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Running linearizer internal transformation: Convert to FIR
[94m[Info]    [0m[Reporting.Logs.logInfo#75] AST to convert:
struct Array extends [Array, Object]
    field obj<Object> elements;
    field int length;
    field int elementSize;
    method <from:Object> byte Object.equals (_arg_1 obj<Object>)
    method <from:Object> int Object.getHashCode ()
    method <from:Object> obj<String> Array.toString ()

struct Object extends [Object]
    method <from:Object> byte Object.equals (_arg_1 obj<Object>)
    method <from:Object> int Object.getHashCode ()
    method <from:Object> obj<String> Object.toString ()

struct String extends [String, Object]
    method <from:String> int String.charAt (_arg_1 int)
    method <from:Object> byte String.equals (_arg_1 obj<Object>)
    method <from:String> obj<String> String.concat (_arg_1 obj<String>)
    method <from:String> byte String.startsWith (_arg_1 obj<String>)
    method <from:String> byte String.endsWith (_arg_1 obj<String>)
    method <from:String> array<int> String.getBytes ()
    method <from:String> int String.indexOf (_arg_1 obj<String>, _arg_2 int)
    method <from:String> int String.length ()
    method <from:String> obj<String> String.substring (_arg_1 int, _arg_2 int)
    method <from:Object> obj<String> String.toString ()
    method <from:Object> int String.getHashCode ()

array<array<obj<String>>> resize(array<array<obj<String>>> t_2, int t_3)
    discard<byte> call<function> print(<obj<Object>>t_2)
    int t_5 = t_2.field<int>[Array.length]
    int t_6 = <int>t_3 + <int>t_5
    array<array<obj<String>>> t_7 = new array<obj<String>>[<int>t_6]
    array<array<obj<String>>> t_8 = <array<array<obj<String>>>>t_7
    int t_10 = <int>0
    int t_12 = <int>0
    array<array<obj<String>>> t_13 = <array<array<obj<String>>>>t_2
    jump _WCOND14
  _WCOND14:
    int t_24 = t_13.field<int>[Array.length]
    jump _WBEG15 if <int>t_12 < <int>t_24 or pass-through to _WEND16
  _WBEG15:
    array<obj<String>> t_17 = t_13[<int>t_12]
    array<obj<String>> t_18 = <array<obj<String>>>t_17
    t_8[<int>t_10] = <array<obj<String>>>t_18
    int t_20 = <int>t_10 + <int>1
    t_10 = <int>t_20
    discard<byte> call<function> print(<obj<Object>>t_18)
    int t_23 = <int>t_12 + <int>1
    t_12 = <int>t_23
    jump _WCOND14
  _WEND16:
    return <array<array<obj<String>>>>t_8

int main()
    array<obj<String>> t_26 = new obj<String>[<int>5]
    array<obj<String>> t_27 = <array<obj<String>>>t_26
    obj<String> t_29 =     new string _S28
    incr_counter <obj<String>>t_29 by 1
    obj<String> c0 = t_27[<int>0]
    incr_counter <obj<String>>c0 by -1
    c0 = <obj<String>>t_29
    incr_counter <obj<String>>c0 by 1
    t_27[<int>0] = <obj<String>>c0
    incr_counter <obj<String>>t_29 by -1
    obj<String> t_32 = t_27[<int>0]
    incr_counter <obj<String>>t_32 by 1
    discard<byte> call<function> printString(<obj<String>>t_32)
    incr_counter <obj<String>>t_32 by -1
    array<int> t_35 = new int[<int>10]
    array<int> t_36 = <array<int>>t_35
    t_36[<int>0] = <int>42
    t_36[<int>3] = <int>69
    discard<byte> call<function> print(<obj<Object>>t_36)
    array<array<obj<String>>> t_43 = new array<obj<String>>[<int>2]
    array<array<obj<String>>> t_44 = <array<array<obj<String>>>>t_43
    array<obj<String>> t_46 = new obj<String>[<int>3]
    t_44[<int>0] = <array<obj<String>>>t_46
    obj<String> t_49 =     new string _S48
    incr_counter <obj<String>>t_49 by 1
    array<obj<String>> t_51 = t_44[<int>0]
    obj<String> c1 = t_51[<int>0]
    incr_counter <obj<String>>c1 by -1
    c1 = <obj<String>>t_49
    incr_counter <obj<String>>c1 by 1
    t_51[<int>0] = <obj<String>>c1
    incr_counter <obj<String>>t_49 by -1
    obj<String> t_54 =     new string _S53
    incr_counter <obj<String>>t_54 by 1
    array<obj<String>> t_56 = t_44[<int>0]
    obj<String> c2 = t_56[<int>2]
    incr_counter <obj<String>>c2 by -1
    c2 = <obj<String>>t_54
    incr_counter <obj<String>>c2 by 1
    t_56[<int>2] = <obj<String>>c2
    incr_counter <obj<String>>t_54 by -1
    obj<String> t_59 =     new string _S58
    incr_counter <obj<String>>t_59 by 1
    discard<byte> call<function> printString(<obj<String>>t_59)
    incr_counter <obj<String>>t_59 by -1
    return <int>0

data string _S28 = "Hello"
data string _S48 = "Hello!"
data string _S53 = ":D"
data string _S58 = "ELO?"
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Successfully completed internal linearizer transformation: Convert to FIR
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Linearizer terminated
[94m[Info]    [0m[Reporting.Logs.logInfo#75] IR conversion doneexample.lat

.metadata: [
  .classes: [
    Array  extends [IRTargetRefName "Array", IRTargetRefName "Object"] : [
      .fields: [
        Object & elements;
        int length;
        int elementSize;
      ]
      .methods: [
        boolean (Object &)Object.equals;
        int () Object.getHashCode;
        String & () Array.toString;
      ]
    ]
    Object  extends [IRTargetRefName "Object"] : [
      .fields: [
        ]
      .methods: [
        boolean (Object &)Object.equals;
        int () Object.getHashCode;
        String & () Object.toString;
      ]
    ]
    String  extends [IRTargetRefName "String", IRTargetRefName "Object"] : [
      .fields: [
        ]
      .methods: [
        int (int)String.charAt;
        boolean (Object &)String.equals;
        String & (String &)String.concat;
        boolean (String &)String.startsWith;
        boolean (String &)String.endsWith;
        int [] & () String.getBytes;
        int (String &, int)String.indexOf;
        int () String.length;
        String & (int, int)String.substring;
        String & () String.toString;
        int () String.getHashCode;
      ]
    ]
    ~cl_TopLevel  extends [] : [
      .fields: [
        ]
      .methods: [
        Array & () Array.toString;
        Object & () Object.toString;
        int () Object.getHashCode;
        boolean (Object &)Object.equals;
        boolean (Object &)String.equals;
        int () String.getHashCode;
        String & () String.toString;
        String & () String.substring;
        int () String.length;
        int (String &, int)String.indexOf;
        String & () String.getBytes;
        boolean (String &)String.endsWith;
        boolean (String &)String.startsWith;
        String & (String &, String &)String.concat;
        int (int)String.charAt;
        boolean (String &)~cl_TopLevel.printString;
        boolean (int)~cl_TopLevel.printInt;
        boolean (boolean)~cl_TopLevel.printByte;
        boolean (boolean)~cl_TopLevel.printBoolean;
        boolean (Array &)~cl_TopLevel.printBinArray;
        String & (boolean)~cl_TopLevel.byteToString;
        String & (boolean)~cl_TopLevel.boolToString;
        String & (int)~cl_TopLevel.intToString;
        boolean (Object &)~cl_TopLevel.print;
        boolean () ~cl_TopLevel.error;
        int () ~cl_TopLevel.readInt;
        String & () ~cl_TopLevel.readString;
        Object & (Object &, Object &)~cl_TopLevel.__cast;
        String & [] & [] & (String & [] & [] &, int)~cl_TopLevel.resize;
        int () ~cl_TopLevel.main;
      ]
    ]
  ]
]
.method String & [] & [] & ~cl_TopLevel.resize (String & [] & [] & %a_t_2, int %a_t_3): [
.L_entry:
  %v_t_2 := load String & [] & [] & & param 0 %a_t_2;
  %v_t_3 := load int & param 1 %a_t_3;
  call boolean ~cl_TopLevel.print (Object & %v_t_2);
  %v_t_5 := load int & fldptr Array %v_t_2 Array.length;
  %v_t_6 := int %v_t_3 + int %v_t_5;
  %v_t_7 := newarr String & [] & [ int %v_t_6 ];
  %v_t_8 := String & [] & [] & %v_t_7;
  %v_t_10 := 0;
  %v_t_12 := 0;
  %v_t_13 := String & [] & [] & %v_t_2;
  jump _WCOND14;
  _WCOND14:
  %v_t_24 := load int & fldptr Array %v_t_13 Array.length;
  %v___temp_0 := int %v_t_12 < int %v_t_24;
  jump if boolean %v___temp_0 then _WBEG15 else _WEND16;
  _WBEG15:
  %v_t_17 := load String & [] & & elemptr String & [] & [] & %v_t_13 [ int %v_t_12 ];
  %v_t_18 := String & [] & %v_t_17;
  %v___temp_1 := String & [] & %v_t_18;
  store String & [] & %v___temp_1 into String & [] & & elemptr String & [] & [] & %v_t_8 [ int %v_t_10 ];
  %v_t_20 := int %v_t_10 + 1;
  %v_t_10 := int %v_t_20;
  call boolean ~cl_TopLevel.print (Object & %v_t_18);
  %v_t_23 := int %v_t_12 + 1;
  %v_t_12 := int %v_t_23;
  jump _WCOND14;
  _WEND16:
  %v___temp_2 := String & [] & [] & %v_t_8;
  %v_return := String & [] & [] & %v___temp_2;
  jump .L_exit;
.L_exit:
  return String & [] & [] & %v_return;
]
.method int ~cl_TopLevel.main (): [
.L_entry:
  %v_t_26 := newarr String & [ 5 ];
  %v_t_27 := String & [] & %v_t_26;
  %v_t_29 := newstr "Hello";
  addref String & String & %v_t_29 1;
  %v_c0 := load String & & elemptr String & [] & %v_t_27 [ 0 ];
  addref String & String & %v_c0 -1;
  %v_c0 := String & %v_t_29;
  addref String & String & %v_c0 1;
  %v___temp_3 := String & %v_c0;
  store String & %v___temp_3 into String & & elemptr String & [] & %v_t_27 [ 0 ];
  addref String & String & %v_t_29 -1;
  %v_t_32 := load String & & elemptr String & [] & %v_t_27 [ 0 ];
  addref String & String & %v_t_32 1;
  call boolean ~cl_TopLevel.printString (String & %v_t_32);
  addref String & String & %v_t_32 -1;
  %v_t_35 := newarr int [ 10 ];
  %v_t_36 := int [] & %v_t_35;
  %v___temp_4 := 42;
  store int %v___temp_4 into int & elemptr int [] & %v_t_36 [ 0 ];
  %v___temp_5 := 69;
  store int %v___temp_5 into int & elemptr int [] & %v_t_36 [ 3 ];
  call boolean ~cl_TopLevel.print (Object & %v_t_36);
  %v_t_43 := newarr String & [] & [ 2 ];
  %v_t_44 := String & [] & [] & %v_t_43;
  %v_t_46 := newarr String & [ 3 ];
  %v___temp_6 := String & [] & %v_t_46;
  store String & [] & %v___temp_6 into String & [] & & elemptr String & [] & [] & %v_t_44 [ 0 ];
  %v_t_49 := newstr "Hello!";
  addref String & String & %v_t_49 1;
  %v_t_51 := load String & [] & & elemptr String & [] & [] & %v_t_44 [ 0 ];
  %v_c1 := load String & & elemptr String & [] & %v_t_51 [ 0 ];
  addref String & String & %v_c1 -1;
  %v_c1 := String & %v_t_49;
  addref String & String & %v_c1 1;
  %v___temp_7 := String & %v_c1;
  store String & %v___temp_7 into String & & elemptr String & [] & %v_t_51 [ 0 ];
  addref String & String & %v_t_49 -1;
  %v_t_54 := newstr ":D";
  addref String & String & %v_t_54 1;
  %v_t_56 := load String & [] & & elemptr String & [] & [] & %v_t_44 [ 0 ];
  %v_c2 := load String & & elemptr String & [] & %v_t_56 [ 2 ];
  addref String & String & %v_c2 -1;
  %v_c2 := String & %v_t_54;
  addref String & String & %v_c2 1;
  %v___temp_8 := String & %v_c2;
  store String & %v___temp_8 into String & & elemptr String & [] & %v_t_56 [ 2 ];
  addref String & String & %v_t_54 -1;
  %v_t_59 := newstr "ELO?";
  addref String & String & %v_t_59 1;
  call boolean ~cl_TopLevel.printString (String & %v_t_59);
  addref String & String & %v_t_59 -1;
  %v___temp_9 := 0;
  %v_return := int %v___temp_9;
  jump .L_exit;
.L_exit:
  return int %v_return;
]

[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Try collapsing CFG nodes in CFG [
[".L_entry",".L_exit","_WBEG15","_WCOND14","_WCOND14__from__WBEG15","_WCOND14__from_entry","_WEND16"]
".L_entry" -> fromList [IRLabelName "_WCOND14__from_entry"] <- fromList []
".L_exit" -> fromList [] <- fromList [IRLabelName "_WEND16"]
"_WBEG15" -> fromList [IRLabelName "_WCOND14__from__WBEG15"] <- fromList [IRLabelName "_WCOND14"]
"_WCOND14" -> fromList [IRLabelName "_WBEG15",IRLabelName "_WEND16"] <- fromList [IRLabelName "_WCOND14__from__WBEG15",IRLabelName "_WCOND14__from_entry"]
"_WCOND14__from__WBEG15" -> fromList [IRLabelName "_WCOND14"] <- fromList [IRLabelName "_WBEG15"]
"_WCOND14__from_entry" -> fromList [IRLabelName "_WCOND14"] <- fromList [IRLabelName ".L_entry"]
"_WEND16" -> fromList [IRLabelName ".L_exit"] <- fromList [IRLabelName "_WCOND14"]

]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Collapse eligible edge .L_entry == to => _WCOND14__from_entry
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Try collapsing CFG nodes in CFG [
[".L_entry",".L_exit","_WBEG15","_WCOND14","_WCOND14__from__WBEG15","_WEND16"]
".L_entry" -> fromList [IRLabelName "_WCOND14"] <- fromList []
".L_exit" -> fromList [] <- fromList [IRLabelName "_WEND16"]
"_WBEG15" -> fromList [IRLabelName "_WCOND14__from__WBEG15"] <- fromList [IRLabelName "_WCOND14"]
"_WCOND14" -> fromList [IRLabelName "_WBEG15",IRLabelName "_WEND16"] <- fromList [IRLabelName ".L_entry",IRLabelName "_WCOND14__from__WBEG15"]
"_WCOND14__from__WBEG15" -> fromList [IRLabelName "_WCOND14"] <- fromList [IRLabelName "_WBEG15"]
"_WEND16" -> fromList [IRLabelName ".L_exit"] <- fromList [IRLabelName "_WCOND14"]

]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Collapse eligible edge _WBEG15 == to => _WCOND14__from__WBEG15
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Try collapsing CFG nodes in CFG [
[".L_entry",".L_exit","_WBEG15","_WCOND14","_WEND16"]
".L_entry" -> fromList [IRLabelName "_WCOND14"] <- fromList []
".L_exit" -> fromList [] <- fromList [IRLabelName "_WEND16"]
"_WBEG15" -> fromList [IRLabelName "_WCOND14"] <- fromList [IRLabelName "_WCOND14"]
"_WCOND14" -> fromList [IRLabelName "_WBEG15",IRLabelName "_WEND16"] <- fromList [IRLabelName ".L_entry",IRLabelName "_WBEG15"]
"_WEND16" -> fromList [IRLabelName ".L_exit"] <- fromList [IRLabelName "_WCOND14"]

]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Collapse eligible edge _WEND16 == to => .L_exit
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Try collapsing CFG nodes in CFG [
[".L_entry","_WBEG15","_WCOND14","_WEND16"]
".L_entry" -> fromList [IRLabelName "_WCOND14"] <- fromList []
"_WBEG15" -> fromList [IRLabelName "_WCOND14"] <- fromList [IRLabelName "_WCOND14"]
"_WCOND14" -> fromList [IRLabelName "_WBEG15",IRLabelName "_WEND16"] <- fromList [IRLabelName ".L_entry",IRLabelName "_WBEG15"]
"_WEND16" -> fromList [] <- fromList [IRLabelName "_WCOND14"]

]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Try collapsing CFG nodes in CFG [
[".L_entry",".L_exit"]
".L_entry" -> fromList [IRLabelName ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [IRLabelName ".L_entry"]

]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Collapse eligible edge .L_entry == to => .L_exit
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Try collapsing CFG nodes in CFG [
[".L_entry"]
".L_entry" -> fromList [] <- fromList []

]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> GENERATED CFGS

CFG for ~cl_TopLevel.resize:
[".L_entry",".L_exit","_WBEG15","_WCOND14","_WEND16"]
".L_entry" -> fromList [IRLabelName "_WCOND14"] <- fromList []
".L_exit" -> fromList [] <- fromList [IRLabelName "_WEND16"]
"_WBEG15" -> fromList [IRLabelName "_WCOND14"] <- fromList [IRLabelName "_WCOND14"]
"_WCOND14" -> fromList [IRLabelName "_WBEG15",IRLabelName "_WEND16"] <- fromList [IRLabelName ".L_entry",IRLabelName "_WBEG15"]
"_WEND16" -> fromList [IRLabelName ".L_exit"] <- fromList [IRLabelName "_WCOND14"]
Code: 
.method String & [] & [] & ~cl_TopLevel.resize (String & [] & [] & %a_t_2, int %a_t_3): [
.L_entry:
  %v_t_2 := load String & [] & [] & & param 0 %a_t_2;
  %v_t_3 := load int & param 1 %a_t_3;
  call boolean ~cl_TopLevel.print (Object & %v_t_2);
  %v_t_5 := load int & fldptr Array %v_t_2 Array.length;
  %v_t_6 := int %v_t_3 + int %v_t_5;
  %v_t_7 := newarr String & [] & [ int %v_t_6 ];
  %v_t_8 := String & [] & [] & %v_t_7;
  %v_t_10 := 0;
  %v_t_12 := 0;
  %v_t_13 := String & [] & [] & %v_t_2;
  jump _WCOND14;
  _WCOND14:
  %v_t_24 := load int & fldptr Array %v_t_13 Array.length;
  %v___temp_0 := int %v_t_12 < int %v_t_24;
  jump if boolean %v___temp_0 then _WBEG15 else _WEND16;
  _WBEG15:
  %v_t_17 := load String & [] & & elemptr String & [] & [] & %v_t_13 [ int %v_t_12 ];
  %v_t_18 := String & [] & %v_t_17;
  %v___temp_1 := String & [] & %v_t_18;
  store String & [] & %v___temp_1 into String & [] & & elemptr String & [] & [] & %v_t_8 [ int %v_t_10 ];
  %v_t_20 := int %v_t_10 + 1;
  %v_t_10 := int %v_t_20;
  call boolean ~cl_TopLevel.print (Object & %v_t_18);
  %v_t_23 := int %v_t_12 + 1;
  %v_t_12 := int %v_t_23;
  jump _WCOND14;
  _WEND16:
  %v___temp_2 := String & [] & [] & %v_t_8;
  %v_return := String & [] & [] & %v___temp_2;
  jump .L_exit;
.L_exit:
  return String & [] & [] & %v_return;
]

CFG for ~cl_TopLevel.main:
[".L_entry",".L_exit"]
".L_entry" -> fromList [IRLabelName ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [IRLabelName ".L_entry"]
Code: 
.method int ~cl_TopLevel.main (): [
.L_entry:
  %v_t_26 := newarr String & [ 5 ];
  %v_t_27 := String & [] & %v_t_26;
  %v_t_29 := newstr "Hello";
  addref String & String & %v_t_29 1;
  %v_c0 := load String & & elemptr String & [] & %v_t_27 [ 0 ];
  addref String & String & %v_c0 -1;
  %v_c0 := String & %v_t_29;
  addref String & String & %v_c0 1;
  %v___temp_3 := String & %v_c0;
  store String & %v___temp_3 into String & & elemptr String & [] & %v_t_27 [ 0 ];
  addref String & String & %v_t_29 -1;
  %v_t_32 := load String & & elemptr String & [] & %v_t_27 [ 0 ];
  addref String & String & %v_t_32 1;
  call boolean ~cl_TopLevel.printString (String & %v_t_32);
  addref String & String & %v_t_32 -1;
  %v_t_35 := newarr int [ 10 ];
  %v_t_36 := int [] & %v_t_35;
  %v___temp_4 := 42;
  store int %v___temp_4 into int & elemptr int [] & %v_t_36 [ 0 ];
  %v___temp_5 := 69;
  store int %v___temp_5 into int & elemptr int [] & %v_t_36 [ 3 ];
  call boolean ~cl_TopLevel.print (Object & %v_t_36);
  %v_t_43 := newarr String & [] & [ 2 ];
  %v_t_44 := String & [] & [] & %v_t_43;
  %v_t_46 := newarr String & [ 3 ];
  %v___temp_6 := String & [] & %v_t_46;
  store String & [] & %v___temp_6 into String & [] & & elemptr String & [] & [] & %v_t_44 [ 0 ];
  %v_t_49 := newstr "Hello!";
  addref String & String & %v_t_49 1;
  %v_t_51 := load String & [] & & elemptr String & [] & [] & %v_t_44 [ 0 ];
  %v_c1 := load String & & elemptr String & [] & %v_t_51 [ 0 ];
  addref String & String & %v_c1 -1;
  %v_c1 := String & %v_t_49;
  addref String & String & %v_c1 1;
  %v___temp_7 := String & %v_c1;
  store String & %v___temp_7 into String & & elemptr String & [] & %v_t_51 [ 0 ];
  addref String & String & %v_t_49 -1;
  %v_t_54 := newstr ":D";
  addref String & String & %v_t_54 1;
  %v_t_56 := load String & [] & & elemptr String & [] & [] & %v_t_44 [ 0 ];
  %v_c2 := load String & & elemptr String & [] & %v_t_56 [ 2 ];
  addref String & String & %v_c2 -1;
  %v_c2 := String & %v_t_54;
  addref String & String & %v_c2 1;
  %v___temp_8 := String & %v_c2;
  store String & %v___temp_8 into String & & elemptr String & [] & %v_t_56 [ 2 ];
  addref String & String & %v_t_54 -1;
  %v_t_59 := newstr "ELO?";
  addref String & String & %v_t_59 1;
  call boolean ~cl_TopLevel.printString (String & %v_t_59);
  addref String & String & %v_t_59 -1;
  %v___temp_9 := 0;
  %v_return := int %v___temp_9;
  jump .L_exit;
.L_exit:
  return int %v_return;
]


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> GENERATED INTERMEDIATE STEP Removing unreachable blocks...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] CFG for ~cl_TopLevel.resize:
[".L_entry",".L_exit","_WBEG15","_WCOND14","_WEND16"]
".L_entry" -> fromList [IRLabelName "_WCOND14"] <- fromList []
".L_exit" -> fromList [] <- fromList [IRLabelName "_WEND16"]
"_WBEG15" -> fromList [IRLabelName "_WCOND14"] <- fromList [IRLabelName "_WCOND14"]
"_WCOND14" -> fromList [IRLabelName "_WBEG15",IRLabelName "_WEND16"] <- fromList [IRLabelName ".L_entry",IRLabelName "_WBEG15"]
"_WEND16" -> fromList [IRLabelName ".L_exit"] <- fromList [IRLabelName "_WCOND14"]
Code: 
.method String & [] & [] & ~cl_TopLevel.resize (String & [] & [] & %a_t_2, int %a_t_3): [
.L_entry:
  %v_t_2 := load String & [] & [] & & param 0 %a_t_2;
  %v_t_3 := load int & param 1 %a_t_3;
  call boolean ~cl_TopLevel.print (Object & %v_t_2);
  %v_t_5 := load int & fldptr Array %v_t_2 Array.length;
  %v_t_6 := int %v_t_3 + int %v_t_5;
  %v_t_7 := newarr String & [] & [ int %v_t_6 ];
  %v_t_8 := String & [] & [] & %v_t_7;
  %v_t_10 := 0;
  %v_t_12 := 0;
  %v_t_13 := String & [] & [] & %v_t_2;
  jump _WCOND14;
  _WCOND14:
  %v_t_24 := load int & fldptr Array %v_t_13 Array.length;
  %v___temp_0 := int %v_t_12 < int %v_t_24;
  jump if boolean %v___temp_0 then _WBEG15 else _WEND16;
  _WBEG15:
  %v_t_17 := load String & [] & & elemptr String & [] & [] & %v_t_13 [ int %v_t_12 ];
  %v_t_18 := String & [] & %v_t_17;
  %v___temp_1 := String & [] & %v_t_18;
  store String & [] & %v___temp_1 into String & [] & & elemptr String & [] & [] & %v_t_8 [ int %v_t_10 ];
  %v_t_20 := int %v_t_10 + 1;
  %v_t_10 := int %v_t_20;
  call boolean ~cl_TopLevel.print (Object & %v_t_18);
  %v_t_23 := int %v_t_12 + 1;
  %v_t_12 := int %v_t_23;
  jump _WCOND14;
  _WEND16:
  %v___temp_2 := String & [] & [] & %v_t_8;
  %v_return := String & [] & [] & %v___temp_2;
  jump .L_exit;
.L_exit:
  return String & [] & [] & %v_return;
]

CFG for ~cl_TopLevel.main:
[".L_entry",".L_exit"]
".L_entry" -> fromList [IRLabelName ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [IRLabelName ".L_entry"]
Code: 
.method int ~cl_TopLevel.main (): [
.L_entry:
  %v_t_26 := newarr String & [ 5 ];
  %v_t_27 := String & [] & %v_t_26;
  %v_t_29 := newstr "Hello";
  addref String & String & %v_t_29 1;
  %v_c0 := load String & & elemptr String & [] & %v_t_27 [ 0 ];
  addref String & String & %v_c0 -1;
  %v_c0 := String & %v_t_29;
  addref String & String & %v_c0 1;
  %v___temp_3 := String & %v_c0;
  store String & %v___temp_3 into String & & elemptr String & [] & %v_t_27 [ 0 ];
  addref String & String & %v_t_29 -1;
  %v_t_32 := load String & & elemptr String & [] & %v_t_27 [ 0 ];
  addref String & String & %v_t_32 1;
  call boolean ~cl_TopLevel.printString (String & %v_t_32);
  addref String & String & %v_t_32 -1;
  %v_t_35 := newarr int [ 10 ];
  %v_t_36 := int [] & %v_t_35;
  %v___temp_4 := 42;
  store int %v___temp_4 into int & elemptr int [] & %v_t_36 [ 0 ];
  %v___temp_5 := 69;
  store int %v___temp_5 into int & elemptr int [] & %v_t_36 [ 3 ];
  call boolean ~cl_TopLevel.print (Object & %v_t_36);
  %v_t_43 := newarr String & [] & [ 2 ];
  %v_t_44 := String & [] & [] & %v_t_43;
  %v_t_46 := newarr String & [ 3 ];
  %v___temp_6 := String & [] & %v_t_46;
  store String & [] & %v___temp_6 into String & [] & & elemptr String & [] & [] & %v_t_44 [ 0 ];
  %v_t_49 := newstr "Hello!";
  addref String & String & %v_t_49 1;
  %v_t_51 := load String & [] & & elemptr String & [] & [] & %v_t_44 [ 0 ];
  %v_c1 := load String & & elemptr String & [] & %v_t_51 [ 0 ];
  addref String & String & %v_c1 -1;
  %v_c1 := String & %v_t_49;
  addref String & String & %v_c1 1;
  %v___temp_7 := String & %v_c1;
  store String & %v___temp_7 into String & & elemptr String & [] & %v_t_51 [ 0 ];
  addref String & String & %v_t_49 -1;
  %v_t_54 := newstr ":D";
  addref String & String & %v_t_54 1;
  %v_t_56 := load String & [] & & elemptr String & [] & [] & %v_t_44 [ 0 ];
  %v_c2 := load String & & elemptr String & [] & %v_t_56 [ 2 ];
  addref String & String & %v_c2 -1;
  %v_c2 := String & %v_t_54;
  addref String & String & %v_c2 1;
  %v___temp_8 := String & %v_c2;
  store String & %v___temp_8 into String & & elemptr String & [] & %v_t_56 [ 2 ];
  addref String & String & %v_t_54 -1;
  %v_t_59 := newstr "ELO?";
  addref String & String & %v_t_59 1;
  call boolean ~cl_TopLevel.printString (String & %v_t_59);
  addref String & String & %v_t_59 -1;
  %v___temp_9 := 0;
  %v_return := int %v___temp_9;
  jump .L_exit;
.L_exit:
  return int %v_return;
]


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> END STEP Removing unreachable blocks...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> GENERATED INTERMEDIATE STEP Analysing liveness...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] CFG for ~cl_TopLevel.resize:
[".L_entry",".L_exit","_WBEG15","_WCOND14","_WEND16"]
".L_entry" -> fromList [IRLabelName "_WCOND14"] <- fromList []
".L_exit" -> fromList [] <- fromList [IRLabelName "_WEND16"]
"_WBEG15" -> fromList [IRLabelName "_WCOND14"] <- fromList [IRLabelName "_WCOND14"]
"_WCOND14" -> fromList [IRLabelName "_WBEG15",IRLabelName "_WEND16"] <- fromList [IRLabelName ".L_entry",IRLabelName "_WBEG15"]
"_WEND16" -> fromList [IRLabelName ".L_exit"] <- fromList [IRLabelName "_WCOND14"]
Liveness at start of .L_entry: in = [("%a_t_2",(1,Ref () (Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String"))))))))),("%a_t_3",(2,Ref () (Int ())))], out = [("%a_t_2",(0,Ref () (Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String"))))))))),("%a_t_3",(1,Ref () (Int ())))], use = [], kill = []
Liveness at end of .L_entry: in = [("%v_t_13",(3,Cl () (IRTargetRefName "Array"))),("%v_t_8",(8,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_10",(11,Int ())),("%v_t_12",(4,Int ()))], out = [("%v_t_13",(2,Cl () (IRTargetRefName "Array"))),("%v_t_8",(7,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_10",(10,Int ())),("%v_t_12",(3,Int ()))], use = [], kill = []
Liveness at start of .L_exit: in = [("%v_return",(1,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String"))))))))], out = [("%v_return",(0,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String"))))))))], use = [], kill = []
Liveness at end of .L_exit: in = [("%v_return",(0,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String"))))))))], out = [], use = [("%v_return",Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))], kill = []
Liveness at start of _WBEG15: in = [("%v_t_13",(1,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_8",(4,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_10",(4,Int ())),("%v_t_12",(1,Int ()))], out = [("%v_t_13",(0,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_8",(3,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_10",(3,Int ())),("%v_t_12",(0,Int ()))], use = [], kill = []
Liveness at end of _WBEG15: in = [("%v_t_13",(3,Cl () (IRTargetRefName "Array"))),("%v_t_8",(8,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_10",(11,Int ())),("%v_t_12",(4,Int ()))], out = [("%v_t_13",(2,Cl () (IRTargetRefName "Array"))),("%v_t_8",(7,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_10",(10,Int ())),("%v_t_12",(3,Int ()))], use = [], kill = []
Liveness at start of _WCOND14: in = [("%v_t_13",(1,Cl () (IRTargetRefName "Array"))),("%v_t_8",(6,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_10",(9,Int ())),("%v_t_12",(2,Int ()))], out = [("%v_t_13",(0,Cl () (IRTargetRefName "Array"))),("%v_t_8",(5,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_10",(8,Int ())),("%v_t_12",(1,Int ()))], use = [], kill = []
Liveness at end of _WCOND14: in = [("%v___temp_0",(0,Bool ())),("%v_t_13",(3,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_8",(3,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_10",(6,Int ())),("%v_t_12",(3,Int ()))], out = [("%v_t_13",(2,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_8",(2,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_10",(5,Int ())),("%v_t_12",(2,Int ()))], use = [("%v___temp_0",Bool ())], kill = []
Liveness at start of _WEND16: in = [("%v_t_8",(1,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String"))))))))], out = [("%v_t_8",(0,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String"))))))))], use = [], kill = []
Liveness at end of _WEND16: in = [("%v_return",(3,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String"))))))))], out = [("%v_return",(2,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String"))))))))], use = [], kill = []
Code: 
.method String & [] & [] & ~cl_TopLevel.resize (String & [] & [] & %a_t_2, int %a_t_3): [
.L_entry:
  %v_t_2 := load String & [] & [] & & param 0 %a_t_2;
  %v_t_3 := load int & param 1 %a_t_3;
  call boolean ~cl_TopLevel.print (Object & %v_t_2);
  %v_t_5 := load int & fldptr Array %v_t_2 Array.length;
  %v_t_6 := int %v_t_3 + int %v_t_5;
  %v_t_7 := newarr String & [] & [ int %v_t_6 ];
  %v_t_8 := String & [] & [] & %v_t_7;
  %v_t_10 := 0;
  %v_t_12 := 0;
  %v_t_13 := String & [] & [] & %v_t_2;
  jump _WCOND14;
  _WCOND14:
  %v_t_24 := load int & fldptr Array %v_t_13 Array.length;
  %v___temp_0 := int %v_t_12 < int %v_t_24;
  jump if boolean %v___temp_0 then _WBEG15 else _WEND16;
  _WBEG15:
  %v_t_17 := load String & [] & & elemptr String & [] & [] & %v_t_13 [ int %v_t_12 ];
  %v_t_18 := String & [] & %v_t_17;
  %v___temp_1 := String & [] & %v_t_18;
  store String & [] & %v___temp_1 into String & [] & & elemptr String & [] & [] & %v_t_8 [ int %v_t_10 ];
  %v_t_20 := int %v_t_10 + 1;
  %v_t_10 := int %v_t_20;
  call boolean ~cl_TopLevel.print (Object & %v_t_18);
  %v_t_23 := int %v_t_12 + 1;
  %v_t_12 := int %v_t_23;
  jump _WCOND14;
  _WEND16:
  %v___temp_2 := String & [] & [] & %v_t_8;
  %v_return := String & [] & [] & %v___temp_2;
  jump .L_exit;
.L_exit:
  return String & [] & [] & %v_return;
]

CFG for ~cl_TopLevel.main:
[".L_entry",".L_exit"]
".L_entry" -> fromList [IRLabelName ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [IRLabelName ".L_entry"]
Liveness at start of .L_entry: in = [], out = [], use = [], kill = []
Liveness at end of .L_entry: in = [("%v_return",(3,Int ()))], out = [("%v_return",(2,Int ()))], use = [], kill = []
Liveness at start of .L_exit: in = [("%v_return",(1,Int ()))], out = [("%v_return",(0,Int ()))], use = [], kill = []
Liveness at end of .L_exit: in = [("%v_return",(0,Int ()))], out = [], use = [("%v_return",Int ())], kill = []
Code: 
.method int ~cl_TopLevel.main (): [
.L_entry:
  %v_t_26 := newarr String & [ 5 ];
  %v_t_27 := String & [] & %v_t_26;
  %v_t_29 := newstr "Hello";
  addref String & String & %v_t_29 1;
  %v_c0 := load String & & elemptr String & [] & %v_t_27 [ 0 ];
  addref String & String & %v_c0 -1;
  %v_c0 := String & %v_t_29;
  addref String & String & %v_c0 1;
  %v___temp_3 := String & %v_c0;
  store String & %v___temp_3 into String & & elemptr String & [] & %v_t_27 [ 0 ];
  addref String & String & %v_t_29 -1;
  %v_t_32 := load String & & elemptr String & [] & %v_t_27 [ 0 ];
  addref String & String & %v_t_32 1;
  call boolean ~cl_TopLevel.printString (String & %v_t_32);
  addref String & String & %v_t_32 -1;
  %v_t_35 := newarr int [ 10 ];
  %v_t_36 := int [] & %v_t_35;
  %v___temp_4 := 42;
  store int %v___temp_4 into int & elemptr int [] & %v_t_36 [ 0 ];
  %v___temp_5 := 69;
  store int %v___temp_5 into int & elemptr int [] & %v_t_36 [ 3 ];
  call boolean ~cl_TopLevel.print (Object & %v_t_36);
  %v_t_43 := newarr String & [] & [ 2 ];
  %v_t_44 := String & [] & [] & %v_t_43;
  %v_t_46 := newarr String & [ 3 ];
  %v___temp_6 := String & [] & %v_t_46;
  store String & [] & %v___temp_6 into String & [] & & elemptr String & [] & [] & %v_t_44 [ 0 ];
  %v_t_49 := newstr "Hello!";
  addref String & String & %v_t_49 1;
  %v_t_51 := load String & [] & & elemptr String & [] & [] & %v_t_44 [ 0 ];
  %v_c1 := load String & & elemptr String & [] & %v_t_51 [ 0 ];
  addref String & String & %v_c1 -1;
  %v_c1 := String & %v_t_49;
  addref String & String & %v_c1 1;
  %v___temp_7 := String & %v_c1;
  store String & %v___temp_7 into String & & elemptr String & [] & %v_t_51 [ 0 ];
  addref String & String & %v_t_49 -1;
  %v_t_54 := newstr ":D";
  addref String & String & %v_t_54 1;
  %v_t_56 := load String & [] & & elemptr String & [] & [] & %v_t_44 [ 0 ];
  %v_c2 := load String & & elemptr String & [] & %v_t_56 [ 2 ];
  addref String & String & %v_c2 -1;
  %v_c2 := String & %v_t_54;
  addref String & String & %v_c2 1;
  %v___temp_8 := String & %v_c2;
  store String & %v___temp_8 into String & & elemptr String & [] & %v_t_56 [ 2 ];
  addref String & String & %v_t_54 -1;
  %v_t_59 := newstr "ELO?";
  addref String & String & %v_t_59 1;
  call boolean ~cl_TopLevel.printString (String & %v_t_59);
  addref String & String & %v_t_59 -1;
  %v___temp_9 := 0;
  %v_return := int %v___temp_9;
  jump .L_exit;
.L_exit:
  return int %v_return;
]


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> END STEP Analysing liveness...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> GENERATED INTERMEDIATE STEP Transforming to SSA...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] CFG for ~cl_TopLevel.resize:
[".L_entry",".L_exit","_WBEG15","_WCOND14","_WEND16"]
".L_entry" -> fromList [IRLabelName "_WCOND14"] <- fromList []
".L_exit" -> fromList [] <- fromList [IRLabelName "_WEND16"]
"_WBEG15" -> fromList [IRLabelName "_WCOND14"] <- fromList [IRLabelName "_WCOND14"]
"_WCOND14" -> fromList [IRLabelName "_WBEG15",IRLabelName "_WEND16"] <- fromList [IRLabelName ".L_entry",IRLabelName "_WBEG15"]
"_WEND16" -> fromList [IRLabelName ".L_exit"] <- fromList [IRLabelName "_WCOND14"]
Code: 
.method String & [] & [] & ~cl_TopLevel.resize (String & [] & [] & %a_t_2, int %a_t_3): [
.L_entry:
  %v_t_2 := load String & [] & [] & & param 0 %a_t_2;
  %v_t_3 := load int & param 1 %a_t_3;
  call boolean ~cl_TopLevel.print (Object & %v_t_2);
  %v_t_5 := load int & fldptr Array %v_t_2 Array.length;
  %v_t_6 := int %v_t_3 + int %v_t_5;
  %v_t_7 := newarr String & [] & [ int %v_t_6 ];
  %v_t_8 := String & [] & [] & %v_t_7;
  %v_t_10 := 0;
  %v_t_12 := 0;
  %v_t_13 := String & [] & [] & %v_t_2;
  jump _WCOND14;
  _WCOND14:
  %v_t_24 := load int & fldptr Array %v_t_13 Array.length;
  %v___temp_0 := int %v_t_12 < int %v_t_24;
  jump if boolean %v___temp_0 then _WBEG15 else _WEND16;
  _WBEG15:
  %v_t_17 := load String & [] & & elemptr String & [] & [] & %v_t_13 [ int %v_t_12 ];
  %v_t_18 := String & [] & %v_t_17;
  %v___temp_1 := String & [] & %v_t_18;
  store String & [] & %v___temp_1 into String & [] & & elemptr String & [] & [] & %v_t_8 [ int %v_t_10 ];
  %v_t_20 := int %v_t_10 + 1;
  %v_t_10 := int %v_t_20;
  call boolean ~cl_TopLevel.print (Object & %v_t_18);
  %v_t_23 := int %v_t_12 + 1;
  %v_t_12 := int %v_t_23;
  jump _WCOND14;
  _WEND16:
  %v___temp_2 := String & [] & [] & %v_t_8;
  %v_return := String & [] & [] & %v___temp_2;
  jump .L_exit;
.L_exit:
  return String & [] & [] & %v_return;
]

CFG for ~cl_TopLevel.main:
[".L_entry",".L_exit"]
".L_entry" -> fromList [IRLabelName ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [IRLabelName ".L_entry"]
Code: 
.method int ~cl_TopLevel.main (): [
.L_entry:
  %v_t_26 := newarr String & [ 5 ];
  %v_t_27 := String & [] & %v_t_26;
  %v_t_29 := newstr "Hello";
  addref String & String & %v_t_29 1;
  %v_c0 := load String & & elemptr String & [] & %v_t_27 [ 0 ];
  addref String & String & %v_c0 -1;
  %v_c0 := String & %v_t_29;
  addref String & String & %v_c0 1;
  %v___temp_3 := String & %v_c0;
  store String & %v___temp_3 into String & & elemptr String & [] & %v_t_27 [ 0 ];
  addref String & String & %v_t_29 -1;
  %v_t_32 := load String & & elemptr String & [] & %v_t_27 [ 0 ];
  addref String & String & %v_t_32 1;
  call boolean ~cl_TopLevel.printString (String & %v_t_32);
  addref String & String & %v_t_32 -1;
  %v_t_35 := newarr int [ 10 ];
  %v_t_36 := int [] & %v_t_35;
  %v___temp_4 := 42;
  store int %v___temp_4 into int & elemptr int [] & %v_t_36 [ 0 ];
  %v___temp_5 := 69;
  store int %v___temp_5 into int & elemptr int [] & %v_t_36 [ 3 ];
  call boolean ~cl_TopLevel.print (Object & %v_t_36);
  %v_t_43 := newarr String & [] & [ 2 ];
  %v_t_44 := String & [] & [] & %v_t_43;
  %v_t_46 := newarr String & [ 3 ];
  %v___temp_6 := String & [] & %v_t_46;
  store String & [] & %v___temp_6 into String & [] & & elemptr String & [] & [] & %v_t_44 [ 0 ];
  %v_t_49 := newstr "Hello!";
  addref String & String & %v_t_49 1;
  %v_t_51 := load String & [] & & elemptr String & [] & [] & %v_t_44 [ 0 ];
  %v_c1 := load String & & elemptr String & [] & %v_t_51 [ 0 ];
  addref String & String & %v_c1 -1;
  %v_c1 := String & %v_t_49;
  addref String & String & %v_c1 1;
  %v___temp_7 := String & %v_c1;
  store String & %v___temp_7 into String & & elemptr String & [] & %v_t_51 [ 0 ];
  addref String & String & %v_t_49 -1;
  %v_t_54 := newstr ":D";
  addref String & String & %v_t_54 1;
  %v_t_56 := load String & [] & & elemptr String & [] & [] & %v_t_44 [ 0 ];
  %v_c2 := load String & & elemptr String & [] & %v_t_56 [ 2 ];
  addref String & String & %v_c2 -1;
  %v_c2 := String & %v_t_54;
  addref String & String & %v_c2 1;
  %v___temp_8 := String & %v_c2;
  store String & %v___temp_8 into String & & elemptr String & [] & %v_t_56 [ 2 ];
  addref String & String & %v_t_54 -1;
  %v_t_59 := newstr "ELO?";
  addref String & String & %v_t_59 1;
  call boolean ~cl_TopLevel.printString (String & %v_t_59);
  addref String & String & %v_t_59 -1;
  %v___temp_9 := 0;
  %v_return := int %v___temp_9;
  jump .L_exit;
.L_exit:
  return int %v_return;
]


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> END STEP Transforming to SSA...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> ENTIRE SSA CODE DUMP 


[94m[Info]    [0m[Reporting.Logs.logInfo#75] [(SSA [".L_entry",".L_exit","_WBEG15","_WCOND14","_WEND16"]
".L_entry" -> fromList [IRLabelName "_WCOND14"] <- fromList []
".L_exit" -> fromList [] <- fromList [IRLabelName "_WEND16"]
"_WBEG15" -> fromList [IRLabelName "_WCOND14"] <- fromList [IRLabelName "_WCOND14"]
"_WCOND14" -> fromList [IRLabelName "_WBEG15",IRLabelName "_WEND16"] <- fromList [IRLabelName ".L_entry",IRLabelName "_WBEG15"]
"_WEND16" -> fromList [IRLabelName ".L_exit"] <- fromList [IRLabelName "_WCOND14"]
,Mthd example.lat:1:1 (Ref example.lat:1:1 (Arr example.lat:1:1 (Ref example.lat:1:1 (Arr example.lat:1:1 (Ref example.lat:1:1 (Cl example.lat:1:1 (IRTargetRefName "String"))))))) (QIdent example.lat:1:12 (IRTargetRefName "~cl_TopLevel") (IRTargetRefName "resize")) [Param example.lat:1:1 (Ref example.lat:1:19 (Arr example.lat:1:19 (Ref example.lat:1:19 (Arr example.lat:1:19 (Ref example.lat:1:19 (Cl example.lat:1:19 (IRTargetRefName "String"))))))) (IRValueName "%a_t_2"),Param example.lat:1:1 (Int example.lat:1:38) (IRValueName "%a_t_3")] [ILabel example.lat:1:1 (IRLabelName ".L_entry"),ILoad example.lat:1:1 (IRValueName "%v_t_2") (PParam example.lat:1:1 (Ref example.lat:1:1 (Ref example.lat:1:19 (Arr example.lat:1:19 (Ref example.lat:1:19 (Arr example.lat:1:19 (Ref example.lat:1:19 (Cl example.lat:1:19 (IRTargetRefName "String")))))))) 0 (IRValueName "%a_t_2")),ILoad example.lat:1:1 (IRValueName "%v_t_3") (PParam example.lat:1:1 (Ref example.lat:1:1 (Int example.lat:1:38)) 1 (IRValueName "%a_t_3")),IVCall example.lat:2:5 (Call example.lat:2:5 (Bool inside standard library) (QIdent example.lat:2:5 (IRTargetRefName "~cl_TopLevel") (IRTargetRefName "print")) [VVal example.lat:2:5 (Ref inside standard library (Cl inside standard library (IRTargetRefName "Object"))) (IRValueName "%v_t_2")] []),ILoad example.lat:3:47 (IRValueName "%v_t_5") (PFld example.lat:3:47 (Ref example.lat:3:47 (Int inside standard library)) (VVal example.lat:3:47 (Cl example.lat:3:47 (IRTargetRefName "Array")) (IRValueName "%v_t_2")) (QIdent example.lat:3:47 (IRTargetRefName "Array") (IRTargetRefName "length"))),IOp example.lat:3:61 (IRValueName "%v_t_6") (VVal example.lat:3:61 (Int example.lat:1:38) (IRValueName "%v_t_3")) (OpAdd example.lat:3:61) (VVal example.lat:3:61 (Int example.lat:1:38) (IRValueName "%v_t_5")),INewArr example.lat:3:34 (IRValueName "%v_t_7") (Ref example.lat:3:38 (Arr example.lat:3:38 (Ref example.lat:3:38 (Cl example.lat:3:38 (IRTargetRefName "String"))))) (VVal example.lat:3:34 (Int example.lat:1:38) (IRValueName "%v_t_6")),ISet example.lat:3:24 (IRValueName "%v_t_8") (VVal example.lat:3:24 (Ref example.lat:3:34 (Arr example.lat:3:34 (Ref example.lat:3:38 (Arr example.lat:3:38 (Ref example.lat:3:38 (Cl example.lat:3:38 (IRTargetRefName "String"))))))) (IRValueName "%v_t_7")),ISet example.lat:4:17 (IRValueName "%v_t_10") (VInt example.lat:4:17 0),ISet example.lat:5:13 (IRValueName "%v_t_12") (VInt example.lat:5:27 0),ISet example.lat:5:13 (IRValueName "%v_t_13") (VVal example.lat:5:27 (Ref example.lat:1:19 (Arr example.lat:1:19 (Ref example.lat:1:19 (Arr example.lat:1:19 (Ref example.lat:1:19 (Cl example.lat:1:19 (IRTargetRefName "String"))))))) (IRValueName "%v_t_2")),IJmp example.lat:5:13 (IRLabelName "_WCOND14"),ILabel example.lat:5:13 (IRLabelName "_WCOND14"),ILoad example.lat:5:13 (IRValueName "%v_t_24") (PFld example.lat:5:13 (Ref example.lat:5:13 (Int inside standard library)) (VVal example.lat:5:13 (Cl example.lat:5:13 (IRTargetRefName "Array")) (IRValueName "%v_t_13")) (QIdent example.lat:5:13 (IRTargetRefName "Array") (IRTargetRefName "length"))),IOp example.lat:5:13 (IRValueName "%v___temp_0") (VVal example.lat:5:13 (Int example.lat:5:13) (IRValueName "%v_t_12")) (OpLTH example.lat:5:13) (VVal example.lat:5:13 (Int inside standard library) (IRValueName "%v_t_24")),ICondJmp example.lat:5:13 (VVal example.lat:5:13 (Bool example.lat:5:13) (IRValueName "%v___temp_0")) (IRLabelName "_WBEG15") (IRLabelName "_WEND16"),ILabel example.lat:5:13 (IRLabelName "_WBEG15"),ILoad example.lat:5:13 (IRValueName "%v_t_17") (PElem example.lat:5:13 (Ref example.lat:5:13 (Ref example.lat:1:19 (Arr example.lat:1:19 (Ref example.lat:1:19 (Cl example.lat:1:19 (IRTargetRefName "String")))))) (VVal example.lat:5:13 (Ref example.lat:5:13 (Arr example.lat:5:13 (Ref example.lat:1:19 (Arr example.lat:1:19 (Ref example.lat:1:19 (Cl example.lat:1:19 (IRTargetRefName "String"))))))) (IRValueName "%v_t_13")) (VVal example.lat:5:13 (Int example.lat:5:13) (IRValueName "%v_t_12"))),ISet example.lat:5:13 (IRValueName "%v_t_18") (VVal example.lat:5:27 (Ref example.lat:1:19 (Arr example.lat:1:19 (Ref example.lat:1:19 (Cl example.lat:1:19 (IRTargetRefName "String"))))) (IRValueName "%v_t_17")),ISet example.lat:6:17 (IRValueName "%v___temp_1") (VVal example.lat:6:17 (Ref example.lat:5:18 (Arr example.lat:5:18 (Ref example.lat:5:18 (Cl example.lat:5:18 (IRTargetRefName "String"))))) (IRValueName "%v_t_18")),IStore example.lat:6:17 (VVal example.lat:6:17 (Ref example.lat:5:18 (Arr example.lat:5:18 (Ref example.lat:5:18 (Cl example.lat:5:18 (IRTargetRefName "String"))))) (IRValueName "%v___temp_1")) (PElem example.lat:6:17 (Ref example.lat:6:17 (Ref example.lat:5:18 (Arr example.lat:5:18 (Ref example.lat:5:18 (Cl example.lat:5:18 (IRTargetRefName "String")))))) (VVal example.lat:6:17 (Ref example.lat:6:17 (Arr example.lat:6:17 (Ref example.lat:5:18 (Arr example.lat:5:18 (Ref example.lat:5:18 (Cl example.lat:5:18 (IRTargetRefName "String"))))))) (IRValueName "%v_t_8")) (VVal example.lat:6:17 (Int example.lat:4:13) (IRValueName "%v_t_10"))),IOp example.lat:7:17 (IRValueName "%v_t_20") (VVal example.lat:7:17 (Int example.lat:7:17) (IRValueName "%v_t_10")) (OpAdd example.lat:7:17) (VInt example.lat:7:17 1),ISet example.lat:7:17 (IRValueName "%v_t_10") (VVal example.lat:7:17 (Int example.lat:7:17) (IRValueName "%v_t_20")),IVCall example.lat:8:17 (Call example.lat:8:17 (Bool inside standard library) (QIdent example.lat:8:17 (IRTargetRefName "~cl_TopLevel") (IRTargetRefName "print")) [VVal example.lat:8:17 (Ref inside standard library (Cl inside standard library (IRTargetRefName "Object"))) (IRValueName "%v_t_18")] []),IOp example.lat:5:13 (IRValueName "%v_t_23") (VVal example.lat:5:13 (Int example.lat:5:13) (IRValueName "%v_t_12")) (OpAdd example.lat:5:13) (VInt example.lat:5:13 1),ISet example.lat:5:13 (IRValueName "%v_t_12") (VVal example.lat:5:13 (Int example.lat:5:13) (IRValueName "%v_t_23")),IJmp example.lat:5:13 (IRLabelName "_WCOND14"),ILabel example.lat:5:13 (IRLabelName "_WEND16"),ISet example.lat:10:13 (IRValueName "%v___temp_2") (VVal example.lat:10:13 (Ref example.lat:3:13 (Arr example.lat:3:13 (Ref example.lat:3:13 (Arr example.lat:3:13 (Ref example.lat:3:13 (Cl example.lat:3:13 (IRTargetRefName "String"))))))) (IRValueName "%v_t_8")),ISet example.lat:10:13 (IRValueName "%v_return") (VVal example.lat:10:13 (Ref example.lat:3:13 (Arr example.lat:3:13 (Ref example.lat:3:13 (Arr example.lat:3:13 (Ref example.lat:3:13 (Cl example.lat:3:13 (IRTargetRefName "String"))))))) (IRValueName "%v___temp_2")),IJmp example.lat:10:13 (IRLabelName ".L_exit"),ILabel example.lat:1:1 (IRLabelName ".L_exit"),IRet example.lat:1:1 (VVal example.lat:1:1 (Ref example.lat:1:1 (Arr example.lat:1:1 (Ref example.lat:1:1 (Arr example.lat:1:1 (Ref example.lat:1:1 (Cl example.lat:1:1 (IRTargetRefName "String"))))))) (IRValueName "%v_return"))]),(SSA [".L_entry",".L_exit"]
".L_entry" -> fromList [IRLabelName ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [IRLabelName ".L_entry"]
,Mthd example.lat:13:9 (Int example.lat:13:9) (QIdent example.lat:13:13 (IRTargetRefName "~cl_TopLevel") (IRTargetRefName "main")) [] [ILabel example.lat:13:9 (IRLabelName ".L_entry"),INewArr example.lat:14:28 (IRValueName "%v_t_26") (Ref example.lat:14:32 (Cl example.lat:14:32 (IRTargetRefName "String"))) (VInt example.lat:14:28 5),ISet example.lat:14:22 (IRValueName "%v_t_27") (VVal example.lat:14:22 (Ref example.lat:14:28 (Arr example.lat:14:28 (Ref example.lat:14:32 (Cl example.lat:14:32 (IRTargetRefName "String"))))) (IRValueName "%v_t_26")),INewStr example.lat:15:22 (IRValueName "%v_t_29") "Hello",IAddRef example.lat:15:22 (Ref example.lat:15:22 (Cl example.lat:15:22 (IRTargetRefName "String"))) (VVal example.lat:15:22 (Ref example.lat:15:22 (Cl example.lat:15:22 (IRTargetRefName "String"))) (IRValueName "%v_t_29")) 1,ILoad example.lat:15:13 (IRValueName "%v_c0") (PElem example.lat:15:13 (Ref example.lat:15:13 (Ref example.lat:15:22 (Cl example.lat:15:22 (IRTargetRefName "String")))) (VVal example.lat:15:13 (Ref example.lat:15:13 (Arr example.lat:15:13 (Ref example.lat:15:22 (Cl example.lat:15:22 (IRTargetRefName "String"))))) (IRValueName "%v_t_27")) (VInt example.lat:15:13 0)),IAddRef example.lat:15:13 (Ref example.lat:15:22 (Cl example.lat:15:22 (IRTargetRefName "String"))) (VVal example.lat:15:13 (Ref example.lat:15:22 (Cl example.lat:15:22 (IRTargetRefName "String"))) (IRValueName "%v_c0")) (-1),ISet example.lat:15:13 (IRValueName "%v_c0") (VVal example.lat:15:13 (Ref example.lat:15:22 (Cl example.lat:15:22 (IRTargetRefName "String"))) (IRValueName "%v_t_29")),IAddRef example.lat:15:13 (Ref example.lat:15:22 (Cl example.lat:15:22 (IRTargetRefName "String"))) (VVal example.lat:15:13 (Ref example.lat:15:22 (Cl example.lat:15:22 (IRTargetRefName "String"))) (IRValueName "%v_c0")) 1,ISet example.lat:15:13 (IRValueName "%v___temp_3") (VVal example.lat:15:13 (Ref example.lat:15:22 (Cl example.lat:15:22 (IRTargetRefName "String"))) (IRValueName "%v_c0")),IStore example.lat:15:13 (VVal example.lat:15:13 (Ref example.lat:15:22 (Cl example.lat:15:22 (IRTargetRefName "String"))) (IRValueName "%v___temp_3")) (PElem example.lat:15:13 (Ref example.lat:15:13 (Ref example.lat:15:22 (Cl example.lat:15:22 (IRTargetRefName "String")))) (VVal example.lat:15:13 (Ref example.lat:15:13 (Arr example.lat:15:13 (Ref example.lat:15:22 (Cl example.lat:15:22 (IRTargetRefName "String"))))) (IRValueName "%v_t_27")) (VInt example.lat:15:13 0)),IAddRef example.lat:15:13 (Ref example.lat:15:22 (Cl example.lat:15:22 (IRTargetRefName "String"))) (VVal example.lat:15:13 (Ref example.lat:15:22 (Cl example.lat:15:22 (IRTargetRefName "String"))) (IRValueName "%v_t_29")) (-1),ILoad example.lat:16:25 (IRValueName "%v_t_32") (PElem example.lat:16:25 (Ref example.lat:16:25 (Ref example.lat:14:13 (Cl example.lat:14:13 (IRTargetRefName "String")))) (VVal example.lat:16:25 (Ref example.lat:16:25 (Arr example.lat:16:25 (Ref example.lat:14:13 (Cl example.lat:14:13 (IRTargetRefName "String"))))) (IRValueName "%v_t_27")) (VInt example.lat:16:25 0)),IAddRef example.lat:16:25 (Ref example.lat:14:13 (Cl example.lat:14:13 (IRTargetRefName "String"))) (VVal example.lat:16:25 (Ref example.lat:14:13 (Cl example.lat:14:13 (IRTargetRefName "String"))) (IRValueName "%v_t_32")) 1,IVCall example.lat:16:13 (Call example.lat:16:13 (Bool inside standard library) (QIdent example.lat:16:13 (IRTargetRefName "~cl_TopLevel") (IRTargetRefName "printString")) [VVal example.lat:16:13 (Ref inside standard library (Cl inside standard library (IRTargetRefName "String"))) (IRValueName "%v_t_32")] []),IAddRef example.lat:16:13 (Ref example.lat:14:13 (Cl example.lat:14:13 (IRTargetRefName "String"))) (VVal example.lat:16:13 (Ref example.lat:14:13 (Cl example.lat:14:13 (IRTargetRefName "String"))) (IRValueName "%v_t_32")) (-1),INewArr example.lat:17:26 (IRValueName "%v_t_35") (Int example.lat:17:30) (VInt example.lat:17:26 10),ISet example.lat:17:19 (IRValueName "%v_t_36") (VVal example.lat:17:19 (Ref example.lat:17:26 (Arr example.lat:17:26 (Int example.lat:17:30))) (IRValueName "%v_t_35")),ISet example.lat:18:13 (IRValueName "%v___temp_4") (VInt example.lat:18:13 42),IStore example.lat:18:13 (VVal example.lat:18:13 (Int example.lat:18:23) (IRValueName "%v___temp_4")) (PElem example.lat:18:13 (Ref example.lat:18:13 (Int example.lat:18:23)) (VVal example.lat:18:13 (Ref example.lat:18:13 (Arr example.lat:18:13 (Int example.lat:18:23))) (IRValueName "%v_t_36")) (VInt example.lat:18:13 0)),ISet example.lat:19:13 (IRValueName "%v___temp_5") (VInt example.lat:19:13 69),IStore example.lat:19:13 (VVal example.lat:19:13 (Int example.lat:19:23) (IRValueName "%v___temp_5")) (PElem example.lat:19:13 (Ref example.lat:19:13 (Int example.lat:19:23)) (VVal example.lat:19:13 (Ref example.lat:19:13 (Arr example.lat:19:13 (Int example.lat:19:23))) (IRValueName "%v_t_36")) (VInt example.lat:19:13 3)),IVCall example.lat:20:13 (Call example.lat:20:13 (Bool inside standard library) (QIdent example.lat:20:13 (IRTargetRefName "~cl_TopLevel") (IRTargetRefName "print")) [VVal example.lat:20:13 (Ref inside standard library (Cl inside standard library (IRTargetRefName "Object"))) (IRValueName "%v_t_36")] []),INewArr example.lat:21:31 (IRValueName "%v_t_43") (Ref example.lat:21:35 (Arr example.lat:21:35 (Ref example.lat:21:35 (Cl example.lat:21:35 (IRTargetRefName "String"))))) (VInt example.lat:21:31 2),ISet example.lat:21:24 (IRValueName "%v_t_44") (VVal example.lat:21:24 (Ref example.lat:21:31 (Arr example.lat:21:31 (Ref example.lat:21:35 (Arr example.lat:21:35 (Ref example.lat:21:35 (Cl example.lat:21:35 (IRTargetRefName "String"))))))) (IRValueName "%v_t_43")),INewArr example.lat:22:23 (IRValueName "%v_t_46") (Ref example.lat:22:27 (Cl example.lat:22:27 (IRTargetRefName "String"))) (VInt example.lat:22:23 3),ISet example.lat:22:13 (IRValueName "%v___temp_6") (VVal example.lat:22:13 (Ref example.lat:22:23 (Arr example.lat:22:23 (Ref example.lat:22:27 (Cl example.lat:22:27 (IRTargetRefName "String"))))) (IRValueName "%v_t_46")),IStore example.lat:22:13 (VVal example.lat:22:13 (Ref example.lat:22:23 (Arr example.lat:22:23 (Ref example.lat:22:27 (Cl example.lat:22:27 (IRTargetRefName "String"))))) (IRValueName "%v___temp_6")) (PElem example.lat:22:13 (Ref example.lat:22:13 (Ref example.lat:22:23 (Arr example.lat:22:23 (Ref example.lat:22:27 (Cl example.lat:22:27 (IRTargetRefName "String")))))) (VVal example.lat:22:13 (Ref example.lat:22:13 (Arr example.lat:22:13 (Ref example.lat:22:23 (Arr example.lat:22:23 (Ref example.lat:22:27 (Cl example.lat:22:27 (IRTargetRefName "String"))))))) (IRValueName "%v_t_44")) (VInt example.lat:22:13 0)),INewStr example.lat:23:26 (IRValueName "%v_t_49") "Hello!",IAddRef example.lat:23:26 (Ref example.lat:23:26 (Cl example.lat:23:26 (IRTargetRefName "String"))) (VVal example.lat:23:26 (Ref example.lat:23:26 (Cl example.lat:23:26 (IRTargetRefName "String"))) (IRValueName "%v_t_49")) 1,ILoad example.lat:23:13 (IRValueName "%v_t_51") (PElem example.lat:23:13 (Ref example.lat:23:13 (Ref example.lat:21:13 (Arr example.lat:21:13 (Ref example.lat:21:13 (Cl example.lat:21:13 (IRTargetRefName "String")))))) (VVal example.lat:23:13 (Ref example.lat:23:13 (Arr example.lat:23:13 (Ref example.lat:21:13 (Arr example.lat:21:13 (Ref example.lat:21:13 (Cl example.lat:21:13 (IRTargetRefName "String"))))))) (IRValueName "%v_t_44")) (VInt example.lat:23:13 0)),ILoad example.lat:23:13 (IRValueName "%v_c1") (PElem example.lat:23:13 (Ref example.lat:23:13 (Ref example.lat:23:26 (Cl example.lat:23:26 (IRTargetRefName "String")))) (VVal example.lat:23:13 (Ref example.lat:23:13 (Arr example.lat:23:13 (Ref example.lat:23:26 (Cl example.lat:23:26 (IRTargetRefName "String"))))) (IRValueName "%v_t_51")) (VInt example.lat:23:13 0)),IAddRef example.lat:23:13 (Ref example.lat:23:26 (Cl example.lat:23:26 (IRTargetRefName "String"))) (VVal example.lat:23:13 (Ref example.lat:23:26 (Cl example.lat:23:26 (IRTargetRefName "String"))) (IRValueName "%v_c1")) (-1),ISet example.lat:23:13 (IRValueName "%v_c1") (VVal example.lat:23:13 (Ref example.lat:23:26 (Cl example.lat:23:26 (IRTargetRefName "String"))) (IRValueName "%v_t_49")),IAddRef example.lat:23:13 (Ref example.lat:23:26 (Cl example.lat:23:26 (IRTargetRefName "String"))) (VVal example.lat:23:13 (Ref example.lat:23:26 (Cl example.lat:23:26 (IRTargetRefName "String"))) (IRValueName "%v_c1")) 1,ISet example.lat:23:13 (IRValueName "%v___temp_7") (VVal example.lat:23:13 (Ref example.lat:23:26 (Cl example.lat:23:26 (IRTargetRefName "String"))) (IRValueName "%v_c1")),IStore example.lat:23:13 (VVal example.lat:23:13 (Ref example.lat:23:26 (Cl example.lat:23:26 (IRTargetRefName "String"))) (IRValueName "%v___temp_7")) (PElem example.lat:23:13 (Ref example.lat:23:13 (Ref example.lat:23:26 (Cl example.lat:23:26 (IRTargetRefName "String")))) (VVal example.lat:23:13 (Ref example.lat:23:13 (Arr example.lat:23:13 (Ref example.lat:23:26 (Cl example.lat:23:26 (IRTargetRefName "String"))))) (IRValueName "%v_t_51")) (VInt example.lat:23:13 0)),IAddRef example.lat:23:13 (Ref example.lat:23:26 (Cl example.lat:23:26 (IRTargetRefName "String"))) (VVal example.lat:23:13 (Ref example.lat:23:26 (Cl example.lat:23:26 (IRTargetRefName "String"))) (IRValueName "%v_t_49")) (-1),INewStr example.lat:24:26 (IRValueName "%v_t_54") ":D",IAddRef example.lat:24:26 (Ref example.lat:24:26 (Cl example.lat:24:26 (IRTargetRefName "String"))) (VVal example.lat:24:26 (Ref example.lat:24:26 (Cl example.lat:24:26 (IRTargetRefName "String"))) (IRValueName "%v_t_54")) 1,ILoad example.lat:24:13 (IRValueName "%v_t_56") (PElem example.lat:24:13 (Ref example.lat:24:13 (Ref example.lat:21:13 (Arr example.lat:21:13 (Ref example.lat:21:13 (Cl example.lat:21:13 (IRTargetRefName "String")))))) (VVal example.lat:24:13 (Ref example.lat:24:13 (Arr example.lat:24:13 (Ref example.lat:21:13 (Arr example.lat:21:13 (Ref example.lat:21:13 (Cl example.lat:21:13 (IRTargetRefName "String"))))))) (IRValueName "%v_t_44")) (VInt example.lat:24:13 0)),ILoad example.lat:24:13 (IRValueName "%v_c2") (PElem example.lat:24:13 (Ref example.lat:24:13 (Ref example.lat:24:26 (Cl example.lat:24:26 (IRTargetRefName "String")))) (VVal example.lat:24:13 (Ref example.lat:24:13 (Arr example.lat:24:13 (Ref example.lat:24:26 (Cl example.lat:24:26 (IRTargetRefName "String"))))) (IRValueName "%v_t_56")) (VInt example.lat:24:13 2)),IAddRef example.lat:24:13 (Ref example.lat:24:26 (Cl example.lat:24:26 (IRTargetRefName "String"))) (VVal example.lat:24:13 (Ref example.lat:24:26 (Cl example.lat:24:26 (IRTargetRefName "String"))) (IRValueName "%v_c2")) (-1),ISet example.lat:24:13 (IRValueName "%v_c2") (VVal example.lat:24:13 (Ref example.lat:24:26 (Cl example.lat:24:26 (IRTargetRefName "String"))) (IRValueName "%v_t_54")),IAddRef example.lat:24:13 (Ref example.lat:24:26 (Cl example.lat:24:26 (IRTargetRefName "String"))) (VVal example.lat:24:13 (Ref example.lat:24:26 (Cl example.lat:24:26 (IRTargetRefName "String"))) (IRValueName "%v_c2")) 1,ISet example.lat:24:13 (IRValueName "%v___temp_8") (VVal example.lat:24:13 (Ref example.lat:24:26 (Cl example.lat:24:26 (IRTargetRefName "String"))) (IRValueName "%v_c2")),IStore example.lat:24:13 (VVal example.lat:24:13 (Ref example.lat:24:26 (Cl example.lat:24:26 (IRTargetRefName "String"))) (IRValueName "%v___temp_8")) (PElem example.lat:24:13 (Ref example.lat:24:13 (Ref example.lat:24:26 (Cl example.lat:24:26 (IRTargetRefName "String")))) (VVal example.lat:24:13 (Ref example.lat:24:13 (Arr example.lat:24:13 (Ref example.lat:24:26 (Cl example.lat:24:26 (IRTargetRefName "String"))))) (IRValueName "%v_t_56")) (VInt example.lat:24:13 2)),IAddRef example.lat:24:13 (Ref example.lat:24:26 (Cl example.lat:24:26 (IRTargetRefName "String"))) (VVal example.lat:24:13 (Ref example.lat:24:26 (Cl example.lat:24:26 (IRTargetRefName "String"))) (IRValueName "%v_t_54")) (-1),INewStr example.lat:25:25 (IRValueName "%v_t_59") "ELO?",IAddRef example.lat:25:25 (Ref example.lat:25:25 (Cl example.lat:25:25 (IRTargetRefName "String"))) (VVal example.lat:25:25 (Ref example.lat:25:25 (Cl example.lat:25:25 (IRTargetRefName "String"))) (IRValueName "%v_t_59")) 1,IVCall example.lat:25:13 (Call example.lat:25:13 (Bool inside standard library) (QIdent example.lat:25:13 (IRTargetRefName "~cl_TopLevel") (IRTargetRefName "printString")) [VVal example.lat:25:13 (Ref inside standard library (Cl inside standard library (IRTargetRefName "String"))) (IRValueName "%v_t_59")] []),IAddRef example.lat:25:13 (Ref example.lat:25:25 (Cl example.lat:25:25 (IRTargetRefName "String"))) (VVal example.lat:25:13 (Ref example.lat:25:25 (Cl example.lat:25:25 (IRTargetRefName "String"))) (IRValueName "%v_t_59")) (-1),ISet example.lat:29:13 (IRValueName "%v___temp_9") (VInt example.lat:29:13 0),ISet example.lat:29:13 (IRValueName "%v_return") (VVal example.lat:29:13 (Int example.lat:29:20) (IRValueName "%v___temp_9")),IJmp example.lat:29:13 (IRLabelName ".L_exit"),ILabel example.lat:13:9 (IRLabelName ".L_exit"),IRet example.lat:13:9 (VVal example.lat:13:9 (Int example.lat:13:9) (IRValueName "%v_return"))])]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> END SSA CODE DUMP 


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> GENERATED INTERMEDIATE STEP Optimising ...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] CFG for ~cl_TopLevel.resize:
[".L_entry",".L_exit","_WBEG15","_WCOND14","_WEND16"]
".L_entry" -> fromList [IRLabelName "_WCOND14"] <- fromList []
".L_exit" -> fromList [] <- fromList [IRLabelName "_WEND16"]
"_WBEG15" -> fromList [IRLabelName "_WCOND14"] <- fromList [IRLabelName "_WCOND14"]
"_WCOND14" -> fromList [IRLabelName "_WBEG15",IRLabelName "_WEND16"] <- fromList [IRLabelName ".L_entry",IRLabelName "_WBEG15"]
"_WEND16" -> fromList [IRLabelName ".L_exit"] <- fromList [IRLabelName "_WCOND14"]
Code: 
.method String & [] & [] & ~cl_TopLevel.resize (String & [] & [] & %a_t_2, int %a_t_3): [
.L_entry:
  %v_t_2 := load String & [] & [] & & param 0 %a_t_2;
  %v_t_3 := load int & param 1 %a_t_3;
  call boolean ~cl_TopLevel.print (Object & %v_t_2);
  %v_t_5 := load int & fldptr Array %v_t_2 Array.length;
  %v_t_6 := int %v_t_3 + int %v_t_5;
  %v_t_7 := newarr String & [] & [ int %v_t_6 ];
  %v_t_8 := String & [] & [] & %v_t_7;
  %v_t_10 := 0;
  %v_t_12 := 0;
  %v_t_13 := String & [] & [] & %v_t_2;
  jump _WCOND14;
  _WCOND14:
  %v_t_24 := load int & fldptr Array %v_t_13 Array.length;
  %v___temp_0 := int %v_t_12 < int %v_t_24;
  jump if boolean %v___temp_0 then _WBEG15 else _WEND16;
  _WBEG15:
  %v_t_17 := load String & [] & & elemptr String & [] & [] & %v_t_13 [ int %v_t_12 ];
  %v_t_18 := String & [] & %v_t_17;
  %v___temp_1 := String & [] & %v_t_18;
  store String & [] & %v___temp_1 into String & [] & & elemptr String & [] & [] & %v_t_8 [ int %v_t_10 ];
  %v_t_20 := int %v_t_10 + 1;
  %v_t_10 := int %v_t_20;
  call boolean ~cl_TopLevel.print (Object & %v_t_18);
  %v_t_23 := int %v_t_12 + 1;
  %v_t_12 := int %v_t_23;
  jump _WCOND14;
  _WEND16:
  %v___temp_2 := String & [] & [] & %v_t_8;
  %v_return := String & [] & [] & %v___temp_2;
  jump .L_exit;
.L_exit:
  return String & [] & [] & %v_return;
]

CFG for ~cl_TopLevel.main:
[".L_entry",".L_exit"]
".L_entry" -> fromList [IRLabelName ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [IRLabelName ".L_entry"]
Code: 
.method int ~cl_TopLevel.main (): [
.L_entry:
  %v_t_26 := newarr String & [ 5 ];
  %v_t_27 := String & [] & %v_t_26;
  %v_t_29 := newstr "Hello";
  addref String & String & %v_t_29 1;
  %v_c0 := load String & & elemptr String & [] & %v_t_27 [ 0 ];
  addref String & String & %v_c0 -1;
  %v_c0 := String & %v_t_29;
  addref String & String & %v_c0 1;
  %v___temp_3 := String & %v_c0;
  store String & %v___temp_3 into String & & elemptr String & [] & %v_t_27 [ 0 ];
  addref String & String & %v_t_29 -1;
  %v_t_32 := load String & & elemptr String & [] & %v_t_27 [ 0 ];
  addref String & String & %v_t_32 1;
  call boolean ~cl_TopLevel.printString (String & %v_t_32);
  addref String & String & %v_t_32 -1;
  %v_t_35 := newarr int [ 10 ];
  %v_t_36 := int [] & %v_t_35;
  %v___temp_4 := 42;
  store int %v___temp_4 into int & elemptr int [] & %v_t_36 [ 0 ];
  %v___temp_5 := 69;
  store int %v___temp_5 into int & elemptr int [] & %v_t_36 [ 3 ];
  call boolean ~cl_TopLevel.print (Object & %v_t_36);
  %v_t_43 := newarr String & [] & [ 2 ];
  %v_t_44 := String & [] & [] & %v_t_43;
  %v_t_46 := newarr String & [ 3 ];
  %v___temp_6 := String & [] & %v_t_46;
  store String & [] & %v___temp_6 into String & [] & & elemptr String & [] & [] & %v_t_44 [ 0 ];
  %v_t_49 := newstr "Hello!";
  addref String & String & %v_t_49 1;
  %v_t_51 := load String & [] & & elemptr String & [] & [] & %v_t_44 [ 0 ];
  %v_c1 := load String & & elemptr String & [] & %v_t_51 [ 0 ];
  addref String & String & %v_c1 -1;
  %v_c1 := String & %v_t_49;
  addref String & String & %v_c1 1;
  %v___temp_7 := String & %v_c1;
  store String & %v___temp_7 into String & & elemptr String & [] & %v_t_51 [ 0 ];
  addref String & String & %v_t_49 -1;
  %v_t_54 := newstr ":D";
  addref String & String & %v_t_54 1;
  %v_t_56 := load String & [] & & elemptr String & [] & [] & %v_t_44 [ 0 ];
  %v_c2 := load String & & elemptr String & [] & %v_t_56 [ 2 ];
  addref String & String & %v_c2 -1;
  %v_c2 := String & %v_t_54;
  addref String & String & %v_c2 1;
  %v___temp_8 := String & %v_c2;
  store String & %v___temp_8 into String & & elemptr String & [] & %v_t_56 [ 2 ];
  addref String & String & %v_t_54 -1;
  %v_t_59 := newstr "ELO?";
  addref String & String & %v_t_59 1;
  call boolean ~cl_TopLevel.printString (String & %v_t_59);
  addref String & String & %v_t_59 -1;
  %v___temp_9 := 0;
  %v_return := int %v___temp_9;
  jump .L_exit;
.L_exit:
  return int %v_return;
]


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> END STEP Optimising ...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> ENTIRE OPTIMIZED CODE DUMP 


[94m[Info]    [0m[Reporting.Logs.logInfo#75] [(SSA [".L_entry",".L_exit","_WBEG15","_WCOND14","_WEND16"]
".L_entry" -> fromList [IRLabelName "_WCOND14"] <- fromList []
".L_exit" -> fromList [] <- fromList [IRLabelName "_WEND16"]
"_WBEG15" -> fromList [IRLabelName "_WCOND14"] <- fromList [IRLabelName "_WCOND14"]
"_WCOND14" -> fromList [IRLabelName "_WBEG15",IRLabelName "_WEND16"] <- fromList [IRLabelName ".L_entry",IRLabelName "_WBEG15"]
"_WEND16" -> fromList [IRLabelName ".L_exit"] <- fromList [IRLabelName "_WCOND14"]
,Mthd example.lat:1:1 (Ref example.lat:1:1 (Arr example.lat:1:1 (Ref example.lat:1:1 (Arr example.lat:1:1 (Ref example.lat:1:1 (Cl example.lat:1:1 (IRTargetRefName "String"))))))) (QIdent example.lat:1:12 (IRTargetRefName "~cl_TopLevel") (IRTargetRefName "resize")) [Param example.lat:1:1 (Ref example.lat:1:19 (Arr example.lat:1:19 (Ref example.lat:1:19 (Arr example.lat:1:19 (Ref example.lat:1:19 (Cl example.lat:1:19 (IRTargetRefName "String"))))))) (IRValueName "%a_t_2"),Param example.lat:1:1 (Int example.lat:1:38) (IRValueName "%a_t_3")] [ILabel example.lat:1:1 (IRLabelName ".L_entry"),ILoad example.lat:1:1 (IRValueName "%v_t_2") (PParam example.lat:1:1 (Ref example.lat:1:1 (Ref example.lat:1:19 (Arr example.lat:1:19 (Ref example.lat:1:19 (Arr example.lat:1:19 (Ref example.lat:1:19 (Cl example.lat:1:19 (IRTargetRefName "String")))))))) 0 (IRValueName "%a_t_2")),ILoad example.lat:1:1 (IRValueName "%v_t_3") (PParam example.lat:1:1 (Ref example.lat:1:1 (Int example.lat:1:38)) 1 (IRValueName "%a_t_3")),IVCall example.lat:2:5 (Call example.lat:2:5 (Bool inside standard library) (QIdent example.lat:2:5 (IRTargetRefName "~cl_TopLevel") (IRTargetRefName "print")) [VVal example.lat:2:5 (Ref inside standard library (Cl inside standard library (IRTargetRefName "Object"))) (IRValueName "%v_t_2")] []),ILoad example.lat:3:47 (IRValueName "%v_t_5") (PFld example.lat:3:47 (Ref example.lat:3:47 (Int inside standard library)) (VVal example.lat:3:47 (Cl example.lat:3:47 (IRTargetRefName "Array")) (IRValueName "%v_t_2")) (QIdent example.lat:3:47 (IRTargetRefName "Array") (IRTargetRefName "length"))),IOp example.lat:3:61 (IRValueName "%v_t_6") (VVal example.lat:3:61 (Int example.lat:1:38) (IRValueName "%v_t_3")) (OpAdd example.lat:3:61) (VVal example.lat:3:61 (Int example.lat:1:38) (IRValueName "%v_t_5")),INewArr example.lat:3:34 (IRValueName "%v_t_7") (Ref example.lat:3:38 (Arr example.lat:3:38 (Ref example.lat:3:38 (Cl example.lat:3:38 (IRTargetRefName "String"))))) (VVal example.lat:3:34 (Int example.lat:1:38) (IRValueName "%v_t_6")),ISet example.lat:3:24 (IRValueName "%v_t_8") (VVal example.lat:3:24 (Ref example.lat:3:34 (Arr example.lat:3:34 (Ref example.lat:3:38 (Arr example.lat:3:38 (Ref example.lat:3:38 (Cl example.lat:3:38 (IRTargetRefName "String"))))))) (IRValueName "%v_t_7")),ISet example.lat:4:17 (IRValueName "%v_t_10") (VInt example.lat:4:17 0),ISet example.lat:5:13 (IRValueName "%v_t_12") (VInt example.lat:5:27 0),ISet example.lat:5:13 (IRValueName "%v_t_13") (VVal example.lat:5:27 (Ref example.lat:1:19 (Arr example.lat:1:19 (Ref example.lat:1:19 (Arr example.lat:1:19 (Ref example.lat:1:19 (Cl example.lat:1:19 (IRTargetRefName "String"))))))) (IRValueName "%v_t_2")),IJmp example.lat:5:13 (IRLabelName "_WCOND14"),ILabel example.lat:5:13 (IRLabelName "_WCOND14"),ILoad example.lat:5:13 (IRValueName "%v_t_24") (PFld example.lat:5:13 (Ref example.lat:5:13 (Int inside standard library)) (VVal example.lat:5:13 (Cl example.lat:5:13 (IRTargetRefName "Array")) (IRValueName "%v_t_13")) (QIdent example.lat:5:13 (IRTargetRefName "Array") (IRTargetRefName "length"))),IOp example.lat:5:13 (IRValueName "%v___temp_0") (VVal example.lat:5:13 (Int example.lat:5:13) (IRValueName "%v_t_12")) (OpLTH example.lat:5:13) (VVal example.lat:5:13 (Int inside standard library) (IRValueName "%v_t_24")),ICondJmp example.lat:5:13 (VVal example.lat:5:13 (Bool example.lat:5:13) (IRValueName "%v___temp_0")) (IRLabelName "_WBEG15") (IRLabelName "_WEND16"),ILabel example.lat:5:13 (IRLabelName "_WBEG15"),ILoad example.lat:5:13 (IRValueName "%v_t_17") (PElem example.lat:5:13 (Ref example.lat:5:13 (Ref example.lat:1:19 (Arr example.lat:1:19 (Ref example.lat:1:19 (Cl example.lat:1:19 (IRTargetRefName "String")))))) (VVal example.lat:5:13 (Ref example.lat:5:13 (Arr example.lat:5:13 (Ref example.lat:1:19 (Arr example.lat:1:19 (Ref example.lat:1:19 (Cl example.lat:1:19 (IRTargetRefName "String"))))))) (IRValueName "%v_t_13")) (VVal example.lat:5:13 (Int example.lat:5:13) (IRValueName "%v_t_12"))),ISet example.lat:5:13 (IRValueName "%v_t_18") (VVal example.lat:5:27 (Ref example.lat:1:19 (Arr example.lat:1:19 (Ref example.lat:1:19 (Cl example.lat:1:19 (IRTargetRefName "String"))))) (IRValueName "%v_t_17")),ISet example.lat:6:17 (IRValueName "%v___temp_1") (VVal example.lat:6:17 (Ref example.lat:5:18 (Arr example.lat:5:18 (Ref example.lat:5:18 (Cl example.lat:5:18 (IRTargetRefName "String"))))) (IRValueName "%v_t_18")),IStore example.lat:6:17 (VVal example.lat:6:17 (Ref example.lat:5:18 (Arr example.lat:5:18 (Ref example.lat:5:18 (Cl example.lat:5:18 (IRTargetRefName "String"))))) (IRValueName "%v___temp_1")) (PElem example.lat:6:17 (Ref example.lat:6:17 (Ref example.lat:5:18 (Arr example.lat:5:18 (Ref example.lat:5:18 (Cl example.lat:5:18 (IRTargetRefName "String")))))) (VVal example.lat:6:17 (Ref example.lat:6:17 (Arr example.lat:6:17 (Ref example.lat:5:18 (Arr example.lat:5:18 (Ref example.lat:5:18 (Cl example.lat:5:18 (IRTargetRefName "String"))))))) (IRValueName "%v_t_8")) (VVal example.lat:6:17 (Int example.lat:4:13) (IRValueName "%v_t_10"))),IOp example.lat:7:17 (IRValueName "%v_t_20") (VVal example.lat:7:17 (Int example.lat:7:17) (IRValueName "%v_t_10")) (OpAdd example.lat:7:17) (VInt example.lat:7:17 1),ISet example.lat:7:17 (IRValueName "%v_t_10") (VVal example.lat:7:17 (Int example.lat:7:17) (IRValueName "%v_t_20")),IVCall example.lat:8:17 (Call example.lat:8:17 (Bool inside standard library) (QIdent example.lat:8:17 (IRTargetRefName "~cl_TopLevel") (IRTargetRefName "print")) [VVal example.lat:8:17 (Ref inside standard library (Cl inside standard library (IRTargetRefName "Object"))) (IRValueName "%v_t_18")] []),IOp example.lat:5:13 (IRValueName "%v_t_23") (VVal example.lat:5:13 (Int example.lat:5:13) (IRValueName "%v_t_12")) (OpAdd example.lat:5:13) (VInt example.lat:5:13 1),ISet example.lat:5:13 (IRValueName "%v_t_12") (VVal example.lat:5:13 (Int example.lat:5:13) (IRValueName "%v_t_23")),IJmp example.lat:5:13 (IRLabelName "_WCOND14"),ILabel example.lat:5:13 (IRLabelName "_WEND16"),ISet example.lat:10:13 (IRValueName "%v___temp_2") (VVal example.lat:10:13 (Ref example.lat:3:13 (Arr example.lat:3:13 (Ref example.lat:3:13 (Arr example.lat:3:13 (Ref example.lat:3:13 (Cl example.lat:3:13 (IRTargetRefName "String"))))))) (IRValueName "%v_t_8")),ISet example.lat:10:13 (IRValueName "%v_return") (VVal example.lat:10:13 (Ref example.lat:3:13 (Arr example.lat:3:13 (Ref example.lat:3:13 (Arr example.lat:3:13 (Ref example.lat:3:13 (Cl example.lat:3:13 (IRTargetRefName "String"))))))) (IRValueName "%v___temp_2")),IJmp example.lat:10:13 (IRLabelName ".L_exit"),ILabel example.lat:1:1 (IRLabelName ".L_exit"),IRet example.lat:1:1 (VVal example.lat:1:1 (Ref example.lat:1:1 (Arr example.lat:1:1 (Ref example.lat:1:1 (Arr example.lat:1:1 (Ref example.lat:1:1 (Cl example.lat:1:1 (IRTargetRefName "String"))))))) (IRValueName "%v_return"))]),(SSA [".L_entry",".L_exit"]
".L_entry" -> fromList [IRLabelName ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [IRLabelName ".L_entry"]
,Mthd example.lat:13:9 (Int example.lat:13:9) (QIdent example.lat:13:13 (IRTargetRefName "~cl_TopLevel") (IRTargetRefName "main")) [] [ILabel example.lat:13:9 (IRLabelName ".L_entry"),INewArr example.lat:14:28 (IRValueName "%v_t_26") (Ref example.lat:14:32 (Cl example.lat:14:32 (IRTargetRefName "String"))) (VInt example.lat:14:28 5),ISet example.lat:14:22 (IRValueName "%v_t_27") (VVal example.lat:14:22 (Ref example.lat:14:28 (Arr example.lat:14:28 (Ref example.lat:14:32 (Cl example.lat:14:32 (IRTargetRefName "String"))))) (IRValueName "%v_t_26")),INewStr example.lat:15:22 (IRValueName "%v_t_29") "Hello",IAddRef example.lat:15:22 (Ref example.lat:15:22 (Cl example.lat:15:22 (IRTargetRefName "String"))) (VVal example.lat:15:22 (Ref example.lat:15:22 (Cl example.lat:15:22 (IRTargetRefName "String"))) (IRValueName "%v_t_29")) 1,ILoad example.lat:15:13 (IRValueName "%v_c0") (PElem example.lat:15:13 (Ref example.lat:15:13 (Ref example.lat:15:22 (Cl example.lat:15:22 (IRTargetRefName "String")))) (VVal example.lat:15:13 (Ref example.lat:15:13 (Arr example.lat:15:13 (Ref example.lat:15:22 (Cl example.lat:15:22 (IRTargetRefName "String"))))) (IRValueName "%v_t_27")) (VInt example.lat:15:13 0)),IAddRef example.lat:15:13 (Ref example.lat:15:22 (Cl example.lat:15:22 (IRTargetRefName "String"))) (VVal example.lat:15:13 (Ref example.lat:15:22 (Cl example.lat:15:22 (IRTargetRefName "String"))) (IRValueName "%v_c0")) (-1),ISet example.lat:15:13 (IRValueName "%v_c0") (VVal example.lat:15:13 (Ref example.lat:15:22 (Cl example.lat:15:22 (IRTargetRefName "String"))) (IRValueName "%v_t_29")),IAddRef example.lat:15:13 (Ref example.lat:15:22 (Cl example.lat:15:22 (IRTargetRefName "String"))) (VVal example.lat:15:13 (Ref example.lat:15:22 (Cl example.lat:15:22 (IRTargetRefName "String"))) (IRValueName "%v_c0")) 1,ISet example.lat:15:13 (IRValueName "%v___temp_3") (VVal example.lat:15:13 (Ref example.lat:15:22 (Cl example.lat:15:22 (IRTargetRefName "String"))) (IRValueName "%v_c0")),IStore example.lat:15:13 (VVal example.lat:15:13 (Ref example.lat:15:22 (Cl example.lat:15:22 (IRTargetRefName "String"))) (IRValueName "%v___temp_3")) (PElem example.lat:15:13 (Ref example.lat:15:13 (Ref example.lat:15:22 (Cl example.lat:15:22 (IRTargetRefName "String")))) (VVal example.lat:15:13 (Ref example.lat:15:13 (Arr example.lat:15:13 (Ref example.lat:15:22 (Cl example.lat:15:22 (IRTargetRefName "String"))))) (IRValueName "%v_t_27")) (VInt example.lat:15:13 0)),IAddRef example.lat:15:13 (Ref example.lat:15:22 (Cl example.lat:15:22 (IRTargetRefName "String"))) (VVal example.lat:15:13 (Ref example.lat:15:22 (Cl example.lat:15:22 (IRTargetRefName "String"))) (IRValueName "%v_t_29")) (-1),ILoad example.lat:16:25 (IRValueName "%v_t_32") (PElem example.lat:16:25 (Ref example.lat:16:25 (Ref example.lat:14:13 (Cl example.lat:14:13 (IRTargetRefName "String")))) (VVal example.lat:16:25 (Ref example.lat:16:25 (Arr example.lat:16:25 (Ref example.lat:14:13 (Cl example.lat:14:13 (IRTargetRefName "String"))))) (IRValueName "%v_t_27")) (VInt example.lat:16:25 0)),IAddRef example.lat:16:25 (Ref example.lat:14:13 (Cl example.lat:14:13 (IRTargetRefName "String"))) (VVal example.lat:16:25 (Ref example.lat:14:13 (Cl example.lat:14:13 (IRTargetRefName "String"))) (IRValueName "%v_t_32")) 1,IVCall example.lat:16:13 (Call example.lat:16:13 (Bool inside standard library) (QIdent example.lat:16:13 (IRTargetRefName "~cl_TopLevel") (IRTargetRefName "printString")) [VVal example.lat:16:13 (Ref inside standard library (Cl inside standard library (IRTargetRefName "String"))) (IRValueName "%v_t_32")] []),IAddRef example.lat:16:13 (Ref example.lat:14:13 (Cl example.lat:14:13 (IRTargetRefName "String"))) (VVal example.lat:16:13 (Ref example.lat:14:13 (Cl example.lat:14:13 (IRTargetRefName "String"))) (IRValueName "%v_t_32")) (-1),INewArr example.lat:17:26 (IRValueName "%v_t_35") (Int example.lat:17:30) (VInt example.lat:17:26 10),ISet example.lat:17:19 (IRValueName "%v_t_36") (VVal example.lat:17:19 (Ref example.lat:17:26 (Arr example.lat:17:26 (Int example.lat:17:30))) (IRValueName "%v_t_35")),ISet example.lat:18:13 (IRValueName "%v___temp_4") (VInt example.lat:18:13 42),IStore example.lat:18:13 (VVal example.lat:18:13 (Int example.lat:18:23) (IRValueName "%v___temp_4")) (PElem example.lat:18:13 (Ref example.lat:18:13 (Int example.lat:18:23)) (VVal example.lat:18:13 (Ref example.lat:18:13 (Arr example.lat:18:13 (Int example.lat:18:23))) (IRValueName "%v_t_36")) (VInt example.lat:18:13 0)),ISet example.lat:19:13 (IRValueName "%v___temp_5") (VInt example.lat:19:13 69),IStore example.lat:19:13 (VVal example.lat:19:13 (Int example.lat:19:23) (IRValueName "%v___temp_5")) (PElem example.lat:19:13 (Ref example.lat:19:13 (Int example.lat:19:23)) (VVal example.lat:19:13 (Ref example.lat:19:13 (Arr example.lat:19:13 (Int example.lat:19:23))) (IRValueName "%v_t_36")) (VInt example.lat:19:13 3)),IVCall example.lat:20:13 (Call example.lat:20:13 (Bool inside standard library) (QIdent example.lat:20:13 (IRTargetRefName "~cl_TopLevel") (IRTargetRefName "print")) [VVal example.lat:20:13 (Ref inside standard library (Cl inside standard library (IRTargetRefName "Object"))) (IRValueName "%v_t_36")] []),INewArr example.lat:21:31 (IRValueName "%v_t_43") (Ref example.lat:21:35 (Arr example.lat:21:35 (Ref example.lat:21:35 (Cl example.lat:21:35 (IRTargetRefName "String"))))) (VInt example.lat:21:31 2),ISet example.lat:21:24 (IRValueName "%v_t_44") (VVal example.lat:21:24 (Ref example.lat:21:31 (Arr example.lat:21:31 (Ref example.lat:21:35 (Arr example.lat:21:35 (Ref example.lat:21:35 (Cl example.lat:21:35 (IRTargetRefName "String"))))))) (IRValueName "%v_t_43")),INewArr example.lat:22:23 (IRValueName "%v_t_46") (Ref example.lat:22:27 (Cl example.lat:22:27 (IRTargetRefName "String"))) (VInt example.lat:22:23 3),ISet example.lat:22:13 (IRValueName "%v___temp_6") (VVal example.lat:22:13 (Ref example.lat:22:23 (Arr example.lat:22:23 (Ref example.lat:22:27 (Cl example.lat:22:27 (IRTargetRefName "String"))))) (IRValueName "%v_t_46")),IStore example.lat:22:13 (VVal example.lat:22:13 (Ref example.lat:22:23 (Arr example.lat:22:23 (Ref example.lat:22:27 (Cl example.lat:22:27 (IRTargetRefName "String"))))) (IRValueName "%v___temp_6")) (PElem example.lat:22:13 (Ref example.lat:22:13 (Ref example.lat:22:23 (Arr example.lat:22:23 (Ref example.lat:22:27 (Cl example.lat:22:27 (IRTargetRefName "String")))))) (VVal example.lat:22:13 (Ref example.lat:22:13 (Arr example.lat:22:13 (Ref example.lat:22:23 (Arr example.lat:22:23 (Ref example.lat:22:27 (Cl example.lat:22:27 (IRTargetRefName "String"))))))) (IRValueName "%v_t_44")) (VInt example.lat:22:13 0)),INewStr example.lat:23:26 (IRValueName "%v_t_49") "Hello!",IAddRef example.lat:23:26 (Ref example.lat:23:26 (Cl example.lat:23:26 (IRTargetRefName "String"))) (VVal example.lat:23:26 (Ref example.lat:23:26 (Cl example.lat:23:26 (IRTargetRefName "String"))) (IRValueName "%v_t_49")) 1,ILoad example.lat:23:13 (IRValueName "%v_t_51") (PElem example.lat:23:13 (Ref example.lat:23:13 (Ref example.lat:21:13 (Arr example.lat:21:13 (Ref example.lat:21:13 (Cl example.lat:21:13 (IRTargetRefName "String")))))) (VVal example.lat:23:13 (Ref example.lat:23:13 (Arr example.lat:23:13 (Ref example.lat:21:13 (Arr example.lat:21:13 (Ref example.lat:21:13 (Cl example.lat:21:13 (IRTargetRefName "String"))))))) (IRValueName "%v_t_44")) (VInt example.lat:23:13 0)),ILoad example.lat:23:13 (IRValueName "%v_c1") (PElem example.lat:23:13 (Ref example.lat:23:13 (Ref example.lat:23:26 (Cl example.lat:23:26 (IRTargetRefName "String")))) (VVal example.lat:23:13 (Ref example.lat:23:13 (Arr example.lat:23:13 (Ref example.lat:23:26 (Cl example.lat:23:26 (IRTargetRefName "String"))))) (IRValueName "%v_t_51")) (VInt example.lat:23:13 0)),IAddRef example.lat:23:13 (Ref example.lat:23:26 (Cl example.lat:23:26 (IRTargetRefName "String"))) (VVal example.lat:23:13 (Ref example.lat:23:26 (Cl example.lat:23:26 (IRTargetRefName "String"))) (IRValueName "%v_c1")) (-1),ISet example.lat:23:13 (IRValueName "%v_c1") (VVal example.lat:23:13 (Ref example.lat:23:26 (Cl example.lat:23:26 (IRTargetRefName "String"))) (IRValueName "%v_t_49")),IAddRef example.lat:23:13 (Ref example.lat:23:26 (Cl example.lat:23:26 (IRTargetRefName "String"))) (VVal example.lat:23:13 (Ref example.lat:23:26 (Cl example.lat:23:26 (IRTargetRefName "String"))) (IRValueName "%v_c1")) 1,ISet example.lat:23:13 (IRValueName "%v___temp_7") (VVal example.lat:23:13 (Ref example.lat:23:26 (Cl example.lat:23:26 (IRTargetRefName "String"))) (IRValueName "%v_c1")),IStore example.lat:23:13 (VVal example.lat:23:13 (Ref example.lat:23:26 (Cl example.lat:23:26 (IRTargetRefName "String"))) (IRValueName "%v___temp_7")) (PElem example.lat:23:13 (Ref example.lat:23:13 (Ref example.lat:23:26 (Cl example.lat:23:26 (IRTargetRefName "String")))) (VVal example.lat:23:13 (Ref example.lat:23:13 (Arr example.lat:23:13 (Ref example.lat:23:26 (Cl example.lat:23:26 (IRTargetRefName "String"))))) (IRValueName "%v_t_51")) (VInt example.lat:23:13 0)),IAddRef example.lat:23:13 (Ref example.lat:23:26 (Cl example.lat:23:26 (IRTargetRefName "String"))) (VVal example.lat:23:13 (Ref example.lat:23:26 (Cl example.lat:23:26 (IRTargetRefName "String"))) (IRValueName "%v_t_49")) (-1),INewStr example.lat:24:26 (IRValueName "%v_t_54") ":D",IAddRef example.lat:24:26 (Ref example.lat:24:26 (Cl example.lat:24:26 (IRTargetRefName "String"))) (VVal example.lat:24:26 (Ref example.lat:24:26 (Cl example.lat:24:26 (IRTargetRefName "String"))) (IRValueName "%v_t_54")) 1,ILoad example.lat:24:13 (IRValueName "%v_t_56") (PElem example.lat:24:13 (Ref example.lat:24:13 (Ref example.lat:21:13 (Arr example.lat:21:13 (Ref example.lat:21:13 (Cl example.lat:21:13 (IRTargetRefName "String")))))) (VVal example.lat:24:13 (Ref example.lat:24:13 (Arr example.lat:24:13 (Ref example.lat:21:13 (Arr example.lat:21:13 (Ref example.lat:21:13 (Cl example.lat:21:13 (IRTargetRefName "String"))))))) (IRValueName "%v_t_44")) (VInt example.lat:24:13 0)),ILoad example.lat:24:13 (IRValueName "%v_c2") (PElem example.lat:24:13 (Ref example.lat:24:13 (Ref example.lat:24:26 (Cl example.lat:24:26 (IRTargetRefName "String")))) (VVal example.lat:24:13 (Ref example.lat:24:13 (Arr example.lat:24:13 (Ref example.lat:24:26 (Cl example.lat:24:26 (IRTargetRefName "String"))))) (IRValueName "%v_t_56")) (VInt example.lat:24:13 2)),IAddRef example.lat:24:13 (Ref example.lat:24:26 (Cl example.lat:24:26 (IRTargetRefName "String"))) (VVal example.lat:24:13 (Ref example.lat:24:26 (Cl example.lat:24:26 (IRTargetRefName "String"))) (IRValueName "%v_c2")) (-1),ISet example.lat:24:13 (IRValueName "%v_c2") (VVal example.lat:24:13 (Ref example.lat:24:26 (Cl example.lat:24:26 (IRTargetRefName "String"))) (IRValueName "%v_t_54")),IAddRef example.lat:24:13 (Ref example.lat:24:26 (Cl example.lat:24:26 (IRTargetRefName "String"))) (VVal example.lat:24:13 (Ref example.lat:24:26 (Cl example.lat:24:26 (IRTargetRefName "String"))) (IRValueName "%v_c2")) 1,ISet example.lat:24:13 (IRValueName "%v___temp_8") (VVal example.lat:24:13 (Ref example.lat:24:26 (Cl example.lat:24:26 (IRTargetRefName "String"))) (IRValueName "%v_c2")),IStore example.lat:24:13 (VVal example.lat:24:13 (Ref example.lat:24:26 (Cl example.lat:24:26 (IRTargetRefName "String"))) (IRValueName "%v___temp_8")) (PElem example.lat:24:13 (Ref example.lat:24:13 (Ref example.lat:24:26 (Cl example.lat:24:26 (IRTargetRefName "String")))) (VVal example.lat:24:13 (Ref example.lat:24:13 (Arr example.lat:24:13 (Ref example.lat:24:26 (Cl example.lat:24:26 (IRTargetRefName "String"))))) (IRValueName "%v_t_56")) (VInt example.lat:24:13 2)),IAddRef example.lat:24:13 (Ref example.lat:24:26 (Cl example.lat:24:26 (IRTargetRefName "String"))) (VVal example.lat:24:13 (Ref example.lat:24:26 (Cl example.lat:24:26 (IRTargetRefName "String"))) (IRValueName "%v_t_54")) (-1),INewStr example.lat:25:25 (IRValueName "%v_t_59") "ELO?",IAddRef example.lat:25:25 (Ref example.lat:25:25 (Cl example.lat:25:25 (IRTargetRefName "String"))) (VVal example.lat:25:25 (Ref example.lat:25:25 (Cl example.lat:25:25 (IRTargetRefName "String"))) (IRValueName "%v_t_59")) 1,IVCall example.lat:25:13 (Call example.lat:25:13 (Bool inside standard library) (QIdent example.lat:25:13 (IRTargetRefName "~cl_TopLevel") (IRTargetRefName "printString")) [VVal example.lat:25:13 (Ref inside standard library (Cl inside standard library (IRTargetRefName "String"))) (IRValueName "%v_t_59")] []),IAddRef example.lat:25:13 (Ref example.lat:25:25 (Cl example.lat:25:25 (IRTargetRefName "String"))) (VVal example.lat:25:13 (Ref example.lat:25:25 (Cl example.lat:25:25 (IRTargetRefName "String"))) (IRValueName "%v_t_59")) (-1),ISet example.lat:29:13 (IRValueName "%v___temp_9") (VInt example.lat:29:13 0),ISet example.lat:29:13 (IRValueName "%v_return") (VVal example.lat:29:13 (Int example.lat:29:20) (IRValueName "%v___temp_9")),IJmp example.lat:29:13 (IRLabelName ".L_exit"),ILabel example.lat:13:9 (IRLabelName ".L_exit"),IRet example.lat:13:9 (VVal example.lat:13:9 (Int example.lat:13:9) (IRValueName "%v_return"))])]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> END OPTIMIZED CODE DUMP 


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> GENERATED INTERMEDIATE STEP Reanalysing liveness...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] CFG for ~cl_TopLevel.resize:
[".L_entry",".L_exit","_WBEG15","_WCOND14","_WEND16"]
".L_entry" -> fromList [IRLabelName "_WCOND14"] <- fromList []
".L_exit" -> fromList [] <- fromList [IRLabelName "_WEND16"]
"_WBEG15" -> fromList [IRLabelName "_WCOND14"] <- fromList [IRLabelName "_WCOND14"]
"_WCOND14" -> fromList [IRLabelName "_WBEG15",IRLabelName "_WEND16"] <- fromList [IRLabelName ".L_entry",IRLabelName "_WBEG15"]
"_WEND16" -> fromList [IRLabelName ".L_exit"] <- fromList [IRLabelName "_WCOND14"]
Liveness at start of .L_entry: in = [("%a_t_2",(2,Ref () (Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String"))))))))),("%v_t_23",(12,Int ())),("%a_t_3",(3,Ref () (Int ()))),("%v_t_20",(11,Int ()))], out = [("%a_t_2",(1,Ref () (Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String"))))))))),("%v_t_23",(11,Int ())),("%a_t_3",(2,Ref () (Int ()))),("%v_t_20",(10,Int ()))], use = [], kill = []
Liveness at end of .L_entry: in = [("%v_t_23",(4,Int ())),("%v_t_2",(6,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_7",(13,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_20",(3,Int ()))], out = [("%v_t_23",(3,Int ())),("%v_t_2",(5,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_7",(12,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_20",(2,Int ()))], use = [], kill = []
Liveness at start of .L_exit: in = [("%v_t_7",(2,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String"))))))))], out = [("%v_t_7",(1,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String"))))))))], use = [], kill = []
Liveness at end of .L_exit: in = [("%v_t_7",(0,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String"))))))))], out = [], use = [("%v_t_7",Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))], kill = []
Liveness at start of _WBEG15: in = [("%v_t_2",(2,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_7",(3,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_12~2",(2,Int ())),("%v_t_10~2",(3,Int ()))], out = [("%v_t_2",(1,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_7",(2,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_12~2",(1,Int ())),("%v_t_10~2",(2,Int ()))], use = [], kill = []
Liveness at end of _WBEG15: in = [("%v_t_23",(4,Int ())),("%v_t_2",(6,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_7",(13,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_20",(3,Int ()))], out = [("%v_t_23",(3,Int ())),("%v_t_2",(5,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_7",(12,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_20",(2,Int ()))], use = [], kill = []
Liveness at start of _WCOND14: in = [("%v_t_23",(2,Int ())),("%v_t_2",(4,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_7",(11,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_20",(1,Int ()))], out = [("%v_t_23",(1,Int ())),("%v_t_2",(3,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_7",(10,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_20",(0,Int ()))], use = [], kill = []
Liveness at end of _WCOND14: in = [("%v___temp_0",(0,Bool ())),("%v_t_2",(4,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_7",(5,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_12~2",(4,Int ())),("%v_t_10~2",(5,Int ()))], out = [("%v_t_2",(3,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_7",(4,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_12~2",(3,Int ())),("%v_t_10~2",(4,Int ()))], use = [("%v___temp_0",Bool ())], kill = []
Liveness at start of _WEND16: in = [("%v_t_7",(6,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String"))))))))], out = [("%v_t_7",(5,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String"))))))))], use = [], kill = []
Liveness at end of _WEND16: in = [("%v_t_7",(4,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String"))))))))], out = [("%v_t_7",(3,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String"))))))))], use = [], kill = []
Code: 
.method String & [] & [] & ~cl_TopLevel.resize (String & [] & [] & %a_t_2, int %a_t_3): [
.L_entry:
  %v_t_2 := load String & [] & [] & & param 0 %a_t_2;
  %v_t_3 := load int & param 1 %a_t_3;
  call boolean ~cl_TopLevel.print (Object & %v_t_2);
  %v_t_5 := load int & fldptr Array %v_t_2 Array.length;
  %v_t_6 := int %v_t_3 + int %v_t_5;
  %v_t_7 := newarr String & [] & [ int %v_t_6 ];
  %v_t_8 := String & [] & [] & %v_t_7;
  %v_t_10 := 0;
  %v_t_12 := 0;
  %v_t_13 := String & [] & [] & %v_t_2;
  jump _WCOND14;
  _WCOND14:
  %v_t_24 := load int & fldptr Array %v_t_13 Array.length;
  %v___temp_0 := int %v_t_12 < int %v_t_24;
  jump if boolean %v___temp_0 then _WBEG15 else _WEND16;
  _WBEG15:
  %v_t_17 := load String & [] & & elemptr String & [] & [] & %v_t_13 [ int %v_t_12 ];
  %v_t_18 := String & [] & %v_t_17;
  %v___temp_1 := String & [] & %v_t_18;
  store String & [] & %v___temp_1 into String & [] & & elemptr String & [] & [] & %v_t_8 [ int %v_t_10 ];
  %v_t_20 := int %v_t_10 + 1;
  %v_t_10 := int %v_t_20;
  call boolean ~cl_TopLevel.print (Object & %v_t_18);
  %v_t_23 := int %v_t_12 + 1;
  %v_t_12 := int %v_t_23;
  jump _WCOND14;
  _WEND16:
  %v___temp_2 := String & [] & [] & %v_t_8;
  %v_return := String & [] & [] & %v___temp_2;
  jump .L_exit;
.L_exit:
  return String & [] & [] & %v_return;
]

CFG for ~cl_TopLevel.main:
[".L_entry",".L_exit"]
".L_entry" -> fromList [IRLabelName ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [IRLabelName ".L_entry"]
Liveness at start of .L_entry: in = [], out = [], use = [], kill = []
Liveness at end of .L_entry: in = [], out = [], use = [], kill = []
Liveness at start of .L_exit: in = [], out = [], use = [], kill = []
Liveness at end of .L_exit: in = [], out = [], use = [], kill = []
Code: 
.method int ~cl_TopLevel.main (): [
.L_entry:
  %v_t_26 := newarr String & [ 5 ];
  %v_t_27 := String & [] & %v_t_26;
  %v_t_29 := newstr "Hello";
  addref String & String & %v_t_29 1;
  %v_c0 := load String & & elemptr String & [] & %v_t_27 [ 0 ];
  addref String & String & %v_c0 -1;
  %v_c0 := String & %v_t_29;
  addref String & String & %v_c0 1;
  %v___temp_3 := String & %v_c0;
  store String & %v___temp_3 into String & & elemptr String & [] & %v_t_27 [ 0 ];
  addref String & String & %v_t_29 -1;
  %v_t_32 := load String & & elemptr String & [] & %v_t_27 [ 0 ];
  addref String & String & %v_t_32 1;
  call boolean ~cl_TopLevel.printString (String & %v_t_32);
  addref String & String & %v_t_32 -1;
  %v_t_35 := newarr int [ 10 ];
  %v_t_36 := int [] & %v_t_35;
  %v___temp_4 := 42;
  store int %v___temp_4 into int & elemptr int [] & %v_t_36 [ 0 ];
  %v___temp_5 := 69;
  store int %v___temp_5 into int & elemptr int [] & %v_t_36 [ 3 ];
  call boolean ~cl_TopLevel.print (Object & %v_t_36);
  %v_t_43 := newarr String & [] & [ 2 ];
  %v_t_44 := String & [] & [] & %v_t_43;
  %v_t_46 := newarr String & [ 3 ];
  %v___temp_6 := String & [] & %v_t_46;
  store String & [] & %v___temp_6 into String & [] & & elemptr String & [] & [] & %v_t_44 [ 0 ];
  %v_t_49 := newstr "Hello!";
  addref String & String & %v_t_49 1;
  %v_t_51 := load String & [] & & elemptr String & [] & [] & %v_t_44 [ 0 ];
  %v_c1 := load String & & elemptr String & [] & %v_t_51 [ 0 ];
  addref String & String & %v_c1 -1;
  %v_c1 := String & %v_t_49;
  addref String & String & %v_c1 1;
  %v___temp_7 := String & %v_c1;
  store String & %v___temp_7 into String & & elemptr String & [] & %v_t_51 [ 0 ];
  addref String & String & %v_t_49 -1;
  %v_t_54 := newstr ":D";
  addref String & String & %v_t_54 1;
  %v_t_56 := load String & [] & & elemptr String & [] & [] & %v_t_44 [ 0 ];
  %v_c2 := load String & & elemptr String & [] & %v_t_56 [ 2 ];
  addref String & String & %v_c2 -1;
  %v_c2 := String & %v_t_54;
  addref String & String & %v_c2 1;
  %v___temp_8 := String & %v_c2;
  store String & %v___temp_8 into String & & elemptr String & [] & %v_t_56 [ 2 ];
  addref String & String & %v_t_54 -1;
  %v_t_59 := newstr "ELO?";
  addref String & String & %v_t_59 1;
  call boolean ~cl_TopLevel.printString (String & %v_t_59);
  addref String & String & %v_t_59 -1;
  %v___temp_9 := 0;
  %v_return := int %v___temp_9;
  jump .L_exit;
.L_exit:
  return int %v_return;
]


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> END STEP Reanalysing liveness...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> GENERATED INTERMEDIATE STEP Allocating registers...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] CFG for ~cl_TopLevel.resize:
[".L_entry",".L_exit","_WBEG15","_WCOND14","_WEND16"]
".L_entry" -> fromList [IRLabelName "_WCOND14"] <- fromList []
".L_exit" -> fromList [] <- fromList [IRLabelName "_WEND16"]
"_WBEG15" -> fromList [IRLabelName "_WCOND14"] <- fromList [IRLabelName "_WCOND14"]
"_WCOND14" -> fromList [IRLabelName "_WBEG15",IRLabelName "_WEND16"] <- fromList [IRLabelName ".L_entry",IRLabelName "_WBEG15"]
"_WEND16" -> fromList [IRLabelName ".L_exit"] <- fromList [IRLabelName "_WCOND14"]
Liveness at start of .L_entry: in = [("%a_t_2",(2,Ref () (Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String"))))))))),("%v_t_23",(12,Int ())),("%a_t_3",(3,Ref () (Int ()))),("%v_t_20",(11,Int ()))], out = [("%a_t_2",(1,Ref () (Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String"))))))))),("%v_t_23",(11,Int ())),("%a_t_3",(2,Ref () (Int ()))),("%v_t_20",(10,Int ()))], use = [], kill = []
Liveness at end of .L_entry: in = [("%v_t_23",(4,Int ())),("%v_t_2",(6,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_7",(13,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_20",(3,Int ()))], out = [("%v_t_23",(3,Int ())),("%v_t_2",(5,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_7",(12,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_20",(2,Int ()))], use = [], kill = []
Liveness at start of .L_exit: in = [("%v_t_7",(2,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String"))))))))], out = [("%v_t_7",(1,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String"))))))))], use = [], kill = []
Liveness at end of .L_exit: in = [("%v_t_7",(0,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String"))))))))], out = [], use = [("%v_t_7",Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))], kill = []
Liveness at start of _WBEG15: in = [("%v_t_2",(2,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_7",(3,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_12~2",(2,Int ())),("%v_t_10~2",(3,Int ()))], out = [("%v_t_2",(1,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_7",(2,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_12~2",(1,Int ())),("%v_t_10~2",(2,Int ()))], use = [], kill = []
Liveness at end of _WBEG15: in = [("%v_t_23",(4,Int ())),("%v_t_2",(6,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_7",(13,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_20",(3,Int ()))], out = [("%v_t_23",(3,Int ())),("%v_t_2",(5,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_7",(12,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_20",(2,Int ()))], use = [], kill = []
Liveness at start of _WCOND14: in = [("%v_t_23",(2,Int ())),("%v_t_2",(4,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_7",(11,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_20",(1,Int ()))], out = [("%v_t_23",(1,Int ())),("%v_t_2",(3,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_7",(10,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_20",(0,Int ()))], use = [], kill = []
Liveness at end of _WCOND14: in = [("%v___temp_0",(0,Bool ())),("%v_t_2",(4,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_7",(5,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_12~2",(4,Int ())),("%v_t_10~2",(5,Int ()))], out = [("%v_t_2",(3,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_7",(4,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_12~2",(3,Int ())),("%v_t_10~2",(4,Int ()))], use = [("%v___temp_0",Bool ())], kill = []
Liveness at start of _WEND16: in = [("%v_t_7",(6,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String"))))))))], out = [("%v_t_7",(5,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String"))))))))], use = [], kill = []
Liveness at end of _WEND16: in = [("%v_t_7",(4,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String"))))))))], out = [("%v_t_7",(3,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String"))))))))], use = [], kill = []
Code: 
.method String & [] & [] & ~cl_TopLevel.resize (String & [] & [] & %a_t_2, int %a_t_3): [
.L_entry:
  %v_t_2 := load String & [] & [] & & param 0 %a_t_2;
  %v_t_3 := load int & param 1 %a_t_3;
  call boolean ~cl_TopLevel.print (Object & %v_t_2);
  %v_t_5 := load int & fldptr Array %v_t_2 Array.length;
  %v_t_6 := int %v_t_3 + int %v_t_5;
  %v_t_7 := newarr String & [] & [ int %v_t_6 ];
  %v_t_8 := String & [] & [] & %v_t_7;
  %v_t_10 := 0;
  %v_t_12 := 0;
  %v_t_13 := String & [] & [] & %v_t_2;
  jump _WCOND14;
  _WCOND14:
  %v_t_24 := load int & fldptr Array %v_t_13 Array.length;
  %v___temp_0 := int %v_t_12 < int %v_t_24;
  jump if boolean %v___temp_0 then _WBEG15 else _WEND16;
  _WBEG15:
  %v_t_17 := load String & [] & & elemptr String & [] & [] & %v_t_13 [ int %v_t_12 ];
  %v_t_18 := String & [] & %v_t_17;
  %v___temp_1 := String & [] & %v_t_18;
  store String & [] & %v___temp_1 into String & [] & & elemptr String & [] & [] & %v_t_8 [ int %v_t_10 ];
  %v_t_20 := int %v_t_10 + 1;
  %v_t_10 := int %v_t_20;
  call boolean ~cl_TopLevel.print (Object & %v_t_18);
  %v_t_23 := int %v_t_12 + 1;
  %v_t_12 := int %v_t_23;
  jump _WCOND14;
  _WEND16:
  %v___temp_2 := String & [] & [] & %v_t_8;
  %v_return := String & [] & [] & %v___temp_2;
  jump .L_exit;
.L_exit:
  return String & [] & [] & %v_return;
]

CFG for ~cl_TopLevel.main:
[".L_entry",".L_exit"]
".L_entry" -> fromList [IRLabelName ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [IRLabelName ".L_entry"]
Liveness at start of .L_entry: in = [], out = [], use = [], kill = []
Liveness at end of .L_entry: in = [], out = [], use = [], kill = []
Liveness at start of .L_exit: in = [], out = [], use = [], kill = []
Liveness at end of .L_exit: in = [], out = [], use = [], kill = []
Code: 
.method int ~cl_TopLevel.main (): [
.L_entry:
  %v_t_26 := newarr String & [ 5 ];
  %v_t_27 := String & [] & %v_t_26;
  %v_t_29 := newstr "Hello";
  addref String & String & %v_t_29 1;
  %v_c0 := load String & & elemptr String & [] & %v_t_27 [ 0 ];
  addref String & String & %v_c0 -1;
  %v_c0 := String & %v_t_29;
  addref String & String & %v_c0 1;
  %v___temp_3 := String & %v_c0;
  store String & %v___temp_3 into String & & elemptr String & [] & %v_t_27 [ 0 ];
  addref String & String & %v_t_29 -1;
  %v_t_32 := load String & & elemptr String & [] & %v_t_27 [ 0 ];
  addref String & String & %v_t_32 1;
  call boolean ~cl_TopLevel.printString (String & %v_t_32);
  addref String & String & %v_t_32 -1;
  %v_t_35 := newarr int [ 10 ];
  %v_t_36 := int [] & %v_t_35;
  %v___temp_4 := 42;
  store int %v___temp_4 into int & elemptr int [] & %v_t_36 [ 0 ];
  %v___temp_5 := 69;
  store int %v___temp_5 into int & elemptr int [] & %v_t_36 [ 3 ];
  call boolean ~cl_TopLevel.print (Object & %v_t_36);
  %v_t_43 := newarr String & [] & [ 2 ];
  %v_t_44 := String & [] & [] & %v_t_43;
  %v_t_46 := newarr String & [ 3 ];
  %v___temp_6 := String & [] & %v_t_46;
  store String & [] & %v___temp_6 into String & [] & & elemptr String & [] & [] & %v_t_44 [ 0 ];
  %v_t_49 := newstr "Hello!";
  addref String & String & %v_t_49 1;
  %v_t_51 := load String & [] & & elemptr String & [] & [] & %v_t_44 [ 0 ];
  %v_c1 := load String & & elemptr String & [] & %v_t_51 [ 0 ];
  addref String & String & %v_c1 -1;
  %v_c1 := String & %v_t_49;
  addref String & String & %v_c1 1;
  %v___temp_7 := String & %v_c1;
  store String & %v___temp_7 into String & & elemptr String & [] & %v_t_51 [ 0 ];
  addref String & String & %v_t_49 -1;
  %v_t_54 := newstr ":D";
  addref String & String & %v_t_54 1;
  %v_t_56 := load String & [] & & elemptr String & [] & [] & %v_t_44 [ 0 ];
  %v_c2 := load String & & elemptr String & [] & %v_t_56 [ 2 ];
  addref String & String & %v_c2 -1;
  %v_c2 := String & %v_t_54;
  addref String & String & %v_c2 1;
  %v___temp_8 := String & %v_c2;
  store String & %v___temp_8 into String & & elemptr String & [] & %v_t_56 [ 2 ];
  addref String & String & %v_t_54 -1;
  %v_t_59 := newstr "ELO?";
  addref String & String & %v_t_59 1;
  call boolean ~cl_TopLevel.printString (String & %v_t_59);
  addref String & String & %v_t_59 -1;
  %v___temp_9 := 0;
  %v_return := int %v___temp_9;
  jump .L_exit;
.L_exit:
  return int %v_return;
]


[94m[Info]    [0m[Reporting.Logs.logInfo#75] [%a_t_2 (reg preference: CallerSaved) (RDI): ["%a_t_3","%v_t_20","%v_t_23"]
%a_t_3 (reg preference: CallerSaved) (RSI): ["%a_t_2","%v_t_2","%v_t_20","%v_t_23"]
%v___temp_0 (reg preference: CallerSaved) (RCX): ["%v_t_10~2","%v_t_12~2","%v_t_2","%v_t_7"]
%v_t_10~2 (reg preference: CallerSaved) (RAX): ["%v___temp_0","%v_t_12~2","%v_t_17","%v_t_2","%v_t_23","%v_t_24","%v_t_7"]
%v_t_12~2 (reg preference: CalleeSaved) (R13): ["%v___temp_0","%v_t_10~2","%v_t_17","%v_t_2","%v_t_20","%v_t_24","%v_t_7"]
%v_t_17 (reg preference: CallerSaved) (RCX): ["%v_t_10~2","%v_t_12~2","%v_t_2","%v_t_20","%v_t_7"]
%v_t_2 (reg preference: CalleeSaved) (R12): ["%a_t_3","%v___temp_0","%v_t_10~2","%v_t_12~2","%v_t_17","%v_t_20","%v_t_23","%v_t_24","%v_t_3","%v_t_5","%v_t_6","%v_t_7"]
%v_t_20 (reg preference: CalleeSaved) (R14): ["%a_t_2","%a_t_3","%v_t_12~2","%v_t_17","%v_t_2","%v_t_23","%v_t_3","%v_t_5","%v_t_6","%v_t_7"]
%v_t_23 (reg preference: CalleeSaved) (R13): ["%a_t_2","%a_t_3","%v_t_10~2","%v_t_2","%v_t_20","%v_t_3","%v_t_5","%v_t_6","%v_t_7"]
%v_t_24 (reg preference: CallerSaved) (RCX): ["%v_t_10~2","%v_t_12~2","%v_t_2","%v_t_7"]
%v_t_3 (reg preference: CalleeSaved) (RBX): ["%v_t_2","%v_t_20","%v_t_23","%v_t_5"]
%v_t_5 (reg preference: CallerSaved) (RAX): ["%v_t_2","%v_t_20","%v_t_23","%v_t_3"]
%v_t_6 (reg preference: CallerSaved) (RAX): ["%v_t_2","%v_t_20","%v_t_23"]
%v_t_7 (reg preference: CalleeSaved) (RBX): ["%v___temp_0","%v_t_10~2","%v_t_12~2","%v_t_17","%v_t_2","%v_t_20","%v_t_23","%v_t_24"]
~arg_0_RDI (reg preference: CallerSaved) (RDI): []
~arg_1_RDI (reg preference: CallerSaved) (RDI): []
,%v_c0 (reg preference: CallerSaved) (RDX): ["%v_t_26","%v_t_29"]
%v_c1 (reg preference: CallerSaved) (RDI): ["%v_t_43","%v_t_49","%v_t_51"]
%v_c2 (reg preference: CallerSaved) (RDX): ["%v_t_54","%v_t_56"]
%v_t_26 (reg preference: CallerSaved) (RCX): ["%v_c0","%v_t_29"]
%v_t_29 (reg preference: CallerSaved) (RAX): ["%v_c0","%v_t_26"]
%v_t_32 (reg preference: CalleeSaved) (RBX): []
%v_t_35 (reg preference: CallerSaved) (RAX): []
%v_t_43 (reg preference: CallerSaved) (RAX): ["%v_c1","%v_t_46","%v_t_49","%v_t_51","%v_t_54"]
%v_t_46 (reg preference: CallerSaved) (RCX): ["%v_t_43"]
%v_t_49 (reg preference: CallerSaved) (RDX): ["%v_c1","%v_t_43","%v_t_51"]
%v_t_51 (reg preference: CallerSaved) (RCX): ["%v_c1","%v_t_43","%v_t_49"]
%v_t_54 (reg preference: CallerSaved) (RCX): ["%v_c2","%v_t_43","%v_t_56"]
%v_t_56 (reg preference: CallerSaved) (RAX): ["%v_c2","%v_t_54"]
%v_t_59 (reg preference: CalleeSaved) (RBX): []
~arg_0_RDI (reg preference: CallerSaved) (RDI): []
~arg_1_RDI (reg preference: CallerSaved) (RDI): []
~arg_2_RDI (reg preference: CallerSaved) (RDI): []
]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> END STEP Allocating registers...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> GENERATED INTERMEDIATE STEP Unfolding phis...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] CFG for ~cl_TopLevel.resize:
[".L_entry",".L_exit","_WBEG15","_WCOND14","_WCOND14__from__WBEG15","_WCOND14__from_entry","_WEND16"]
".L_entry" -> fromList [IRLabelName "_WCOND14__from_entry"] <- fromList []
".L_exit" -> fromList [] <- fromList [IRLabelName "_WEND16"]
"_WBEG15" -> fromList [IRLabelName "_WCOND14__from__WBEG15"] <- fromList [IRLabelName "_WCOND14"]
"_WCOND14" -> fromList [IRLabelName "_WBEG15",IRLabelName "_WEND16"] <- fromList [IRLabelName "_WCOND14__from__WBEG15",IRLabelName "_WCOND14__from_entry"]
"_WCOND14__from__WBEG15" -> fromList [IRLabelName "_WCOND14"] <- fromList [IRLabelName "_WBEG15"]
"_WCOND14__from_entry" -> fromList [IRLabelName "_WCOND14"] <- fromList [IRLabelName ".L_entry"]
"_WEND16" -> fromList [IRLabelName ".L_exit"] <- fromList [IRLabelName "_WCOND14"]
Code: 
.method String & [] & [] & ~cl_TopLevel.resize (String & [] & [] & %a_t_2, int %a_t_3): [
.L_entry:
  %v_t_2 := load String & [] & [] & & param 0 %a_t_2;
  %v_t_3 := load int & param 1 %a_t_3;
  call boolean ~cl_TopLevel.print (Object & %v_t_2);
  %v_t_5 := load int & fldptr Array %v_t_2 Array.length;
  %v_t_6 := int %v_t_3 + int %v_t_5;
  %v_t_7 := newarr String & [] & [ int %v_t_6 ];
  %v_t_8 := String & [] & [] & %v_t_7;
  %v_t_10 := 0;
  %v_t_12 := 0;
  %v_t_13 := String & [] & [] & %v_t_2;
  jump _WCOND14;
  _WCOND14:
  %v_t_24 := load int & fldptr Array %v_t_13 Array.length;
  %v___temp_0 := int %v_t_12 < int %v_t_24;
  jump if boolean %v___temp_0 then _WBEG15 else _WEND16;
  _WBEG15:
  %v_t_17 := load String & [] & & elemptr String & [] & [] & %v_t_13 [ int %v_t_12 ];
  %v_t_18 := String & [] & %v_t_17;
  %v___temp_1 := String & [] & %v_t_18;
  store String & [] & %v___temp_1 into String & [] & & elemptr String & [] & [] & %v_t_8 [ int %v_t_10 ];
  %v_t_20 := int %v_t_10 + 1;
  %v_t_10 := int %v_t_20;
  call boolean ~cl_TopLevel.print (Object & %v_t_18);
  %v_t_23 := int %v_t_12 + 1;
  %v_t_12 := int %v_t_23;
  jump _WCOND14;
  _WEND16:
  %v___temp_2 := String & [] & [] & %v_t_8;
  %v_return := String & [] & [] & %v___temp_2;
  jump .L_exit;
.L_exit:
  return String & [] & [] & %v_return;
]

CFG for ~cl_TopLevel.main:
[".L_entry",".L_exit"]
".L_entry" -> fromList [IRLabelName ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [IRLabelName ".L_entry"]
Code: 
.method int ~cl_TopLevel.main (): [
.L_entry:
  %v_t_26 := newarr String & [ 5 ];
  %v_t_27 := String & [] & %v_t_26;
  %v_t_29 := newstr "Hello";
  addref String & String & %v_t_29 1;
  %v_c0 := load String & & elemptr String & [] & %v_t_27 [ 0 ];
  addref String & String & %v_c0 -1;
  %v_c0 := String & %v_t_29;
  addref String & String & %v_c0 1;
  %v___temp_3 := String & %v_c0;
  store String & %v___temp_3 into String & & elemptr String & [] & %v_t_27 [ 0 ];
  addref String & String & %v_t_29 -1;
  %v_t_32 := load String & & elemptr String & [] & %v_t_27 [ 0 ];
  addref String & String & %v_t_32 1;
  call boolean ~cl_TopLevel.printString (String & %v_t_32);
  addref String & String & %v_t_32 -1;
  %v_t_35 := newarr int [ 10 ];
  %v_t_36 := int [] & %v_t_35;
  %v___temp_4 := 42;
  store int %v___temp_4 into int & elemptr int [] & %v_t_36 [ 0 ];
  %v___temp_5 := 69;
  store int %v___temp_5 into int & elemptr int [] & %v_t_36 [ 3 ];
  call boolean ~cl_TopLevel.print (Object & %v_t_36);
  %v_t_43 := newarr String & [] & [ 2 ];
  %v_t_44 := String & [] & [] & %v_t_43;
  %v_t_46 := newarr String & [ 3 ];
  %v___temp_6 := String & [] & %v_t_46;
  store String & [] & %v___temp_6 into String & [] & & elemptr String & [] & [] & %v_t_44 [ 0 ];
  %v_t_49 := newstr "Hello!";
  addref String & String & %v_t_49 1;
  %v_t_51 := load String & [] & & elemptr String & [] & [] & %v_t_44 [ 0 ];
  %v_c1 := load String & & elemptr String & [] & %v_t_51 [ 0 ];
  addref String & String & %v_c1 -1;
  %v_c1 := String & %v_t_49;
  addref String & String & %v_c1 1;
  %v___temp_7 := String & %v_c1;
  store String & %v___temp_7 into String & & elemptr String & [] & %v_t_51 [ 0 ];
  addref String & String & %v_t_49 -1;
  %v_t_54 := newstr ":D";
  addref String & String & %v_t_54 1;
  %v_t_56 := load String & [] & & elemptr String & [] & [] & %v_t_44 [ 0 ];
  %v_c2 := load String & & elemptr String & [] & %v_t_56 [ 2 ];
  addref String & String & %v_c2 -1;
  %v_c2 := String & %v_t_54;
  addref String & String & %v_c2 1;
  %v___temp_8 := String & %v_c2;
  store String & %v___temp_8 into String & & elemptr String & [] & %v_t_56 [ 2 ];
  addref String & String & %v_t_54 -1;
  %v_t_59 := newstr "ELO?";
  addref String & String & %v_t_59 1;
  call boolean ~cl_TopLevel.printString (String & %v_t_59);
  addref String & String & %v_t_59 -1;
  %v___temp_9 := 0;
  %v_return := int %v___temp_9;
  jump .L_exit;
.L_exit:
  return int %v_return;
]


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> END STEP Unfolding phis...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> GENERATED INTERMEDIATE STEP Inlining trivial jumps...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] CFG for ~cl_TopLevel.resize:
[".L_entry","_WBEG15","_WCOND14","_WEND16"]
".L_entry" -> fromList [IRLabelName "_WCOND14"] <- fromList []
"_WBEG15" -> fromList [IRLabelName "_WCOND14"] <- fromList [IRLabelName "_WCOND14"]
"_WCOND14" -> fromList [IRLabelName "_WBEG15",IRLabelName "_WEND16"] <- fromList [IRLabelName ".L_entry",IRLabelName "_WBEG15"]
"_WEND16" -> fromList [] <- fromList [IRLabelName "_WCOND14"]
Code: 
.method String & [] & [] & ~cl_TopLevel.resize (String & [] & [] & %a_t_2, int %a_t_3): [
.L_entry:
  endphi;
  %v_t_2 := load String & [] & [] & & param 0 %a_t_2;
  %v_t_3 := load int & param 1 %a_t_3;
  call boolean ~cl_TopLevel.print (Object & %v_t_2);
  %v_t_5 := load int & fldptr Array %v_t_2 Array.length;
  %v_t_6 := int %v_t_3 + int %v_t_5;
  %v_t_7 := newarr String & [] & [ int %v_t_6 ];
  %v_t_12~2 := 0;
  %v_t_10~2 := 0;
  jump _WCOND14;
  _WCOND14:
  endphi;
  %v_t_24 := load int & fldptr String & [] & [] & %v_t_2 Array.length;
  %v___temp_0 := int %v_t_12~2 < int %v_t_24;
  jump if boolean %v___temp_0 then _WBEG15 else _WEND16;
  _WBEG15:
  endphi;
  %v_t_17 := load String & [] & & elemptr String & [] & [] & %v_t_2 [ int %v_t_12~2 ];
  store String & [] & %v_t_17 into String & [] & & elemptr String & [] & [] & %v_t_7 [ int %v_t_10~2 ];
  %v_t_20 := int %v_t_10~2 + 1;
  call boolean ~cl_TopLevel.print (String & [] & %v_t_17);
  %v_t_23 := int %v_t_12~2 + 1;
  swap int %v_t_10~2 %v_t_20;
  swap int %v_t_12~2 %v_t_23;
  jump _WCOND14;
  _WEND16:
  endphi;
  endphi;
  return String & [] & [] & %v_t_7;
]

CFG for ~cl_TopLevel.main:
[".L_entry"]
".L_entry" -> fromList [] <- fromList []
Code: 
.method int ~cl_TopLevel.main (): [
.L_entry:
  endphi;
  %v_t_26 := newarr String & [ 5 ];
  %v_t_29 := newstr "Hello";
  addref String & String & %v_t_29 1;
  %v_c0 := load String & & elemptr String & [] & %v_t_26 [ 0 ];
  addref String & String & %v_c0 -1;
  addref String & String & %v_t_29 1;
  store String & %v_t_29 into String & & elemptr String & [] & %v_t_26 [ 0 ];
  addref String & String & %v_t_29 -1;
  %v_t_32 := load String & & elemptr String & [] & %v_t_26 [ 0 ];
  addref String & String & %v_t_32 1;
  call boolean ~cl_TopLevel.printString (String & %v_t_32);
  addref String & String & %v_t_32 -1;
  %v_t_35 := newarr int [ 10 ];
  store 42 into int & elemptr int [] & %v_t_35 [ 0 ];
  store 69 into int & elemptr int [] & %v_t_35 [ 3 ];
  call boolean ~cl_TopLevel.print (int [] & %v_t_35);
  %v_t_43 := newarr String & [] & [ 2 ];
  %v_t_46 := newarr String & [ 3 ];
  store String & [] & %v_t_46 into String & [] & & elemptr String & [] & [] & %v_t_43 [ 0 ];
  %v_t_49 := newstr "Hello!";
  addref String & String & %v_t_49 1;
  %v_t_51 := load String & [] & & elemptr String & [] & [] & %v_t_43 [ 0 ];
  %v_c1 := load String & & elemptr String & [] & %v_t_51 [ 0 ];
  addref String & String & %v_c1 -1;
  addref String & String & %v_t_49 1;
  store String & %v_t_49 into String & & elemptr String & [] & %v_t_51 [ 0 ];
  addref String & String & %v_t_49 -1;
  %v_t_54 := newstr ":D";
  addref String & String & %v_t_54 1;
  %v_t_56 := load String & [] & & elemptr String & [] & [] & %v_t_43 [ 0 ];
  %v_c2 := load String & & elemptr String & [] & %v_t_56 [ 2 ];
  addref String & String & %v_c2 -1;
  addref String & String & %v_t_54 1;
  store String & %v_t_54 into String & & elemptr String & [] & %v_t_56 [ 2 ];
  addref String & String & %v_t_54 -1;
  %v_t_59 := newstr "ELO?";
  addref String & String & %v_t_59 1;
  call boolean ~cl_TopLevel.printString (String & %v_t_59);
  addref String & String & %v_t_59 -1;
  endphi;
  return 0;
]


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> END STEP Inlining trivial jumps...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> GENERATED INTERMEDIATE STEP Final liveness analysis...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] CFG for ~cl_TopLevel.resize:
[".L_entry","_WBEG15","_WCOND14","_WEND16"]
".L_entry" -> fromList [IRLabelName "_WCOND14"] <- fromList []
"_WBEG15" -> fromList [IRLabelName "_WCOND14"] <- fromList [IRLabelName "_WCOND14"]
"_WCOND14" -> fromList [IRLabelName "_WBEG15",IRLabelName "_WEND16"] <- fromList [IRLabelName ".L_entry",IRLabelName "_WBEG15"]
"_WEND16" -> fromList [] <- fromList [IRLabelName "_WCOND14"]
Liveness at start of .L_entry: in = [("%a_t_2",(2,Ref () (Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String"))))))))),("%a_t_3",(3,Ref () (Int ())))], out = [("%a_t_2",(1,Ref () (Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String"))))))))),("%a_t_3",(2,Ref () (Int ())))], use = [], kill = []
Liveness at end of .L_entry: in = [("%v_t_2",(4,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_7",(11,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_12~2",(5,Int ())),("%v_t_10~2",(11,Int ()))], out = [("%v_t_2",(3,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_7",(10,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_12~2",(4,Int ())),("%v_t_10~2",(10,Int ()))], use = [], kill = []
Liveness at start of _WBEG15: in = [("%v_t_2",(2,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_7",(3,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_12~2",(2,Int ())),("%v_t_10~2",(3,Int ()))], out = [("%v_t_2",(1,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_7",(2,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_12~2",(1,Int ())),("%v_t_10~2",(2,Int ()))], use = [], kill = []
Liveness at end of _WBEG15: in = [("%v_t_2",(4,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_7",(11,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_12~2",(5,Int ())),("%v_t_10~2",(11,Int ()))], out = [("%v_t_2",(3,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_7",(10,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_12~2",(4,Int ())),("%v_t_10~2",(10,Int ()))], use = [], kill = []
Liveness at start of _WCOND14: in = [("%v_t_2",(2,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_7",(9,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_12~2",(3,Int ())),("%v_t_10~2",(9,Int ()))], out = [("%v_t_2",(1,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_7",(8,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_12~2",(2,Int ())),("%v_t_10~2",(8,Int ()))], use = [], kill = []
Liveness at end of _WCOND14: in = [("%v___temp_0",(0,Bool ())),("%v_t_2",(4,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_7",(5,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_12~2",(4,Int ())),("%v_t_10~2",(5,Int ()))], out = [("%v_t_2",(3,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_7",(4,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))),("%v_t_12~2",(3,Int ())),("%v_t_10~2",(4,Int ()))], use = [("%v___temp_0",Bool ())], kill = []
Liveness at start of _WEND16: in = [("%v_t_7",(3,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String"))))))))], out = [("%v_t_7",(2,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String"))))))))], use = [], kill = []
Liveness at end of _WEND16: in = [("%v_t_7",(0,Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String"))))))))], out = [], use = [("%v_t_7",Ref () (Arr () (Ref () (Arr () (Ref () (Cl () (IRTargetRefName "String")))))))], kill = []
Code: 
.method String & [] & [] & ~cl_TopLevel.resize (String & [] & [] & %a_t_2, int %a_t_3): [
.L_entry:
  endphi;
  %v_t_2 := load String & [] & [] & & param 0 %a_t_2;
  %v_t_3 := load int & param 1 %a_t_3;
  call boolean ~cl_TopLevel.print (Object & %v_t_2);
  %v_t_5 := load int & fldptr Array %v_t_2 Array.length;
  %v_t_6 := int %v_t_3 + int %v_t_5;
  %v_t_7 := newarr String & [] & [ int %v_t_6 ];
  %v_t_12~2 := 0;
  %v_t_10~2 := 0;
  jump _WCOND14;
  _WCOND14:
  endphi;
  %v_t_24 := load int & fldptr String & [] & [] & %v_t_2 Array.length;
  %v___temp_0 := int %v_t_12~2 < int %v_t_24;
  jump if boolean %v___temp_0 then _WBEG15 else _WEND16;
  _WBEG15:
  endphi;
  %v_t_17 := load String & [] & & elemptr String & [] & [] & %v_t_2 [ int %v_t_12~2 ];
  store String & [] & %v_t_17 into String & [] & & elemptr String & [] & [] & %v_t_7 [ int %v_t_10~2 ];
  %v_t_20 := int %v_t_10~2 + 1;
  call boolean ~cl_TopLevel.print (String & [] & %v_t_17);
  %v_t_23 := int %v_t_12~2 + 1;
  swap int %v_t_10~2 %v_t_20;
  swap int %v_t_12~2 %v_t_23;
  jump _WCOND14;
  _WEND16:
  endphi;
  endphi;
  return String & [] & [] & %v_t_7;
]

CFG for ~cl_TopLevel.main:
[".L_entry"]
".L_entry" -> fromList [] <- fromList []
Liveness at start of .L_entry: in = [], out = [], use = [], kill = []
Liveness at end of .L_entry: in = [], out = [], use = [], kill = []
Code: 
.method int ~cl_TopLevel.main (): [
.L_entry:
  endphi;
  %v_t_26 := newarr String & [ 5 ];
  %v_t_29 := newstr "Hello";
  addref String & String & %v_t_29 1;
  %v_c0 := load String & & elemptr String & [] & %v_t_26 [ 0 ];
  addref String & String & %v_c0 -1;
  addref String & String & %v_t_29 1;
  store String & %v_t_29 into String & & elemptr String & [] & %v_t_26 [ 0 ];
  addref String & String & %v_t_29 -1;
  %v_t_32 := load String & & elemptr String & [] & %v_t_26 [ 0 ];
  addref String & String & %v_t_32 1;
  call boolean ~cl_TopLevel.printString (String & %v_t_32);
  addref String & String & %v_t_32 -1;
  %v_t_35 := newarr int [ 10 ];
  store 42 into int & elemptr int [] & %v_t_35 [ 0 ];
  store 69 into int & elemptr int [] & %v_t_35 [ 3 ];
  call boolean ~cl_TopLevel.print (int [] & %v_t_35);
  %v_t_43 := newarr String & [] & [ 2 ];
  %v_t_46 := newarr String & [ 3 ];
  store String & [] & %v_t_46 into String & [] & & elemptr String & [] & [] & %v_t_43 [ 0 ];
  %v_t_49 := newstr "Hello!";
  addref String & String & %v_t_49 1;
  %v_t_51 := load String & [] & & elemptr String & [] & [] & %v_t_43 [ 0 ];
  %v_c1 := load String & & elemptr String & [] & %v_t_51 [ 0 ];
  addref String & String & %v_c1 -1;
  addref String & String & %v_t_49 1;
  store String & %v_t_49 into String & & elemptr String & [] & %v_t_51 [ 0 ];
  addref String & String & %v_t_49 -1;
  %v_t_54 := newstr ":D";
  addref String & String & %v_t_54 1;
  %v_t_56 := load String & [] & & elemptr String & [] & [] & %v_t_43 [ 0 ];
  %v_c2 := load String & & elemptr String & [] & %v_t_56 [ 2 ];
  addref String & String & %v_c2 -1;
  addref String & String & %v_t_54 1;
  store String & %v_t_54 into String & & elemptr String & [] & %v_t_56 [ 2 ];
  addref String & String & %v_t_54 -1;
  %v_t_59 := newstr "ELO?";
  addref String & String & %v_t_59 1;
  call boolean ~cl_TopLevel.printString (String & %v_t_59);
  addref String & String & %v_t_59 -1;
  endphi;
  return 0;
]


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> END STEP Final liveness analysis...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] COMPL_ DONEexample.lat

CompiledProg example.lat:1:1 (Meta example.lat:1:1 [ClDef inside standard library (IRTargetRefName "Array") [IRTargetRefName "Array",IRTargetRefName "Object"] [FldDef inside standard library (Ref inside standard library (Cl inside standard library (IRTargetRefName "Object"))) (IRTargetRefName "elements"),FldDef inside standard library (Int inside standard library) (IRTargetRefName "length"),FldDef inside standard library (Int inside standard library) (IRTargetRefName "elementSize")] [MthdDef inside standard library "Object" (FType inside standard library (Bool inside standard library) [Ref inside standard library (Cl inside standard library (IRTargetRefName "Object"))]) (QIdent inside standard library (IRTargetRefName "Object") (IRTargetRefName "equals")),MthdDef inside standard library "Object" (FType inside standard library (Int inside standard library) []) (QIdent inside standard library (IRTargetRefName "Object") (IRTargetRefName "getHashCode")),MthdDef inside standard library "Object" (FType inside standard library (Ref inside standard library (Cl inside standard library (IRTargetRefName "String"))) []) (QIdent inside standard library (IRTargetRefName "Array") (IRTargetRefName "toString"))],ClDef inside standard library (IRTargetRefName "Object") [IRTargetRefName "Object"] [] [MthdDef inside standard library "Object" (FType inside standard library (Bool inside standard library) [Ref inside standard library (Cl inside standard library (IRTargetRefName "Object"))]) (QIdent inside standard library (IRTargetRefName "Object") (IRTargetRefName "equals")),MthdDef inside standard library "Object" (FType inside standard library (Int inside standard library) []) (QIdent inside standard library (IRTargetRefName "Object") (IRTargetRefName "getHashCode")),MthdDef inside standard library "Object" (FType inside standard library (Ref inside standard library (Cl inside standard library (IRTargetRefName "String"))) []) (QIdent inside standard library (IRTargetRefName "Object") (IRTargetRefName "toString"))],ClDef inside standard library (IRTargetRefName "String") [IRTargetRefName "String",IRTargetRefName "Object"] [] [MthdDef inside standard library "String" (FType inside standard library (Int inside standard library) [Int inside standard library]) (QIdent inside standard library (IRTargetRefName "String") (IRTargetRefName "charAt")),MthdDef inside standard library "Object" (FType inside standard library (Bool inside standard library) [Ref inside standard library (Cl inside standard library (IRTargetRefName "Object"))]) (QIdent inside standard library (IRTargetRefName "String") (IRTargetRefName "equals")),MthdDef inside standard library "String" (FType inside standard library (Ref inside standard library (Cl inside standard library (IRTargetRefName "String"))) [Ref inside standard library (Cl inside standard library (IRTargetRefName "String"))]) (QIdent inside standard library (IRTargetRefName "String") (IRTargetRefName "concat")),MthdDef inside standard library "String" (FType inside standard library (Bool inside standard library) [Ref inside standard library (Cl inside standard library (IRTargetRefName "String"))]) (QIdent inside standard library (IRTargetRefName "String") (IRTargetRefName "startsWith")),MthdDef inside standard library "String" (FType inside standard library (Bool inside standard library) [Ref inside standard library (Cl inside standard library (IRTargetRefName "String"))]) (QIdent inside standard library (IRTargetRefName "String") (IRTargetRefName "endsWith")),MthdDef inside standard library "String" (FType inside standard library (Ref inside standard library (Arr inside standard library (Int inside standard library))) []) (QIdent inside standard library (IRTargetRefName "String") (IRTargetRefName "getBytes")),MthdDef inside standard library "String" (FType inside standard library (Int inside standard library) [Ref inside standard library (Cl inside standard library (IRTargetRefName "String")),Int inside standard library]) (QIdent inside standard library (IRTargetRefName "String") (IRTargetRefName "indexOf")),MthdDef inside standard library "String" (FType inside standard library (Int inside standard library) []) (QIdent inside standard library (IRTargetRefName "String") (IRTargetRefName "length")),MthdDef inside standard library "String" (FType inside standard library (Ref inside standard library (Cl inside standard library (IRTargetRefName "String"))) [Int inside standard library,Int inside standard library]) (QIdent inside standard library (IRTargetRefName "String") (IRTargetRefName "substring")),MthdDef inside standard library "Object" (FType inside standard library (Ref inside standard library (Cl inside standard library (IRTargetRefName "String"))) []) (QIdent inside standard library (IRTargetRefName "String") (IRTargetRefName "toString")),MthdDef inside standard library "Object" (FType inside standard library (Int inside standard library) []) (QIdent inside standard library (IRTargetRefName "String") (IRTargetRefName "getHashCode"))],ClDef example.lat:1:1 (IRTargetRefName "~cl_TopLevel") [] [] [MthdDef example.lat:1:1 "" (FType example.lat:1:1 (Ref example.lat:1:1 (Cl example.lat:1:1 (IRTargetRefName "Array"))) []) (QIdent example.lat:1:1 (IRTargetRefName "Array") (IRTargetRefName "toString")),MthdDef example.lat:1:1 "" (FType example.lat:1:1 (Ref example.lat:1:1 (Cl example.lat:1:1 (IRTargetRefName "Object"))) []) (QIdent example.lat:1:1 (IRTargetRefName "Object") (IRTargetRefName "toString")),MthdDef example.lat:1:1 "" (FType example.lat:1:1 (Int example.lat:1:1) []) (QIdent example.lat:1:1 (IRTargetRefName "Object") (IRTargetRefName "getHashCode")),MthdDef example.lat:1:1 "" (FType example.lat:1:1 (Bool example.lat:1:1) [Ref example.lat:1:1 (Cl example.lat:1:1 (IRTargetRefName "Object"))]) (QIdent example.lat:1:1 (IRTargetRefName "Object") (IRTargetRefName "equals")),MthdDef example.lat:1:1 "" (FType example.lat:1:1 (Bool example.lat:1:1) [Ref example.lat:1:1 (Cl example.lat:1:1 (IRTargetRefName "Object"))]) (QIdent example.lat:1:1 (IRTargetRefName "String") (IRTargetRefName "equals")),MthdDef example.lat:1:1 "" (FType example.lat:1:1 (Int example.lat:1:1) []) (QIdent example.lat:1:1 (IRTargetRefName "String") (IRTargetRefName "getHashCode")),MthdDef example.lat:1:1 "" (FType example.lat:1:1 (Ref example.lat:1:1 (Cl example.lat:1:1 (IRTargetRefName "String"))) []) (QIdent example.lat:1:1 (IRTargetRefName "String") (IRTargetRefName "toString")),MthdDef example.lat:1:1 "" (FType example.lat:1:1 (Ref example.lat:1:1 (Cl example.lat:1:1 (IRTargetRefName "String"))) []) (QIdent example.lat:1:1 (IRTargetRefName "String") (IRTargetRefName "substring")),MthdDef example.lat:1:1 "" (FType example.lat:1:1 (Int example.lat:1:1) []) (QIdent example.lat:1:1 (IRTargetRefName "String") (IRTargetRefName "length")),MthdDef example.lat:1:1 "" (FType example.lat:1:1 (Int example.lat:1:1) [Ref example.lat:1:1 (Cl example.lat:1:1 (IRTargetRefName "String")),Int example.lat:1:1]) (QIdent example.lat:1:1 (IRTargetRefName "String") (IRTargetRefName "indexOf")),MthdDef example.lat:1:1 "" (FType example.lat:1:1 (Ref example.lat:1:1 (Cl example.lat:1:1 (IRTargetRefName "String"))) []) (QIdent example.lat:1:1 (IRTargetRefName "String") (IRTargetRefName "getBytes")),MthdDef example.lat:1:1 "" (FType example.lat:1:1 (Bool example.lat:1:1) [Ref example.lat:1:1 (Cl example.lat:1:1 (IRTargetRefName "String"))]) (QIdent example.lat:1:1 (IRTargetRefName "String") (IRTargetRefName "endsWith")),MthdDef example.lat:1:1 "" (FType example.lat:1:1 (Bool example.lat:1:1) [Ref example.lat:1:1 (Cl example.lat:1:1 (IRTargetRefName "String"))]) (QIdent example.lat:1:1 (IRTargetRefName "String") (IRTargetRefName "startsWith")),MthdDef example.lat:1:1 "" (FType example.lat:1:1 (Ref example.lat:1:1 (Cl example.lat:1:1 (IRTargetRefName "String"))) [Ref example.lat:1:1 (Cl example.lat:1:1 (IRTargetRefName "String")),Ref example.lat:1:1 (Cl example.lat:1:1 (IRTargetRefName "String"))]) (QIdent example.lat:1:1 (IRTargetRefName "String") (IRTargetRefName "concat")),MthdDef example.lat:1:1 "" (FType example.lat:1:1 (Int example.lat:1:1) [Int example.lat:1:1]) (QIdent example.lat:1:1 (IRTargetRefName "String") (IRTargetRefName "charAt")),MthdDef example.lat:1:1 "" (FType example.lat:1:1 (Bool example.lat:1:1) [Ref example.lat:1:1 (Cl example.lat:1:1 (IRTargetRefName "String"))]) (QIdent example.lat:1:1 (IRTargetRefName "~cl_TopLevel") (IRTargetRefName "printString")),MthdDef example.lat:1:1 "" (FType example.lat:1:1 (Bool example.lat:1:1) [Int example.lat:1:1]) (QIdent example.lat:1:1 (IRTargetRefName "~cl_TopLevel") (IRTargetRefName "printInt")),MthdDef example.lat:1:1 "" (FType example.lat:1:1 (Bool example.lat:1:1) [Bool example.lat:1:1]) (QIdent example.lat:1:1 (IRTargetRefName "~cl_TopLevel") (IRTargetRefName "printByte")),MthdDef example.lat:1:1 "" (FType example.lat:1:1 (Bool example.lat:1:1) [Bool example.lat:1:1]) (QIdent example.lat:1:1 (IRTargetRefName "~cl_TopLevel") (IRTargetRefName "printBoolean")),MthdDef example.lat:1:1 "" (FType example.lat:1:1 (Bool example.lat:1:1) [Ref example.lat:1:1 (Cl example.lat:1:1 (IRTargetRefName "Array"))]) (QIdent example.lat:1:1 (IRTargetRefName "~cl_TopLevel") (IRTargetRefName "printBinArray")),MthdDef example.lat:1:1 "" (FType example.lat:1:1 (Ref example.lat:1:1 (Cl example.lat:1:1 (IRTargetRefName "String"))) [Bool example.lat:1:1]) (QIdent example.lat:1:1 (IRTargetRefName "~cl_TopLevel") (IRTargetRefName "byteToString")),MthdDef example.lat:1:1 "" (FType example.lat:1:1 (Ref example.lat:1:1 (Cl example.lat:1:1 (IRTargetRefName "String"))) [Bool example.lat:1:1]) (QIdent example.lat:1:1 (IRTargetRefName "~cl_TopLevel") (IRTargetRefName "boolToString")),MthdDef example.lat:1:1 "" (FType example.lat:1:1 (Ref example.lat:1:1 (Cl example.lat:1:1 (IRTargetRefName "String"))) [Int example.lat:1:1]) (QIdent example.lat:1:1 (IRTargetRefName "~cl_TopLevel") (IRTargetRefName "intToString")),MthdDef example.lat:1:1 "" (FType example.lat:1:1 (Bool example.lat:1:1) [Ref example.lat:1:1 (Cl example.lat:1:1 (IRTargetRefName "Object"))]) (QIdent example.lat:1:1 (IRTargetRefName "~cl_TopLevel") (IRTargetRefName "print")),MthdDef example.lat:1:1 "" (FType example.lat:1:1 (Bool example.lat:1:1) []) (QIdent example.lat:1:1 (IRTargetRefName "~cl_TopLevel") (IRTargetRefName "error")),MthdDef example.lat:1:1 "" (FType example.lat:1:1 (Int example.lat:1:1) []) (QIdent example.lat:1:1 (IRTargetRefName "~cl_TopLevel") (IRTargetRefName "readInt")),MthdDef example.lat:1:1 "" (FType example.lat:1:1 (Ref example.lat:1:1 (Cl example.lat:1:1 (IRTargetRefName "String"))) []) (QIdent example.lat:1:1 (IRTargetRefName "~cl_TopLevel") (IRTargetRefName "readString")),MthdDef example.lat:1:1 "" (FType example.lat:1:1 (Ref example.lat:1:1 (Cl example.lat:1:1 (IRTargetRefName "Object"))) [Ref example.lat:1:1 (Cl example.lat:1:1 (IRTargetRefName "Object")),Ref example.lat:1:1 (Cl example.lat:1:1 (IRTargetRefName "Object"))]) (QIdent example.lat:1:1 (IRTargetRefName "~cl_TopLevel") (IRTargetRefName "__cast")),MthdDef example.lat:1:1 "" (FType example.lat:1:1 (Ref example.lat:1:1 (Arr example.lat:1:1 (Ref example.lat:1:1 (Arr example.lat:1:1 (Ref example.lat:1:1 (Cl example.lat:1:1 (IRTargetRefName "String"))))))) [Ref example.lat:1:19 (Arr example.lat:1:19 (Ref example.lat:1:19 (Arr example.lat:1:19 (Ref example.lat:1:19 (Cl example.lat:1:19 (IRTargetRefName "String")))))),Int example.lat:1:38]) (QIdent example.lat:1:12 (IRTargetRefName "~cl_TopLevel") (IRTargetRefName "resize")),MthdDef example.lat:13:9 "" (FType example.lat:13:9 (Int example.lat:13:9) []) (QIdent example.lat:13:13 (IRTargetRefName "~cl_TopLevel") (IRTargetRefName "main"))]]) [([".L_entry","_WBEG15","_WCOND14","_WEND16"]
".L_entry" -> fromList [IRLabelName "_WCOND14"] <- fromList []
"_WBEG15" -> fromList [IRLabelName "_WCOND14"] <- fromList [IRLabelName "_WCOND14"]
"_WCOND14" -> fromList [IRLabelName "_WBEG15",IRLabelName "_WEND16"] <- fromList [IRLabelName ".L_entry",IRLabelName "_WBEG15"]
"_WEND16" -> fromList [] <- fromList [IRLabelName "_WCOND14"]
,Mthd example.lat:1:1 (Ref example.lat:1:1 (Arr example.lat:1:1 (Ref example.lat:1:1 (Arr example.lat:1:1 (Ref example.lat:1:1 (Cl example.lat:1:1 (IRTargetRefName "String"))))))) (QIdent example.lat:1:12 (IRTargetRefName "~cl_TopLevel") (IRTargetRefName "resize")) [Param example.lat:1:1 (Ref example.lat:1:19 (Arr example.lat:1:19 (Ref example.lat:1:19 (Arr example.lat:1:19 (Ref example.lat:1:19 (Cl example.lat:1:19 (IRTargetRefName "String"))))))) (IRValueName "%a_t_2"),Param example.lat:1:1 (Int example.lat:1:38) (IRValueName "%a_t_3")] [ILabel example.lat:1:1 (IRLabelName ".L_entry"),IEndPhi example.lat:1:1,ILoad example.lat:1:1 (IRValueName "%v_t_2") (PParam example.lat:1:1 (Ref example.lat:1:1 (Ref example.lat:1:19 (Arr example.lat:1:19 (Ref example.lat:1:19 (Arr example.lat:1:19 (Ref example.lat:1:19 (Cl example.lat:1:19 (IRTargetRefName "String")))))))) 0 (IRValueName "%a_t_2")),ILoad example.lat:1:1 (IRValueName "%v_t_3") (PParam example.lat:1:1 (Ref example.lat:1:1 (Int example.lat:1:38)) 1 (IRValueName "%a_t_3")),IVCall example.lat:2:5 (Call example.lat:2:5 (Bool inside standard library) (QIdent example.lat:2:5 (IRTargetRefName "~cl_TopLevel") (IRTargetRefName "print")) [VVal example.lat:2:5 (Ref inside standard library (Cl inside standard library (IRTargetRefName "Object"))) (IRValueName "%v_t_2")] []),ILoad example.lat:3:47 (IRValueName "%v_t_5") (PFld example.lat:3:47 (Ref example.lat:3:47 (Int inside standard library)) (VVal example.lat:3:47 (Cl example.lat:3:47 (IRTargetRefName "Array")) (IRValueName "%v_t_2")) (QIdent example.lat:3:47 (IRTargetRefName "Array") (IRTargetRefName "length"))),IOp example.lat:3:61 (IRValueName "%v_t_6") (VVal example.lat:3:61 (Int example.lat:1:38) (IRValueName "%v_t_3")) (OpAdd example.lat:3:61) (VVal example.lat:3:61 (Int example.lat:1:38) (IRValueName "%v_t_5")),INewArr example.lat:3:34 (IRValueName "%v_t_7") (Ref example.lat:3:38 (Arr example.lat:3:38 (Ref example.lat:3:38 (Cl example.lat:3:38 (IRTargetRefName "String"))))) (VVal example.lat:3:34 (Int example.lat:1:38) (IRValueName "%v_t_6")),ISet example.lat:5:13 (IRValueName "%v_t_12~2") (VInt example.lat:5:13 0),ISet example.lat:5:13 (IRValueName "%v_t_10~2") (VInt example.lat:5:13 0),IJmp example.lat:5:13 (IRLabelName "_WCOND14"),ILabel example.lat:5:13 (IRLabelName "_WCOND14"),IEndPhi example.lat:5:13,ILoad example.lat:5:13 (IRValueName "%v_t_24") (PFld example.lat:5:13 (Ref example.lat:5:13 (Int inside standard library)) (VVal example.lat:5:13 (Ref example.lat:5:13 (Arr example.lat:5:13 (Ref example.lat:5:13 (Arr example.lat:5:13 (Ref example.lat:5:13 (Cl example.lat:5:13 (IRTargetRefName "String"))))))) (IRValueName "%v_t_2")) (QIdent example.lat:5:13 (IRTargetRefName "Array") (IRTargetRefName "length"))),IOp example.lat:5:13 (IRValueName "%v___temp_0") (VVal example.lat:5:13 (Int example.lat:5:13) (IRValueName "%v_t_12~2")) (OpLTH example.lat:5:13) (VVal example.lat:5:13 (Int inside standard library) (IRValueName "%v_t_24")),ICondJmp example.lat:5:13 (VVal example.lat:5:13 (Bool example.lat:5:13) (IRValueName "%v___temp_0")) (IRLabelName "_WBEG15") (IRLabelName "_WEND16"),ILabel example.lat:5:13 (IRLabelName "_WBEG15"),IEndPhi example.lat:5:13,ILoad example.lat:5:13 (IRValueName "%v_t_17") (PElem example.lat:5:13 (Ref example.lat:5:13 (Ref example.lat:1:19 (Arr example.lat:1:19 (Ref example.lat:1:19 (Cl example.lat:1:19 (IRTargetRefName "String")))))) (VVal example.lat:5:13 (Ref example.lat:5:13 (Arr example.lat:5:13 (Ref example.lat:5:13 (Arr example.lat:5:13 (Ref example.lat:5:13 (Cl example.lat:5:13 (IRTargetRefName "String"))))))) (IRValueName "%v_t_2")) (VVal example.lat:5:13 (Int example.lat:5:13) (IRValueName "%v_t_12~2"))),IStore example.lat:6:17 (VVal example.lat:6:17 (Ref example.lat:6:17 (Arr example.lat:6:17 (Ref example.lat:6:17 (Cl example.lat:6:17 (IRTargetRefName "String"))))) (IRValueName "%v_t_17")) (PElem example.lat:6:17 (Ref example.lat:6:17 (Ref example.lat:5:18 (Arr example.lat:5:18 (Ref example.lat:5:18 (Cl example.lat:5:18 (IRTargetRefName "String")))))) (VVal example.lat:6:17 (Ref example.lat:6:17 (Arr example.lat:6:17 (Ref example.lat:6:17 (Arr example.lat:6:17 (Ref example.lat:6:17 (Cl example.lat:6:17 (IRTargetRefName "String"))))))) (IRValueName "%v_t_7")) (VVal example.lat:6:17 (Int example.lat:6:17) (IRValueName "%v_t_10~2"))),IOp example.lat:7:17 (IRValueName "%v_t_20") (VVal example.lat:7:17 (Int example.lat:7:17) (IRValueName "%v_t_10~2")) (OpAdd example.lat:7:17) (VInt example.lat:7:17 1),IVCall example.lat:8:17 (Call example.lat:8:17 (Bool inside standard library) (QIdent example.lat:8:17 (IRTargetRefName "~cl_TopLevel") (IRTargetRefName "print")) [VVal example.lat:8:17 (Ref example.lat:8:17 (Arr example.lat:8:17 (Ref example.lat:8:17 (Cl example.lat:8:17 (IRTargetRefName "String"))))) (IRValueName "%v_t_17")] []),IOp example.lat:5:13 (IRValueName "%v_t_23") (VVal example.lat:5:13 (Int example.lat:5:13) (IRValueName "%v_t_12~2")) (OpAdd example.lat:5:13) (VInt example.lat:5:13 1),ISwap example.lat:5:13 (Int example.lat:5:13) (IRValueName "%v_t_10~2") (IRValueName "%v_t_20"),ISwap example.lat:5:13 (Int example.lat:5:13) (IRValueName "%v_t_12~2") (IRValueName "%v_t_23"),IJmp example.lat:5:13 (IRLabelName "_WCOND14"),ILabel example.lat:5:13 (IRLabelName "_WEND16"),IEndPhi example.lat:5:13,IEndPhi example.lat:1:1,IRet example.lat:1:1 (VVal example.lat:1:1 (Ref example.lat:1:1 (Arr example.lat:1:1 (Ref example.lat:1:1 (Arr example.lat:1:1 (Ref example.lat:1:1 (Cl example.lat:1:1 (IRTargetRefName "String"))))))) (IRValueName "%v_t_7"))],RegisterAllocation {regAlloc = fromList [(IRValueName "%a_t_2",RDI),(IRValueName "%a_t_3",RSI),(IRValueName "%v___temp_0",RCX),(IRValueName "%v_t_10~2",RAX),(IRValueName "%v_t_12~2",R13),(IRValueName "%v_t_17",RCX),(IRValueName "%v_t_2",R12),(IRValueName "%v_t_20",R14),(IRValueName "%v_t_23",R13),(IRValueName "%v_t_24",RCX),(IRValueName "%v_t_3",RBX),(IRValueName "%v_t_5",RAX),(IRValueName "%v_t_6",RAX),(IRValueName "%v_t_7",RBX),(IRValueName "~arg_0_RDI",RDI),(IRValueName "~arg_1_RDI",RDI)], numLocals = 0}),([".L_entry"]
".L_entry" -> fromList [] <- fromList []
,Mthd example.lat:13:9 (Int example.lat:13:9) (QIdent example.lat:13:13 (IRTargetRefName "~cl_TopLevel") (IRTargetRefName "main")) [] [ILabel example.lat:13:9 (IRLabelName ".L_entry"),IEndPhi example.lat:13:9,INewArr example.lat:14:28 (IRValueName "%v_t_26") (Ref example.lat:14:32 (Cl example.lat:14:32 (IRTargetRefName "String"))) (VInt example.lat:14:28 5),INewStr example.lat:15:22 (IRValueName "%v_t_29") "Hello",IAddRef example.lat:15:22 (Ref example.lat:15:22 (Cl example.lat:15:22 (IRTargetRefName "String"))) (VVal example.lat:15:22 (Ref example.lat:15:22 (Cl example.lat:15:22 (IRTargetRefName "String"))) (IRValueName "%v_t_29")) 1,ILoad example.lat:15:13 (IRValueName "%v_c0") (PElem example.lat:15:13 (Ref example.lat:15:13 (Ref example.lat:15:22 (Cl example.lat:15:22 (IRTargetRefName "String")))) (VVal example.lat:15:13 (Ref example.lat:15:13 (Arr example.lat:15:13 (Ref example.lat:15:13 (Cl example.lat:15:13 (IRTargetRefName "String"))))) (IRValueName "%v_t_26")) (VInt example.lat:15:13 0)),IAddRef example.lat:15:13 (Ref example.lat:15:22 (Cl example.lat:15:22 (IRTargetRefName "String"))) (VVal example.lat:15:13 (Ref example.lat:15:22 (Cl example.lat:15:22 (IRTargetRefName "String"))) (IRValueName "%v_c0")) (-1),IAddRef example.lat:15:13 (Ref example.lat:15:22 (Cl example.lat:15:22 (IRTargetRefName "String"))) (VVal example.lat:15:13 (Ref example.lat:15:13 (Cl example.lat:15:13 (IRTargetRefName "String"))) (IRValueName "%v_t_29")) 1,IStore example.lat:15:13 (VVal example.lat:15:13 (Ref example.lat:15:13 (Cl example.lat:15:13 (IRTargetRefName "String"))) (IRValueName "%v_t_29")) (PElem example.lat:15:13 (Ref example.lat:15:13 (Ref example.lat:15:22 (Cl example.lat:15:22 (IRTargetRefName "String")))) (VVal example.lat:15:13 (Ref example.lat:15:13 (Arr example.lat:15:13 (Ref example.lat:15:13 (Cl example.lat:15:13 (IRTargetRefName "String"))))) (IRValueName "%v_t_26")) (VInt example.lat:15:13 0)),IAddRef example.lat:15:13 (Ref example.lat:15:22 (Cl example.lat:15:22 (IRTargetRefName "String"))) (VVal example.lat:15:13 (Ref example.lat:15:22 (Cl example.lat:15:22 (IRTargetRefName "String"))) (IRValueName "%v_t_29")) (-1),ILoad example.lat:16:25 (IRValueName "%v_t_32") (PElem example.lat:16:25 (Ref example.lat:16:25 (Ref example.lat:14:13 (Cl example.lat:14:13 (IRTargetRefName "String")))) (VVal example.lat:16:25 (Ref example.lat:16:25 (Arr example.lat:16:25 (Ref example.lat:16:25 (Cl example.lat:16:25 (IRTargetRefName "String"))))) (IRValueName "%v_t_26")) (VInt example.lat:16:25 0)),IAddRef example.lat:16:25 (Ref example.lat:14:13 (Cl example.lat:14:13 (IRTargetRefName "String"))) (VVal example.lat:16:25 (Ref example.lat:14:13 (Cl example.lat:14:13 (IRTargetRefName "String"))) (IRValueName "%v_t_32")) 1,IVCall example.lat:16:13 (Call example.lat:16:13 (Bool inside standard library) (QIdent example.lat:16:13 (IRTargetRefName "~cl_TopLevel") (IRTargetRefName "printString")) [VVal example.lat:16:13 (Ref inside standard library (Cl inside standard library (IRTargetRefName "String"))) (IRValueName "%v_t_32")] []),IAddRef example.lat:16:13 (Ref example.lat:14:13 (Cl example.lat:14:13 (IRTargetRefName "String"))) (VVal example.lat:16:13 (Ref example.lat:14:13 (Cl example.lat:14:13 (IRTargetRefName "String"))) (IRValueName "%v_t_32")) (-1),INewArr example.lat:17:26 (IRValueName "%v_t_35") (Int example.lat:17:30) (VInt example.lat:17:26 10),IStore example.lat:18:13 (VInt example.lat:18:13 42) (PElem example.lat:18:13 (Ref example.lat:18:13 (Int example.lat:18:23)) (VVal example.lat:18:13 (Ref example.lat:18:13 (Arr example.lat:18:13 (Int example.lat:18:13))) (IRValueName "%v_t_35")) (VInt example.lat:18:13 0)),IStore example.lat:19:13 (VInt example.lat:19:13 69) (PElem example.lat:19:13 (Ref example.lat:19:13 (Int example.lat:19:23)) (VVal example.lat:19:13 (Ref example.lat:19:13 (Arr example.lat:19:13 (Int example.lat:19:13))) (IRValueName "%v_t_35")) (VInt example.lat:19:13 3)),IVCall example.lat:20:13 (Call example.lat:20:13 (Bool inside standard library) (QIdent example.lat:20:13 (IRTargetRefName "~cl_TopLevel") (IRTargetRefName "print")) [VVal example.lat:20:13 (Ref example.lat:20:13 (Arr example.lat:20:13 (Int example.lat:20:13))) (IRValueName "%v_t_35")] []),INewArr example.lat:21:31 (IRValueName "%v_t_43") (Ref example.lat:21:35 (Arr example.lat:21:35 (Ref example.lat:21:35 (Cl example.lat:21:35 (IRTargetRefName "String"))))) (VInt example.lat:21:31 2),INewArr example.lat:22:23 (IRValueName "%v_t_46") (Ref example.lat:22:27 (Cl example.lat:22:27 (IRTargetRefName "String"))) (VInt example.lat:22:23 3),IStore example.lat:22:13 (VVal example.lat:22:13 (Ref example.lat:22:13 (Arr example.lat:22:13 (Ref example.lat:22:13 (Cl example.lat:22:13 (IRTargetRefName "String"))))) (IRValueName "%v_t_46")) (PElem example.lat:22:13 (Ref example.lat:22:13 (Ref example.lat:22:23 (Arr example.lat:22:23 (Ref example.lat:22:27 (Cl example.lat:22:27 (IRTargetRefName "String")))))) (VVal example.lat:22:13 (Ref example.lat:22:13 (Arr example.lat:22:13 (Ref example.lat:22:13 (Arr example.lat:22:13 (Ref example.lat:22:13 (Cl example.lat:22:13 (IRTargetRefName "String"))))))) (IRValueName "%v_t_43")) (VInt example.lat:22:13 0)),INewStr example.lat:23:26 (IRValueName "%v_t_49") "Hello!",IAddRef example.lat:23:26 (Ref example.lat:23:26 (Cl example.lat:23:26 (IRTargetRefName "String"))) (VVal example.lat:23:26 (Ref example.lat:23:26 (Cl example.lat:23:26 (IRTargetRefName "String"))) (IRValueName "%v_t_49")) 1,ILoad example.lat:23:13 (IRValueName "%v_t_51") (PElem example.lat:23:13 (Ref example.lat:23:13 (Ref example.lat:21:13 (Arr example.lat:21:13 (Ref example.lat:21:13 (Cl example.lat:21:13 (IRTargetRefName "String")))))) (VVal example.lat:23:13 (Ref example.lat:23:13 (Arr example.lat:23:13 (Ref example.lat:23:13 (Arr example.lat:23:13 (Ref example.lat:23:13 (Cl example.lat:23:13 (IRTargetRefName "String"))))))) (IRValueName "%v_t_43")) (VInt example.lat:23:13 0)),ILoad example.lat:23:13 (IRValueName "%v_c1") (PElem example.lat:23:13 (Ref example.lat:23:13 (Ref example.lat:23:26 (Cl example.lat:23:26 (IRTargetRefName "String")))) (VVal example.lat:23:13 (Ref example.lat:23:13 (Arr example.lat:23:13 (Ref example.lat:23:26 (Cl example.lat:23:26 (IRTargetRefName "String"))))) (IRValueName "%v_t_51")) (VInt example.lat:23:13 0)),IAddRef example.lat:23:13 (Ref example.lat:23:26 (Cl example.lat:23:26 (IRTargetRefName "String"))) (VVal example.lat:23:13 (Ref example.lat:23:26 (Cl example.lat:23:26 (IRTargetRefName "String"))) (IRValueName "%v_c1")) (-1),IAddRef example.lat:23:13 (Ref example.lat:23:26 (Cl example.lat:23:26 (IRTargetRefName "String"))) (VVal example.lat:23:13 (Ref example.lat:23:13 (Cl example.lat:23:13 (IRTargetRefName "String"))) (IRValueName "%v_t_49")) 1,IStore example.lat:23:13 (VVal example.lat:23:13 (Ref example.lat:23:13 (Cl example.lat:23:13 (IRTargetRefName "String"))) (IRValueName "%v_t_49")) (PElem example.lat:23:13 (Ref example.lat:23:13 (Ref example.lat:23:26 (Cl example.lat:23:26 (IRTargetRefName "String")))) (VVal example.lat:23:13 (Ref example.lat:23:13 (Arr example.lat:23:13 (Ref example.lat:23:26 (Cl example.lat:23:26 (IRTargetRefName "String"))))) (IRValueName "%v_t_51")) (VInt example.lat:23:13 0)),IAddRef example.lat:23:13 (Ref example.lat:23:26 (Cl example.lat:23:26 (IRTargetRefName "String"))) (VVal example.lat:23:13 (Ref example.lat:23:26 (Cl example.lat:23:26 (IRTargetRefName "String"))) (IRValueName "%v_t_49")) (-1),INewStr example.lat:24:26 (IRValueName "%v_t_54") ":D",IAddRef example.lat:24:26 (Ref example.lat:24:26 (Cl example.lat:24:26 (IRTargetRefName "String"))) (VVal example.lat:24:26 (Ref example.lat:24:26 (Cl example.lat:24:26 (IRTargetRefName "String"))) (IRValueName "%v_t_54")) 1,ILoad example.lat:24:13 (IRValueName "%v_t_56") (PElem example.lat:24:13 (Ref example.lat:24:13 (Ref example.lat:21:13 (Arr example.lat:21:13 (Ref example.lat:21:13 (Cl example.lat:21:13 (IRTargetRefName "String")))))) (VVal example.lat:24:13 (Ref example.lat:24:13 (Arr example.lat:24:13 (Ref example.lat:24:13 (Arr example.lat:24:13 (Ref example.lat:24:13 (Cl example.lat:24:13 (IRTargetRefName "String"))))))) (IRValueName "%v_t_43")) (VInt example.lat:24:13 0)),ILoad example.lat:24:13 (IRValueName "%v_c2") (PElem example.lat:24:13 (Ref example.lat:24:13 (Ref example.lat:24:26 (Cl example.lat:24:26 (IRTargetRefName "String")))) (VVal example.lat:24:13 (Ref example.lat:24:13 (Arr example.lat:24:13 (Ref example.lat:24:26 (Cl example.lat:24:26 (IRTargetRefName "String"))))) (IRValueName "%v_t_56")) (VInt example.lat:24:13 2)),IAddRef example.lat:24:13 (Ref example.lat:24:26 (Cl example.lat:24:26 (IRTargetRefName "String"))) (VVal example.lat:24:13 (Ref example.lat:24:26 (Cl example.lat:24:26 (IRTargetRefName "String"))) (IRValueName "%v_c2")) (-1),IAddRef example.lat:24:13 (Ref example.lat:24:26 (Cl example.lat:24:26 (IRTargetRefName "String"))) (VVal example.lat:24:13 (Ref example.lat:24:13 (Cl example.lat:24:13 (IRTargetRefName "String"))) (IRValueName "%v_t_54")) 1,IStore example.lat:24:13 (VVal example.lat:24:13 (Ref example.lat:24:13 (Cl example.lat:24:13 (IRTargetRefName "String"))) (IRValueName "%v_t_54")) (PElem example.lat:24:13 (Ref example.lat:24:13 (Ref example.lat:24:26 (Cl example.lat:24:26 (IRTargetRefName "String")))) (VVal example.lat:24:13 (Ref example.lat:24:13 (Arr example.lat:24:13 (Ref example.lat:24:26 (Cl example.lat:24:26 (IRTargetRefName "String"))))) (IRValueName "%v_t_56")) (VInt example.lat:24:13 2)),IAddRef example.lat:24:13 (Ref example.lat:24:26 (Cl example.lat:24:26 (IRTargetRefName "String"))) (VVal example.lat:24:13 (Ref example.lat:24:26 (Cl example.lat:24:26 (IRTargetRefName "String"))) (IRValueName "%v_t_54")) (-1),INewStr example.lat:25:25 (IRValueName "%v_t_59") "ELO?",IAddRef example.lat:25:25 (Ref example.lat:25:25 (Cl example.lat:25:25 (IRTargetRefName "String"))) (VVal example.lat:25:25 (Ref example.lat:25:25 (Cl example.lat:25:25 (IRTargetRefName "String"))) (IRValueName "%v_t_59")) 1,IVCall example.lat:25:13 (Call example.lat:25:13 (Bool inside standard library) (QIdent example.lat:25:13 (IRTargetRefName "~cl_TopLevel") (IRTargetRefName "printString")) [VVal example.lat:25:13 (Ref inside standard library (Cl inside standard library (IRTargetRefName "String"))) (IRValueName "%v_t_59")] []),IAddRef example.lat:25:13 (Ref example.lat:25:25 (Cl example.lat:25:25 (IRTargetRefName "String"))) (VVal example.lat:25:13 (Ref example.lat:25:25 (Cl example.lat:25:25 (IRTargetRefName "String"))) (IRValueName "%v_t_59")) (-1),IEndPhi example.lat:13:9,IRet example.lat:13:9 (VInt example.lat:13:9 0)],RegisterAllocation {regAlloc = fromList [(IRValueName "%v_c0",RDX),(IRValueName "%v_c1",RDI),(IRValueName "%v_c2",RDX),(IRValueName "%v_t_26",RCX),(IRValueName "%v_t_29",RAX),(IRValueName "%v_t_32",RBX),(IRValueName "%v_t_35",RAX),(IRValueName "%v_t_43",RAX),(IRValueName "%v_t_46",RCX),(IRValueName "%v_t_49",RDX),(IRValueName "%v_t_51",RCX),(IRValueName "%v_t_54",RCX),(IRValueName "%v_t_56",RAX),(IRValueName "%v_t_59",RBX),(IRValueName "~arg_0_RDI",RDI),(IRValueName "~arg_1_RDI",RDI),(IRValueName "~arg_2_RDI",RDI)], numLocals = 0})]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Running correct compiler backend: X64
[94m[Info]    [0m[Reporting.Logs.logInfo#75] generateVTable "Array" START
 [("Object","Object","equals"),("Object","Object","getHashCode"),("Object","Array","toString")] 
 START for chain: 
[IRTargetRefName "Array",IRTargetRefName "Object"]
====

[94m[Info]    [0m[Reporting.Logs.logInfo#75] generateVTable fields: [(IRTargetRefName "equals",(3,"_Object_equals",0)),(IRTargetRefName "getHashCode",(2,"_Object_getHashCode",1)),(IRTargetRefName "toString",(1,"_Array_toString",2))] for chain: [IRTargetRefName "Array",IRTargetRefName "Object"]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] generateVTable "Array" RESULT IS = [(IRTargetRefName "toString",("_Array_toString",0)),(IRTargetRefName "getHashCode",("_Object_getHashCode",8)),(IRTargetRefName "equals",("_Object_equals",16))]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] generateVTable "Object" START
 [("Object","Object","equals"),("Object","Object","getHashCode"),("Object","Object","toString")] 
 START for chain: 
[IRTargetRefName "Object"]
====

[94m[Info]    [0m[Reporting.Logs.logInfo#75] generateVTable fields: [(IRTargetRefName "equals",(3,"_Object_equals",0)),(IRTargetRefName "getHashCode",(2,"_Object_getHashCode",1)),(IRTargetRefName "toString",(1,"_Object_toString",2))] for chain: [IRTargetRefName "Object"]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] generateVTable "Object" RESULT IS = [(IRTargetRefName "toString",("_Object_toString",0)),(IRTargetRefName "getHashCode",("_Object_getHashCode",8)),(IRTargetRefName "equals",("_Object_equals",16))]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] generateVTable "String" START
 [("String","String","charAt"),("Object","String","equals"),("String","String","concat"),("String","String","startsWith"),("String","String","endsWith"),("String","String","getBytes"),("String","String","indexOf"),("String","String","length"),("String","String","substring"),("Object","String","toString"),("Object","String","getHashCode")] 
 START for chain: 
[IRTargetRefName "String",IRTargetRefName "Object"]
====

[94m[Info]    [0m[Reporting.Logs.logInfo#75] generateVTable fields: [(IRTargetRefName "charAt",(1001000,"_String_charAt",0)),(IRTargetRefName "equals",(3,"_String_equals",1)),(IRTargetRefName "concat",(1001002,"_String_concat",2)),(IRTargetRefName "startsWith",(1001003,"_String_startsWith",3)),(IRTargetRefName "endsWith",(1001004,"_String_endsWith",4)),(IRTargetRefName "getBytes",(1001005,"_String_getBytes",5)),(IRTargetRefName "indexOf",(1001006,"_String_indexOf",6)),(IRTargetRefName "length",(1001007,"_String_length",7)),(IRTargetRefName "substring",(1001008,"_String_substring",8)),(IRTargetRefName "toString",(1,"_String_toString",9)),(IRTargetRefName "getHashCode",(2,"_String_getHashCode",10))] for chain: [IRTargetRefName "String",IRTargetRefName "Object"]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] generateVTable "String" RESULT IS = [(IRTargetRefName "toString",("_String_toString",0)),(IRTargetRefName "getHashCode",("_String_getHashCode",8)),(IRTargetRefName "equals",("_String_equals",16)),(IRTargetRefName "charAt",("_String_charAt",24)),(IRTargetRefName "concat",("_String_concat",32)),(IRTargetRefName "startsWith",("_String_startsWith",40)),(IRTargetRefName "endsWith",("_String_endsWith",48)),(IRTargetRefName "getBytes",("_String_getBytes",56)),(IRTargetRefName "indexOf",("_String_indexOf",64)),(IRTargetRefName "length",("_String_length",72)),(IRTargetRefName "substring",("_String_substring",80))]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] generateVTable "~cl_TopLevel" START
 [("","Array","toString"),("","Object","toString"),("","Object","getHashCode"),("","Object","equals"),("","String","equals"),("","String","getHashCode"),("","String","toString"),("","String","substring"),("","String","length"),("","String","indexOf"),("","String","getBytes"),("","String","endsWith"),("","String","startsWith"),("","String","concat"),("","String","charAt"),("","~cl_TopLevel","printString"),("","~cl_TopLevel","printInt"),("","~cl_TopLevel","printByte"),("","~cl_TopLevel","printBoolean"),("","~cl_TopLevel","printBinArray"),("","~cl_TopLevel","byteToString"),("","~cl_TopLevel","boolToString"),("","~cl_TopLevel","intToString"),("","~cl_TopLevel","print"),("","~cl_TopLevel","error"),("","~cl_TopLevel","readInt"),("","~cl_TopLevel","readString"),("","~cl_TopLevel","__cast"),("","~cl_TopLevel","resize"),("","~cl_TopLevel","main")] 
 START for chain: 
[]
====

[94m[Info]    [0m[Reporting.Logs.logInfo#75] generateVTable fields: [(IRTargetRefName "toString",(1,"_Array_toString",0)),(IRTargetRefName "toString",(1,"_Object_toString",1)),(IRTargetRefName "getHashCode",(2,"_Object_getHashCode",2)),(IRTargetRefName "equals",(3,"_Object_equals",3)),(IRTargetRefName "equals",(3,"_String_equals",4)),(IRTargetRefName "getHashCode",(2,"_String_getHashCode",5)),(IRTargetRefName "toString",(1,"_String_toString",6)),(IRTargetRefName "substring",(1000007,"_String_substring",7)),(IRTargetRefName "length",(1000008,"_String_length",8)),(IRTargetRefName "indexOf",(1000009,"_String_indexOf",9)),(IRTargetRefName "getBytes",(1000010,"_String_getBytes",10)),(IRTargetRefName "endsWith",(1000011,"_String_endsWith",11)),(IRTargetRefName "startsWith",(1000012,"_String_startsWith",12)),(IRTargetRefName "concat",(1000013,"_String_concat",13)),(IRTargetRefName "charAt",(1000014,"_String_charAt",14)),(IRTargetRefName "printString",(1000015,"printString",15)),(IRTargetRefName "printInt",(1000016,"printInt",16)),(IRTargetRefName "printByte",(1000017,"printByte",17)),(IRTargetRefName "printBoolean",(1000018,"printBoolean",18)),(IRTargetRefName "printBinArray",(1000019,"printBinArray",19)),(IRTargetRefName "byteToString",(1000020,"byteToString",20)),(IRTargetRefName "boolToString",(1000021,"boolToString",21)),(IRTargetRefName "intToString",(1000022,"intToString",22)),(IRTargetRefName "print",(1000023,"print",23)),(IRTargetRefName "error",(1000024,"error",24)),(IRTargetRefName "readInt",(1000025,"readInt",25)),(IRTargetRefName "readString",(1000026,"readString",26)),(IRTargetRefName "__cast",(1000027,"__cast",27)),(IRTargetRefName "resize",(1000028,"~cl_TopLevel.resize",28)),(IRTargetRefName "main",(1000029,"~cl_TopLevel.main",29))] for chain: []
[94m[Info]    [0m[Reporting.Logs.logInfo#75] generateVTable "~cl_TopLevel" RESULT IS = [(IRTargetRefName "toString",("_Array_toString",0)),(IRTargetRefName "toString",("_Object_toString",8)),(IRTargetRefName "toString",("_String_toString",16)),(IRTargetRefName "getHashCode",("_Object_getHashCode",24)),(IRTargetRefName "getHashCode",("_String_getHashCode",32)),(IRTargetRefName "equals",("_Object_equals",40)),(IRTargetRefName "equals",("_String_equals",48)),(IRTargetRefName "substring",("_String_substring",56)),(IRTargetRefName "length",("_String_length",64)),(IRTargetRefName "indexOf",("_String_indexOf",72)),(IRTargetRefName "getBytes",("_String_getBytes",80)),(IRTargetRefName "endsWith",("_String_endsWith",88)),(IRTargetRefName "startsWith",("_String_startsWith",96)),(IRTargetRefName "concat",("_String_concat",104)),(IRTargetRefName "charAt",("_String_charAt",112)),(IRTargetRefName "printString",("printString",120)),(IRTargetRefName "printInt",("printInt",128)),(IRTargetRefName "printByte",("printByte",136)),(IRTargetRefName "print/usr/bin/ld: /tmp/ccbDKDFe.o: warning: relocation against `_String_getBytes' in read-only section `.rodata'
/usr/bin/ld: warning: creating DT_TEXTREL in a PIE
Boolean",("printBoolean",144)),(IRTargetRefName "printBinArray",("printBinArray",152)),(IRTargetRefName "byteToString",("byteToString",160)),(IRTargetRefName "boolToString",("boolToString",168)),(IRTargetRefName "intToString",("intToString",176)),(IRTargetRefName "print",("print",184)),(IRTargetRefName "error",("error",192)),(IRTargetRefName "readInt",("readInt",200)),(IRTargetRefName "readString",("readString",208)),(IRTargetRefName "__cast",("__cast",216)),(IRTargetRefName "resize",("~cl_TopLevel.resize",224)),(IRTargetRefName "main",("~cl_TopLevel.main",232))]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] emitMethod Fix method stack offsets 24
[94m[Info]    [0m[Reporting.Logs.logInfo#75] emitMethod Fix method stack offsets 40
[94m[Info]    [0m[Reporting.Logs.logInfo#75] optimizeASM.applyRulePass: Perform another rules pass...
[94m[Info]    [0m[Reporting.Logs.logInfo#75] optimizeASM.applyRulePass: Perform another rules pass...
[94m[Info]    [0m[Reporting.Logs.logInfo#75] optimizeASM.applyRulePass: Perform another rules pass...
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Created file: example.s
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Calling backend compile step: X64
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Run GCC for X64 backend to generate './example' executable from object file 'example.o'
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Executing command 'gcc -fPIE -Lsrc/Runtime/dependencies/_built_/lib lib/runtime -l:libunistring.a example.s -o ./example -z noexecstack'
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Command executed successfully.
[94m[Info]    [0m[Reporting.Logs.logInfo#75] X64 compilation of 'example.s' seems to be successfull
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Backend code generation completed successfully example.lat -> ./example
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DONE
