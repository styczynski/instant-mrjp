[94m[Info]    [0m[Reporting.Logs.logInfo#75] Parsing: ./play.lat
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Parsed: ./play.lat
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Transformed: ./play.lat
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Construct inheritance graph
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> string repStr(string s, int n)
{
	string r = "";
	int i = 0;
	while ((i < n))
		{
			r = (r + s);
			i = <implicit>(i + 1);
		}
	return r;
}

int main()
{
	printInt(fac(10));
	printInt(rfac(10));
	printInt(mfac(10));
	printInt(ifac(10));
	string r;
	{
		int n = 10;
		int r = 1;
		while ((n > 0))
			{
				r = (r * n);
				n = <implicit>(n - 1);
			}
		printInt(r);
	}
	string xx = repStr("=", 60);
	printString(xx);
	printString("hello */");
	printString("/* world");
	return 0;
}

int fac(int a)
{
	int r;
	int n;
	r = 1;
	n = a;
	while ((n > 0))
		{
			r = (r * n);
			n = (n + -1);
		}
	return r;
}

int rfac(int n)
{
	if ((n == 0))
		return 1;
	else
		return (n * rfac((n + -1)));
}

int mfac(int n)
{
	if ((n == 0))
		return 1;
	else
		return (n * nfac((n + -1)));
}

int nfac(int n)
{
	if ((n != 0))
		return (mfac((n + -1)) * n);
	else
		return 1;
}

int ifac(int n)
{
	return ifac2f(1, n);
}

int ifac2f(int l, int h)
{
	if ((l == h))
		return l;
	else
		;
	if ((l > h))
		return 1;
	else
		;
	int m;
	m = ((l + h) / 2);
	return (ifac2f(l, m) * ifac2f((m + 1), h));
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> string repStr(string s, int n)
{
	string r = "";
	int i = 0;
	while ((i < n))
		{
			r = (r + s);
			i = <implicit>(i + 1);
		}
	return r;
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> string r = "";
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- string r = "";
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> int i = 0;
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- int i = (int)(0);
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> while ((i < n))
	{
		r = (r + s);
		i = <implicit>(i + 1);
	}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> {
	r = (r + s);
	i = <implicit>(i + 1);
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> {
r = (r + s);
i = <implicit>(i + 1);
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> r = (r + s);
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Assignemnt mapped LEFT ?=> r
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- r = r.concat<"String">(s);
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> i = <implicit>(i + 1);
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Assignemnt mapped LEFT ?=> i
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- i = <implicit>(i + (int)(1));
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- {
r = r.concat<"String">(s);
i = <implicit>(i + (int)(1));
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- {
	r = r.concat<"String">(s);
	i = <implicit>(i + (int)(1));
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- while ((i < n))
	{
		r = r.concat<"String">(s);
		i = <implicit>(i + (int)(1));
	}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> return r;
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- return r;
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- string repStr(string s, int n)
{
	string r = "";
	int i = (int)(0);
	while ((i < n))
		{
			r = r.concat<"String">(s);
			i = <implicit>(i + (int)(1));
		}
	return r;
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> int main()
{
	printInt(fac(10));
	printInt(rfac(10));
	printInt(mfac(10));
	printInt(ifac(10));
	string r;
	{
		int n = 10;
		int r = 1;
		while ((n > 0))
			{
				r = (r * n);
				n = <implicit>(n - 1);
			}
		printInt(r);
	}
	string xx = repStr("=", 60);
	printString(xx);
	printString("hello */");
	printString("/* world");
	return 0;
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> printInt(fac(10));
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGELO App ===> FunT inside standard library (VoidT inside standard library) [IntT inside standard library]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGELO App ===> FunT ./play.lat:34:5 (IntT ./play.lat:34:1) [IntT ./play.lat:34:9]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- printInt(fac(10));
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> printInt(rfac(10));
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGELO App ===> FunT inside standard library (VoidT inside standard library) [IntT inside standard library]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGELO App ===> FunT ./play.lat:47:5 (IntT ./play.lat:47:1) [IntT ./play.lat:47:10]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- printInt(rfac(10));
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> printInt(mfac(10));
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGELO App ===> FunT inside standard library (VoidT inside standard library) [IntT inside standard library]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGELO App ===> FunT ./play.lat:54:5 (IntT ./play.lat:54:1) [IntT ./play.lat:54:10]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- printInt(mfac(10));
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> printInt(ifac(10));
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGELO App ===> FunT inside standard library (VoidT inside standard library) [IntT inside standard library]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGELO App ===> FunT ./play.lat:68:5 (IntT ./play.lat:68:1) [IntT ./play.lat:68:10]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- printInt(ifac(10));
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> string r;
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- string r;
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> {
	int n = 10;
	int r = 1;
	while ((n > 0))
		{
			r = (r * n);
			n = <implicit>(n - 1);
		}
	printInt(r);
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> {
int n = 10;
int r = 1;
while ((n > 0))
	{
		r = (r * n);
		n = <implicit>(n - 1);
	}
printInt(r);
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> int n = 10;
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- int n = (int)(10);
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> int r = 1;
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- int r = (int)(1);
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> while ((n > 0))
	{
		r = (r * n);
		n = <implicit>(n - 1);
	}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> {
	r = (r * n);
	n = <implicit>(n - 1);
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> {
r = (r * n);
n = <implicit>(n - 1);
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> r = (r * n);
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Assignemnt mapped LEFT ?=> r
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- r = (r * n);
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> n = <implicit>(n - 1);
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Assignemnt mapped LEFT ?=> n
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- n = <implicit>(n - (int)(1));
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- {
r = (r * n);
n = <implicit>(n - (int)(1));
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- {
	r = (r * n);
	n = <implicit>(n - (int)(1));
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- while ((n > (int)(0)))
	{
		r = (r * n);
		n = <implicit>(n - (int)(1));
	}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> printInt(r);
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGELO App ===> FunT inside standard library (VoidT inside standard library) [IntT inside standard library]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- printInt(r);
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- {
int n = (int)(10);
int r = (int)(1);
while ((n > (int)(0)))
	{
		r = (r * n);
		n = <implicit>(n - (int)(1));
	}
printInt(r);
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- {
	int n = (int)(10);
	int r = (int)(1);
	while ((n > (int)(0)))
		{
			r = (r * n);
			n = <implicit>(n - (int)(1));
		}
	printInt(r);
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> string xx = repStr("=", 60);
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGELO App ===> FunT ./play.lat:2:8 (StringT ./play.lat:2:1) [StringT ./play.lat:2:15,IntT ./play.lat:2:25]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- string xx = repStr("=", 60);
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> printString(xx);
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGELO App ===> FunT inside standard library (VoidT inside standard library) [StringT inside standard library]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- printString(xx);
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> printString("hello */");
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGELO App ===> FunT inside standard library (VoidT inside standard library) [StringT inside standard library]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- printString("hello */");
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> printString("/* world");
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGELO App ===> FunT inside standard library (VoidT inside standard library) [StringT inside standard library]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- printString("/* world");
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> return 0;
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- return (int)(0);
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- int main()
{
	printInt(fac(10));
	printInt(rfac(10));
	printInt(mfac(10));
	printInt(ifac(10));
	string r;
	{
		int n = (int)(10);
		int r = (int)(1);
		while ((n > (int)(0)))
			{
				r = (r * n);
				n = <implicit>(n - (int)(1));
			}
		printInt(r);
	}
	string xx = repStr("=", 60);
	printString(xx);
	printString("hello */");
	printString("/* world");
	return (int)(0);
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> int fac(int a)
{
	int r;
	int n;
	r = 1;
	n = a;
	while ((n > 0))
		{
			r = (r * n);
			n = (n + -1);
		}
	return r;
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> int r;
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- int r;
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> int n;
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- int n;
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> r = 1;
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Assignemnt mapped LEFT ?=> r
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- r = (int)(1);
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> n = a;
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Assignemnt mapped LEFT ?=> n
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- n = a;
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> while ((n > 0))
	{
		r = (r * n);
		n = (n + -1);
	}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> {
	r = (r * n);
	n = (n + -1);
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> {
r = (r * n);
n = (n + -1);
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> r = (r * n);
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Assignemnt mapped LEFT ?=> r
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- r = (r * n);
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> n = (n + -1);
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Assignemnt mapped LEFT ?=> n
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- n = (n + (int)(-1));
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- {
r = (r * n);
n = (n + (int)(-1));
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- {
	r = (r * n);
	n = (n + (int)(-1));
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- while ((n > (int)(0)))
	{
		r = (r * n);
		n = (n + (int)(-1));
	}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> return r;
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- return r;
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- int fac(int a)
{
	int r;
	int n;
	r = (int)(1);
	n = a;
	while ((n > (int)(0)))
		{
			r = (r * n);
			n = (n + (int)(-1));
		}
	return r;
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> int rfac(int n)
{
	if ((n == 0))
		return 1;
	else
		return (n * rfac((n + -1)));
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> if ((n == 0))
	return 1;
else
	return (n * rfac((n + -1)));
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> return 1;
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- return (int)(1);
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> return (n * rfac((n + -1)));
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGELO App ===> FunT ./play.lat:47:5 (IntT ./play.lat:47:1) [IntT ./play.lat:47:10]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- return (n * rfac((n + (int)(-1))));
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- if ((n == (int)(0)))
	return (int)(1);
else
	return (n * rfac((n + (int)(-1))));
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- int rfac(int n)
{
	if ((n == (int)(0)))
		return (int)(1);
	else
		return (n * rfac((n + (int)(-1))));
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> int mfac(int n)
{
	if ((n == 0))
		return 1;
	else
		return (n * nfac((n + -1)));
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> if ((n == 0))
	return 1;
else
	return (n * nfac((n + -1)));
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> return 1;
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- return (int)(1);
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> return (n * nfac((n + -1)));
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGELO App ===> FunT ./play.lat:61:5 (IntT ./play.lat:61:1) [IntT ./play.lat:61:10]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- return (n * nfac((n + (int)(-1))));
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- if ((n == (int)(0)))
	return (int)(1);
else
	return (n * nfac((n + (int)(-1))));
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- int mfac(int n)
{
	if ((n == (int)(0)))
		return (int)(1);
	else
		return (n * nfac((n + (int)(-1))));
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> int nfac(int n)
{
	if ((n != 0))
		return (mfac((n + -1)) * n);
	else
		return 1;
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> if ((n != 0))
	return (mfac((n + -1)) * n);
else
	return 1;
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> return (mfac((n + -1)) * n);
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGELO App ===> FunT ./play.lat:54:5 (IntT ./play.lat:54:1) [IntT ./play.lat:54:10]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- return (mfac((n + (int)(-1))) * n);
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> return 1;
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- return (int)(1);
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- if ((n != (int)(0)))
	return (mfac((n + (int)(-1))) * n);
else
	return (int)(1);
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- int nfac(int n)
{
	if ((n != (int)(0)))
		return (mfac((n + (int)(-1))) * n);
	else
		return (int)(1);
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> int ifac(int n)
{
	return ifac2f(1, n);
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> return ifac2f(1, n);
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGELO App ===> FunT ./play.lat:70:5 (IntT ./play.lat:70:1) [IntT ./play.lat:70:12,IntT ./play.lat:70:19]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- return ifac2f(1, n);
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- int ifac(int n)
{
	return ifac2f(1, n);
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> int ifac2f(int l, int h)
{
	if ((l == h))
		return l;
	else
		;
	if ((l > h))
		return 1;
	else
		;
	int m;
	m = ((l + h) / 2);
	return (ifac2f(l, m) * ifac2f((m + 1), h));
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> if ((l == h))
	return l;
else
	;
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> return l;
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- return l;
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> ;
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- ;
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- if ((l == h))
	return l;
else
	;
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> if ((l > h))
	return 1;
else
	;
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> return 1;
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- return (int)(1);
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> ;
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- ;
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- if ((l > h))
	return (int)(1);
else
	;
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> int m;
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- int m;
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> m = ((l + h) / 2);
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Assignemnt mapped LEFT ?=> m
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- m = ((l + h) / (int)(2));
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> return (ifac2f(l, m) * ifac2f((m + 1), h));
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGELO App ===> FunT ./play.lat:70:5 (IntT ./play.lat:70:1) [IntT ./play.lat:70:12,IntT ./play.lat:70:19]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGELO App ===> FunT ./play.lat:70:5 (IntT ./play.lat:70:1) [IntT ./play.lat:70:12,IntT ./play.lat:70:19]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- return (ifac2f(l, m) * ifac2f((m + (int)(1)), h));
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- int ifac2f(int l, int h)
{
	if ((l == h))
		return l;
	else
		;
	if ((l > h))
		return (int)(1);
	else
		;
	int m;
	m = ((l + h) / (int)(2));
	return (ifac2f(l, m) * ifac2f((m + (int)(1)), h));
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- string repStr(string s, int n)
{
	string r = "";
	int i = (int)(0);
	while ((i < n))
		{
			r = r.concat<"String">(s);
			i = <implicit>(i + (int)(1));
		}
	return r;
}

int main()
{
	printInt(fac(10));
	printInt(rfac(10));
	printInt(mfac(10));
	printInt(ifac(10));
	string r;
	{
		int n = (int)(10);
		int r = (int)(1);
		while ((n > (int)(0)))
			{
				r = (r * n);
				n = <implicit>(n - (int)(1));
			}
		printInt(r);
	}
	string xx = repStr("=", 60);
	printString(xx);
	printString("hello */");
	printString("/* world");
	return (int)(0);
}

int fac(int a)
{
	int r;
	int n;
	r = (int)(1);
	n = a;
	while ((n > (int)(0)))
		{
			r = (r * n);
			n = (n + (int)(-1));
		}
	return r;
}

int rfac(int n)
{
	if ((n == (int)(0)))
		return (int)(1);
	else
		return (n * rfac((n + (int)(-1))));
}

int mfac(int n)
{
	if ((n == (int)(0)))
		return (int)(1);
	else
		return (n * nfac((n + (int)(-1))));
}

int nfac(int n)
{
	if ((n != (int)(0)))
		return (mfac((n + (int)(-1))) * n);
	else
		return (int)(1);
}

int ifac(int n)
{
	return ifac2f(1, n);
}

int ifac2f(int l, int h)
{
	if ((l == h))
		return l;
	else
		;
	if ((l > h))
		return (int)(1);
	else
		;
	int m;
	m = ((l + h) / (int)(2));
	return (ifac2f(l, m) * ifac2f((m + (int)(1)), h));
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Typecheck done./play.lat

string repStr(string s, int n)
{
	string r = "";
	int i = (int)(0);
	while ((i < n))
		{
			r = r.concat<"String">(s);
			i = <implicit>(i + (int)(1));
		}
	return r;
}

int main()
{
	printInt(fac(10));
	printInt(rfac(10));
	printInt(mfac(10));
	printInt(ifac(10));
	string r;
	{
		int n = (int)(10);
		int r = (int)(1);
		while ((n > (int)(0)))
			{
				r = (r * n);
				n = <implicit>(n - (int)(1));
			}
		printInt(r);
	}
	string xx = repStr("=", 60);
	printString(xx);
	printString("hello */");
	printString("/* world");
	return (int)(0);
}

int fac(int a)
{
	int r;
	int n;
	r = (int)(1);
	n = a;
	while ((n > (int)(0)))
		{
			r = (r * n);
			n = (n + (int)(-1));
		}
	return r;
}

int rfac(int n)
{
	if ((n == (int)(0)))
		return (int)(1);
	else
		return (n * rfac((n + (int)(-1))));
}

int mfac(int n)
{
	if ((n == (int)(0)))
		return (int)(1);
	else
		return (n * nfac((n + (int)(-1))));
}

int nfac(int n)
{
	if ((n != (int)(0)))
		return (mfac((n + (int)(-1))) * n);
	else
		return (int)(1);
}

int ifac(int n)
{
	return ifac2f(1, n);
}

int ifac2f(int l, int h)
{
	if ((l == h))
		return l;
	else
		;
	if ((l > h))
		return (int)(1);
	else
		;
	int m;
	m = ((l + h) / (int)(2));
	return (ifac2f(l, m) * ifac2f((m + (int)(1)), h));
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] ConstPropagation.run before:string repStr(string s, int n)
{
	string r = "";
	int i = (int)(0);
	while ((i < n))
		{
			r = r.concat<"String">(s);
			i = <implicit>(i + (int)(1));
		}
	return r;
}

int main()
{
	printInt(fac(10));
	printInt(rfac(10));
	printInt(mfac(10));
	printInt(ifac(10));
	string r;
	{
		int n = (int)(10);
		int r = (int)(1);
		while ((n > (int)(0)))
			{
				r = (r * n);
				n = <implicit>(n - (int)(1));
			}
		printInt(r);
	}
	string xx = repStr("=", 60);
	printString(xx);
	printString("hello */");
	printString("/* world");
	return (int)(0);
}

int fac(int a)
{
	int r;
	int n;
	r = (int)(1);
	n = a;
	while ((n > (int)(0)))
		{
			r = (r * n);
			n = (n + (int)(-1));
		}
	return r;
}

int rfac(int n)
{
	if ((n == (int)(0)))
		return (int)(1);
	else
		return (n * rfac((n + (int)(-1))));
}

int mfac(int n)
{
	if ((n == (int)(0)))
		return (int)(1);
	else
		return (n * nfac((n + (int)(-1))));
}

int nfac(int n)
{
	if ((n != (int)(0)))
		return (mfac((n + (int)(-1))) * n);
	else
		return (int)(1);
}

int ifac(int n)
{
	return ifac2f(1, n);
}

int ifac2f(int l, int h)
{
	if ((l == h))
		return l;
	else
		;
	if ((l > h))
		return (int)(1);
	else
		;
	int m;
	m = ((l + h) / (int)(2));
	return (ifac2f(l, m) * ifac2f((m + (int)(1)), h));
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP Before doNormalizeScope(Syntax.Program) string repStr(string s, int n)
{
	string r = "";
	int i = (int)(0);
	while ((i < n))
		{
			r = r.concat<"String">(s);
			i = <implicit>(i + (int)(1));
		}
	return r;
}

int main()
{
	printInt(fac(10));
	printInt(rfac(10));
	printInt(mfac(10));
	printInt(ifac(10));
	string r;
	{
		int n = (int)(10);
		int r = (int)(1);
		while ((n > (int)(0)))
			{
				r = (r * n);
				n = <implicit>(n - (int)(1));
			}
		printInt(r);
	}
	string xx = repStr("=", 60);
	printString(xx);
	printString("hello */");
	printString("/* world");
	return (int)(0);
}

int fac(int a)
{
	int r;
	int n;
	r = (int)(1);
	n = a;
	while ((n > (int)(0)))
		{
			r = (r * n);
			n = (n + (int)(-1));
		}
	return r;
}

int rfac(int n)
{
	if ((n == (int)(0)))
		return (int)(1);
	else
		return (n * rfac((n + (int)(-1))));
}

int mfac(int n)
{
	if ((n == (int)(0)))
		return (int)(1);
	else
		return (n * nfac((n + (int)(-1))));
}

int nfac(int n)
{
	if ((n != (int)(0)))
		return (mfac((n + (int)(-1))) * n);
	else
		return (int)(1);
}

int ifac(int n)
{
	return ifac2f(1, n);
}

int ifac2f(int l, int h)
{
	if ((l == h))
		return l;
	else
		;
	if ((l > h))
		return (int)(1);
	else
		;
	int m;
	m = ((l + h) / (int)(2));
	return (ifac2f(l, m) * ifac2f((m + (int)(1)), h));
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP After doNormalizeScope(Syntax.Program) string repStr(string _var_1000001#s, int _var_1000002#n)
{
	string _var_1000004#r = "";
	int _var_1000005#i = (int)(0);
	while ((_var_1000005#i < _var_1000002#n))
		{
			_var_1000004#r = _var_1000004#r.concat<"String">(_var_1000001#s);
			_var_1000005#i = <implicit>(_var_1000005#i + (int)(1));
		}
	return _var_1000004#r;
}

int main()
{
	printInt(fac(10));
	printInt(rfac(10));
	printInt(mfac(10));
	printInt(ifac(10));
	string _var_1000014#r;
	int _var_1000016#n = (int)(10);
	int _var_1000017#r = (int)(1);
	while ((_var_1000016#n > (int)(0)))
		{
			_var_1000017#r = (_var_1000017#r * _var_1000016#n);
			_var_1000016#n = <implicit>(_var_1000016#n - (int)(1));
		}
	printInt(_var_1000017#r);
	string _var_1000023#xx = repStr("=", 60);
	printString(_var_1000023#xx);
	printString("hello */");
	printString("/* world");
	return (int)(0);
}

int fac(int _var_1000027#a)
{
	int _var_1000029#r;
	int _var_1000030#n;
	_var_1000029#r = (int)(1);
	_var_1000030#n = _var_1000027#a;
	while ((_var_1000030#n > (int)(0)))
		{
			_var_1000029#r = (_var_1000029#r * _var_1000030#n);
			_var_1000030#n = (_var_1000030#n + (int)(-1));
		}
	return _var_1000029#r;
}

int rfac(int _var_1000038#n)
{
	if ((_var_1000038#n == (int)(0)))
		return (int)(1);
	else
		return (_var_1000038#n * rfac((_var_1000038#n + (int)(-1))));
}

int mfac(int _var_1000043#n)
{
	if ((_var_1000043#n == (int)(0)))
		return (int)(1);
	else
		return (_var_1000043#n * nfac((_var_1000043#n + (int)(-1))));
}

int nfac(int _var_1000048#n)
{
	if ((_var_1000048#n != (int)(0)))
		return (mfac((_var_1000048#n + (int)(-1))) * _var_1000048#n);
	else
		return (int)(1);
}

int ifac(int _var_1000053#n)
{
	return ifac2f(1, _var_1000053#n);
}

int ifac2f(int _var_1000058#l, int _var_1000059#h)
{
	if ((_var_1000058#l == _var_1000059#h))
		return _var_1000058#l;
	else
		;
	if ((_var_1000058#l > _var_1000059#h))
		return (int)(1);
	else
		;
	int _var_1000061#m;
	_var_1000061#m = ((_var_1000058#l + _var_1000059#h) / (int)(2));
	return (ifac2f(_var_1000058#l, _var_1000061#m) * ifac2f((_var_1000061#m + (int)(1)), _var_1000059#h));
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000004#r] ~> False
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000005#i] ~> False
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000017#r] ~> False
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000016#n] ~> False
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000029#r] ~> True
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000030#n] ~> True
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000029#r] ~> False
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000030#n] ~> False
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000061#m] ~> True
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000004#r] ~> False
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000005#i] ~> False
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000017#r] ~> False
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000016#n] ~> False
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000029#r] ~> True
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000030#n] ~> True
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000029#r] ~> False
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000030#n] ~> False
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000061#m] ~> True
[94m[Info]    [0m[Reporting.Logs.logInfo#75] ConstPropagation.run after:string repStr(string _var_1000001#s, int _var_1000002#n)
{
	string _var_1000004#r = "";
	int _var_1000005#i = 0;
	while ((_var_1000005#i < _var_1000002#n))
		{
			_var_1000004#r = _var_1000004#r.concat<"String">(_var_1000001#s);
			_var_1000005#i = <implicit>(1 + _var_1000005#i);
		}
	return _var_1000004#r;
}

int main()
{
	printInt(fac(10));
	printInt(rfac(10));
	printInt(mfac(10));
	printInt(ifac(10));
	string _var_1000014#r = null;
	int _var_1000016#n = 10;
	int _var_1000017#r = 1;
	while ((_var_1000016#n > 0))
		{
			_var_1000017#r = (_var_1000017#r * _var_1000016#n);
			_var_1000016#n = <implicit>(_var_1000016#n - 1);
		}
	printInt(_var_1000017#r);
	string _var_1000023#xx = repStr("=", 60);
	printString(_var_1000023#xx);
	printString("hello */");
	printString("/* world");
	return 0;
}

int fac(int _var_1000027#a)
{
	int _var_1000029#r = 0;
	int _var_1000030#n = 0;
	_var_1000029#r = 1;
	_var_1000030#n = _var_1000027#a;
	while ((_var_1000030#n > 0))
		{
			_var_1000029#r = (_var_1000029#r * _var_1000030#n);
			_var_1000030#n = (-1 + _var_1000030#n);
		}
	return _var_1000029#r;
}

int rfac(int _var_1000038#n)
{
	if ((_var_1000038#n == 0))
		return 1;
	else
		return (_var_1000038#n * rfac((-1 + _var_1000038#n)));
}

int mfac(int _var_1000043#n)
{
	if ((_var_1000043#n == 0))
		return 1;
	else
		return (_var_1000043#n * nfac((-1 + _var_1000043#n)));
}

int nfac(int _var_1000048#n)
{
	if ((_var_1000048#n != 0))
		return (_var_1000048#n * mfac((-1 + _var_1000048#n)));
	else
		return 1;
}

int ifac(int _var_1000053#n)
{
	return ifac2f(1, _var_1000053#n);
}

int ifac2f(int _var_1000058#l, int _var_1000059#h)
{
	if ((_var_1000058#l == _var_1000059#h))
		return _var_1000058#l;
	else
		;
	if ((_var_1000058#l > _var_1000059#h))
		return 1;
	else
		;
	int _var_1000061#m = 0;
	_var_1000061#m = ((_var_1000058#l + _var_1000059#h) / 2);
	return (ifac2f(_var_1000058#l, _var_1000061#m) * ifac2f((1 + _var_1000061#m), _var_1000059#h));
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Optimizing AST round 1 (took 47 ms)
[94m[Info]    [0m[Reporting.Logs.logInfo#75] ConstPropagation.run before:string repStr(string _var_1000001#s, int _var_1000002#n)
{
	string _var_1000004#r = "";
	int _var_1000005#i = 0;
	while ((_var_1000005#i < _var_1000002#n))
		{
			_var_1000004#r = _var_1000004#r.concat<"String">(_var_1000001#s);
			_var_1000005#i = <implicit>(1 + _var_1000005#i);
		}
	return _var_1000004#r;
}

int main()
{
	printInt(fac(10));
	printInt(rfac(10));
	printInt(mfac(10));
	printInt(ifac(10));
	string _var_1000014#r = null;
	int _var_1000016#n = 10;
	int _var_1000017#r = 1;
	while ((_var_1000016#n > 0))
		{
			_var_1000017#r = (_var_1000017#r * _var_1000016#n);
			_var_1000016#n = <implicit>(_var_1000016#n - 1);
		}
	printInt(_var_1000017#r);
	string _var_1000023#xx = repStr("=", 60);
	printString(_var_1000023#xx);
	printString("hello */");
	printString("/* world");
	return 0;
}

int fac(int _var_1000027#a)
{
	int _var_1000029#r = 0;
	int _var_1000030#n = 0;
	_var_1000029#r = 1;
	_var_1000030#n = _var_1000027#a;
	while ((_var_1000030#n > 0))
		{
			_var_1000029#r = (_var_1000029#r * _var_1000030#n);
			_var_1000030#n = (-1 + _var_1000030#n);
		}
	return _var_1000029#r;
}

int rfac(int _var_1000038#n)
{
	if ((_var_1000038#n == 0))
		return 1;
	else
		return (_var_1000038#n * rfac((-1 + _var_1000038#n)));
}

int mfac(int _var_1000043#n)
{
	if ((_var_1000043#n == 0))
		return 1;
	else
		return (_var_1000043#n * nfac((-1 + _var_1000043#n)));
}

int nfac(int _var_1000048#n)
{
	if ((_var_1000048#n != 0))
		return (_var_1000048#n * mfac((-1 + _var_1000048#n)));
	else
		return 1;
}

int ifac(int _var_1000053#n)
{
	return ifac2f(1, _var_1000053#n);
}

int ifac2f(int _var_1000058#l, int _var_1000059#h)
{
	if ((_var_1000058#l == _var_1000059#h))
		return _var_1000058#l;
	else
		;
	if ((_var_1000058#l > _var_1000059#h))
		return 1;
	else
		;
	int _var_1000061#m = 0;
	_var_1000061#m = ((_var_1000058#l + _var_1000059#h) / 2);
	return (ifac2f(_var_1000058#l, _var_1000061#m) * ifac2f((1 + _var_1000061#m), _var_1000059#h));
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP Before doNormalizeScope(Syntax.Program) string repStr(string _var_1000001#s, int _var_1000002#n)
{
	string _var_1000004#r = "";
	int _var_1000005#i = 0;
	while ((_var_1000005#i < _var_1000002#n))
		{
			_var_1000004#r = _var_1000004#r.concat<"String">(_var_1000001#s);
			_var_1000005#i = <implicit>(1 + _var_1000005#i);
		}
	return _var_1000004#r;
}

int main()
{
	printInt(fac(10));
	printInt(rfac(10));
	printInt(mfac(10));
	printInt(ifac(10));
	string _var_1000014#r = null;
	int _var_1000016#n = 10;
	int _var_1000017#r = 1;
	while ((_var_1000016#n > 0))
		{
			_var_1000017#r = (_var_1000017#r * _var_1000016#n);
			_var_1000016#n = <implicit>(_var_1000016#n - 1);
		}
	printInt(_var_1000017#r);
	string _var_1000023#xx = repStr("=", 60);
	printString(_var_1000023#xx);
	printString("hello */");
	printString("/* world");
	return 0;
}

int fac(int _var_1000027#a)
{
	int _var_1000029#r = 0;
	int _var_1000030#n = 0;
	_var_1000029#r = 1;
	_var_1000030#n = _var_1000027#a;
	while ((_var_1000030#n > 0))
		{
			_var_1000029#r = (_var_1000029#r * _var_1000030#n);
			_var_1000030#n = (-1 + _var_1000030#n);
		}
	return _var_1000029#r;
}

int rfac(int _var_1000038#n)
{
	if ((_var_1000038#n == 0))
		return 1;
	else
		return (_var_1000038#n * rfac((-1 + _var_1000038#n)));
}

int mfac(int _var_1000043#n)
{
	if ((_var_1000043#n == 0))
		return 1;
	else
		return (_var_1000043#n * nfac((-1 + _var_1000043#n)));
}

int nfac(int _var_1000048#n)
{
	if ((_var_1000048#n != 0))
		return (_var_1000048#n * mfac((-1 + _var_1000048#n)));
	else
		return 1;
}

int ifac(int _var_1000053#n)
{
	return ifac2f(1, _var_1000053#n);
}

int ifac2f(int _var_1000058#l, int _var_1000059#h)
{
	if ((_var_1000058#l == _var_1000059#h))
		return _var_1000058#l;
	else
		;
	if ((_var_1000058#l > _var_1000059#h))
		return 1;
	else
		;
	int _var_1000061#m = 0;
	_var_1000061#m = ((_var_1000058#l + _var_1000059#h) / 2);
	return (ifac2f(_var_1000058#l, _var_1000061#m) * ifac2f((1 + _var_1000061#m), _var_1000059#h));
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP After doNormalizeScope(Syntax.Program) string repStr(string _var_1000001#s, int _var_1000002#n)
{
	string _var_1000004#r = "";
	int _var_1000005#i = 0;
	while ((_var_1000005#i < _var_1000002#n))
		{
			_var_1000004#r = _var_1000004#r.concat<"String">(_var_1000001#s);
			_var_1000005#i = <implicit>(1 + _var_1000005#i);
		}
	return _var_1000004#r;
}

int main()
{
	printInt(fac(10));
	printInt(rfac(10));
	printInt(mfac(10));
	printInt(ifac(10));
	string _var_1000014#r = null;
	int _var_1000015#n = 10;
	int _var_1000016#r = 1;
	while ((_var_1000015#n > 0))
		{
			_var_1000016#r = (_var_1000016#r * _var_1000015#n);
			_var_1000015#n = <implicit>(_var_1000015#n - 1);
		}
	printInt(_var_1000016#r);
	string _var_1000021#xx = repStr("=", 60);
	printString(_var_1000021#xx);
	printString("hello */");
	printString("/* world");
	return 0;
}

int fac(int _var_1000025#a)
{
	int _var_1000027#r = 0;
	int _var_1000028#n = 0;
	_var_1000027#r = 1;
	_var_1000028#n = _var_1000025#a;
	while ((_var_1000028#n > 0))
		{
			_var_1000027#r = (_var_1000027#r * _var_1000028#n);
			_var_1000028#n = (-1 + _var_1000028#n);
		}
	return _var_1000027#r;
}

int rfac(int _var_1000036#n)
{
	if ((_var_1000036#n == 0))
		return 1;
	else
		return (_var_1000036#n * rfac((-1 + _var_1000036#n)));
}

int mfac(int _var_1000041#n)
{
	if ((_var_1000041#n == 0))
		return 1;
	else
		return (_var_1000041#n * nfac((-1 + _var_1000041#n)));
}

int nfac(int _var_1000046#n)
{
	if ((_var_1000046#n != 0))
		return (_var_1000046#n * mfac((-1 + _var_1000046#n)));
	else
		return 1;
}

int ifac(int _var_1000051#n)
{
	return ifac2f(1, _var_1000051#n);
}

int ifac2f(int _var_1000056#l, int _var_1000057#h)
{
	if ((_var_1000056#l == _var_1000057#h))
		return _var_1000056#l;
	else
		;
	if ((_var_1000056#l > _var_1000057#h))
		return 1;
	else
		;
	int _var_1000059#m = 0;
	_var_1000059#m = ((_var_1000056#l + _var_1000057#h) / 2);
	return (ifac2f(_var_1000056#l, _var_1000059#m) * ifac2f((1 + _var_1000059#m), _var_1000057#h));
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000004#r] ~> False
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000005#i] ~> False
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000016#r] ~> False
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000015#n] ~> False
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000027#r] ~> True
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000028#n] ~> True
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000027#r] ~> False
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000028#n] ~> False
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000059#m] ~> True
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000004#r] ~> False
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000005#i] ~> False
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000016#r] ~> False
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000015#n] ~> False
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000027#r] ~> True
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000028#n] ~> True
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000027#r] ~> False
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000028#n] ~> False
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000059#m] ~> True
[94m[Info]    [0m[Reporting.Logs.logInfo#75] ConstPropagation.run after:string repStr(string _var_1000001#s, int _var_1000002#n)
{
	string _var_1000004#r = "";
	int _var_1000005#i = 0;
	while ((_var_1000005#i < _var_1000002#n))
		{
			_var_1000004#r = _var_1000004#r.concat<"String">(_var_1000001#s);
			_var_1000005#i = <implicit>(1 + _var_1000005#i);
		}
	return _var_1000004#r;
}

int main()
{
	printInt(fac(10));
	printInt(rfac(10));
	printInt(mfac(10));
	printInt(ifac(10));
	string _var_1000014#r = null;
	int _var_1000015#n = 10;
	int _var_1000016#r = 1;
	while ((_var_1000015#n > 0))
		{
			_var_1000016#r = (_var_1000016#r * _var_1000015#n);
			_var_1000015#n = <implicit>(_var_1000015#n - 1);
		}
	printInt(_var_1000016#r);
	string _var_1000021#xx = repStr("=", 60);
	printString(_var_1000021#xx);
	printString("hello */");
	printString("/* world");
	return 0;
}

int fac(int _var_1000025#a)
{
	int _var_1000027#r = 0;
	int _var_1000028#n = 0;
	_var_1000027#r = 1;
	_var_1000028#n = _var_1000025#a;
	while ((_var_1000028#n > 0))
		{
			_var_1000027#r = (_var_1000027#r * _var_1000028#n);
			_var_1000028#n = (-1 + _var_1000028#n);
		}
	return _var_1000027#r;
}

int rfac(int _var_1000036#n)
{
	if ((_var_1000036#n == 0))
		return 1;
	else
		return (_var_1000036#n * rfac((-1 + _var_1000036#n)));
}

int mfac(int _var_1000041#n)
{
	if ((_var_1000041#n == 0))
		return 1;
	else
		return (_var_1000041#n * nfac((-1 + _var_1000041#n)));
}

int nfac(int _var_1000046#n)
{
	if ((_var_1000046#n != 0))
		return (_var_1000046#n * mfac((-1 + _var_1000046#n)));
	else
		return 1;
}

int ifac(int _var_1000051#n)
{
	return ifac2f(1, _var_1000051#n);
}

int ifac2f(int _var_1000056#l, int _var_1000057#h)
{
	if ((_var_1000056#l == _var_1000057#h))
		return _var_1000056#l;
	else
		;
	if ((_var_1000056#l > _var_1000057#h))
		return 1;
	else
		;
	int _var_1000059#m = 0;
	_var_1000059#m = ((_var_1000056#l + _var_1000057#h) / 2);
	return (ifac2f(_var_1000056#l, _var_1000059#m) * ifac2f((1 + _var_1000059#m), _var_1000057#h));
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Optimizing AST round 2 (took 50 ms)
[94m[Info]    [0m[Reporting.Logs.logInfo#75] ConstPropagation.run before:string repStr(string _var_1000001#s, int _var_1000002#n)
{
	string _var_1000004#r = "";
	int _var_1000005#i = 0;
	while ((_var_1000005#i < _var_1000002#n))
		{
			_var_1000004#r = _var_1000004#r.concat<"String">(_var_1000001#s);
			_var_1000005#i = <implicit>(1 + _var_1000005#i);
		}
	return _var_1000004#r;
}

int main()
{
	printInt(fac(10));
	printInt(rfac(10));
	printInt(mfac(10));
	printInt(ifac(10));
	string _var_1000014#r = null;
	int _var_1000015#n = 10;
	int _var_1000016#r = 1;
	while ((_var_1000015#n > 0))
		{
			_var_1000016#r = (_var_1000016#r * _var_1000015#n);
			_var_1000015#n = <implicit>(_var_1000015#n - 1);
		}
	printInt(_var_1000016#r);
	string _var_1000021#xx = repStr("=", 60);
	printString(_var_1000021#xx);
	printString("hello */");
	printString("/* world");
	return 0;
}

int fac(int _var_1000025#a)
{
	int _var_1000027#r = 0;
	int _var_1000028#n = 0;
	_var_1000027#r = 1;
	_var_1000028#n = _var_1000025#a;
	while ((_var_1000028#n > 0))
		{
			_var_1000027#r = (_var_1000027#r * _var_1000028#n);
			_var_1000028#n = (-1 + _var_1000028#n);
		}
	return _var_1000027#r;
}

int rfac(int _var_1000036#n)
{
	if ((_var_1000036#n == 0))
		return 1;
	else
		return (_var_1000036#n * rfac((-1 + _var_1000036#n)));
}

int mfac(int _var_1000041#n)
{
	if ((_var_1000041#n == 0))
		return 1;
	else
		return (_var_1000041#n * nfac((-1 + _var_1000041#n)));
}

int nfac(int _var_1000046#n)
{
	if ((_var_1000046#n != 0))
		return (_var_1000046#n * mfac((-1 + _var_1000046#n)));
	else
		return 1;
}

int ifac(int _var_1000051#n)
{
	return ifac2f(1, _var_1000051#n);
}

int ifac2f(int _var_1000056#l, int _var_1000057#h)
{
	if ((_var_1000056#l == _var_1000057#h))
		return _var_1000056#l;
	else
		;
	if ((_var_1000056#l > _var_1000057#h))
		return 1;
	else
		;
	int _var_1000059#m = 0;
	_var_1000059#m = ((_var_1000056#l + _var_1000057#h) / 2);
	return (ifac2f(_var_1000056#l, _var_1000059#m) * ifac2f((1 + _var_1000059#m), _var_1000057#h));
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP Before doNormalizeScope(Syntax.Program) string repStr(string _var_1000001#s, int _var_1000002#n)
{
	string _var_1000004#r = "";
	int _var_1000005#i = 0;
	while ((_var_1000005#i < _var_1000002#n))
		{
			_var_1000004#r = _var_1000004#r.concat<"String">(_var_1000001#s);
			_var_1000005#i = <implicit>(1 + _var_1000005#i);
		}
	return _var_1000004#r;
}

int main()
{
	printInt(fac(10));
	printInt(rfac(10));
	printInt(mfac(10));
	printInt(ifac(10));
	string _var_1000014#r = null;
	int _var_1000015#n = 10;
	int _var_1000016#r = 1;
	while ((_var_1000015#n > 0))
		{
			_var_1000016#r = (_var_1000016#r * _var_1000015#n);
			_var_1000015#n = <implicit>(_var_1000015#n - 1);
		}
	printInt(_var_1000016#r);
	string _var_1000021#xx = repStr("=", 60);
	printString(_var_1000021#xx);
	printString("hello */");
	printString("/* world");
	return 0;
}

int fac(int _var_1000025#a)
{
	int _var_1000027#r = 0;
	int _var_1000028#n = 0;
	_var_1000027#r = 1;
	_var_1000028#n = _var_1000025#a;
	while ((_var_1000028#n > 0))
		{
			_var_1000027#r = (_var_1000027#r * _var_1000028#n);
			_var_1000028#n = (-1 + _var_1000028#n);
		}
	return _var_1000027#r;
}

int rfac(int _var_1000036#n)
{
	if ((_var_1000036#n == 0))
		return 1;
	else
		return (_var_1000036#n * rfac((-1 + _var_1000036#n)));
}

int mfac(int _var_1000041#n)
{
	if ((_var_1000041#n == 0))
		return 1;
	else
		return (_var_1000041#n * nfac((-1 + _var_1000041#n)));
}

int nfac(int _var_1000046#n)
{
	if ((_var_1000046#n != 0))
		return (_var_1000046#n * mfac((-1 + _var_1000046#n)));
	else
		return 1;
}

int ifac(int _var_1000051#n)
{
	return ifac2f(1, _var_1000051#n);
}

int ifac2f(int _var_1000056#l, int _var_1000057#h)
{
	if ((_var_1000056#l == _var_1000057#h))
		return _var_1000056#l;
	else
		;
	if ((_var_1000056#l > _var_1000057#h))
		return 1;
	else
		;
	int _var_1000059#m = 0;
	_var_1000059#m = ((_var_1000056#l + _var_1000057#h) / 2);
	return (ifac2f(_var_1000056#l, _var_1000059#m) * ifac2f((1 + _var_1000059#m), _var_1000057#h));
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP After doNormalizeScope(Syntax.Program) string repStr(string _var_1000001#s, int _var_1000002#n)
{
	string _var_1000004#r = "";
	int _var_1000005#i = 0;
	while ((_var_1000005#i < _var_1000002#n))
		{
			_var_1000004#r = _var_1000004#r.concat<"String">(_var_1000001#s);
			_var_1000005#i = <implicit>(1 + _var_1000005#i);
		}
	return _var_1000004#r;
}

int main()
{
	printInt(fac(10));
	printInt(rfac(10));
	printInt(mfac(10));
	printInt(ifac(10));
	string _var_1000014#r = null;
	int _var_1000015#n = 10;
	int _var_1000016#r = 1;
	while ((_var_1000015#n > 0))
		{
			_var_1000016#r = (_var_1000016#r * _var_1000015#n);
			_var_1000015#n = <implicit>(_var_1000015#n - 1);
		}
	printInt(_var_1000016#r);
	string _var_1000021#xx = repStr("=", 60);
	printString(_var_1000021#xx);
	printString("hello */");
	printString("/* world");
	return 0;
}

int fac(int _var_1000025#a)
{
	int _var_1000027#r = 0;
	int _var_1000028#n = 0;
	_var_1000027#r = 1;
	_var_1000028#n = _var_1000025#a;
	while ((_var_1000028#n > 0))
		{
			_var_1000027#r = (_var_1000027#r * _var_1000028#n);
			_var_1000028#n = (-1 + _var_1000028#n);
		}
	return _var_1000027#r;
}

int rfac(int _var_1000036#n)
{
	if ((_var_1000036#n == 0))
		return 1;
	else
		return (_var_1000036#n * rfac((-1 + _var_1000036#n)));
}

int mfac(int _var_1000041#n)
{
	if ((_var_1000041#n == 0))
		return 1;
	else
		return (_var_1000041#n * nfac((-1 + _var_1000041#n)));
}

int nfac(int _var_1000046#n)
{
	if ((_var_1000046#n != 0))
		return (_var_1000046#n * mfac((-1 + _var_1000046#n)));
	else
		return 1;
}

int ifac(int _var_1000051#n)
{
	return ifac2f(1, _var_1000051#n);
}

int ifac2f(int _var_1000056#l, int _var_1000057#h)
{
	if ((_var_1000056#l == _var_1000057#h))
		return _var_1000056#l;
	else
		;
	if ((_var_1000056#l > _var_1000057#h))
		return 1;
	else
		;
	int _var_1000059#m = 0;
	_var_1000059#m = ((_var_1000056#l + _var_1000057#h) / 2);
	return (ifac2f(_var_1000056#l, _var_1000059#m) * ifac2f((1 + _var_1000059#m), _var_1000057#h));
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000004#r] ~> False
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000005#i] ~> False
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000016#r] ~> False
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000015#n] ~> False
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000027#r] ~> True
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000028#n] ~> True
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000027#r] ~> False
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000028#n] ~> False
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000059#m] ~> True
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000004#r] ~> False
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000005#i] ~> False
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000016#r] ~> False
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000015#n] ~> False
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000027#r] ~> True
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000028#n] ~> True
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000027#r] ~> False
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000028#n] ~> False
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DBGNSCP isInCurrentScope[_var_1000059#m] ~> True
[94m[Info]    [0m[Reporting.Logs.logInfo#75] ConstPropagation.run after:string repStr(string _var_1000001#s, int _var_1000002#n)
{
	string _var_1000004#r = "";
	int _var_1000005#i = 0;
	while ((_var_1000005#i < _var_1000002#n))
		{
			_var_1000004#r = _var_1000004#r.concat<"String">(_var_1000001#s);
			_var_1000005#i = <implicit>(1 + _var_1000005#i);
		}
	return _var_1000004#r;
}

int main()
{
	printInt(fac(10));
	printInt(rfac(10));
	printInt(mfac(10));
	printInt(ifac(10));
	string _var_1000014#r = null;
	int _var_1000015#n = 10;
	int _var_1000016#r = 1;
	while ((_var_1000015#n > 0))
		{
			_var_1000016#r = (_var_1000016#r * _var_1000015#n);
			_var_1000015#n = <implicit>(_var_1000015#n - 1);
		}
	printInt(_var_1000016#r);
	string _var_1000021#xx = repStr("=", 60);
	printString(_var_1000021#xx);
	printString("hello */");
	printString("/* world");
	return 0;
}

int fac(int _var_1000025#a)
{
	int _var_1000027#r = 0;
	int _var_1000028#n = 0;
	_var_1000027#r = 1;
	_var_1000028#n = _var_1000025#a;
	while ((_var_1000028#n > 0))
		{
			_var_1000027#r = (_var_1000027#r * _var_1000028#n);
			_var_1000028#n = (-1 + _var_1000028#n);
		}
	return _var_1000027#r;
}

int rfac(int _var_1000036#n)
{
	if ((_var_1000036#n == 0))
		return 1;
	else
		return (_var_1000036#n * rfac((-1 + _var_1000036#n)));
}

int mfac(int _var_1000041#n)
{
	if ((_var_1000041#n == 0))
		return 1;
	else
		return (_var_1000041#n * nfac((-1 + _var_1000041#n)));
}

int nfac(int _var_1000046#n)
{
	if ((_var_1000046#n != 0))
		return (_var_1000046#n * mfac((-1 + _var_1000046#n)));
	else
		return 1;
}

int ifac(int _var_1000051#n)
{
	return ifac2f(1, _var_1000051#n);
}

int ifac2f(int _var_1000056#l, int _var_1000057#h)
{
	if ((_var_1000056#l == _var_1000057#h))
		return _var_1000056#l;
	else
		;
	if ((_var_1000056#l > _var_1000057#h))
		return 1;
	else
		;
	int _var_1000059#m = 0;
	_var_1000059#m = ((_var_1000056#l + _var_1000057#h) / 2);
	return (ifac2f(_var_1000056#l, _var_1000059#m) * ifac2f((1 + _var_1000059#m), _var_1000057#h));
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Optimizing AST round 3 (took 51 ms)
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Optimization done./play.lat

string repStr(string _var_1000001#s, int _var_1000002#n)
{
	string _var_1000004#r = "";
	int _var_1000005#i = 0;
	while ((_var_1000005#i < _var_1000002#n))
		{
			_var_1000004#r = _var_1000004#r.concat<"String">(_var_1000001#s);
			_var_1000005#i = <implicit>(1 + _var_1000005#i);
		}
	return _var_1000004#r;
}

int main()
{
	printInt(fac(10));
	printInt(rfac(10));
	printInt(mfac(10));
	printInt(ifac(10));
	string _var_1000014#r = null;
	int _var_1000015#n = 10;
	int _var_1000016#r = 1;
	while ((_var_1000015#n > 0))
		{
			_var_1000016#r = (_var_1000016#r * _var_1000015#n);
			_var_1000015#n = <implicit>(_var_1000015#n - 1);
		}
	printInt(_var_1000016#r);
	string _var_1000021#xx = repStr("=", 60);
	printString(_var_1000021#xx);
	printString("hello */");
	printString("/* world");
	return 0;
}

int fac(int _var_1000025#a)
{
	int _var_1000027#r = 0;
	int _var_1000028#n = 0;
	_var_1000027#r = 1;
	_var_1000028#n = _var_1000025#a;
	while ((_var_1000028#n > 0))
		{
			_var_1000027#r = (_var_1000027#r * _var_1000028#n);
			_var_1000028#n = (-1 + _var_1000028#n);
		}
	return _var_1000027#r;
}

int rfac(int _var_1000036#n)
{
	if ((_var_1000036#n == 0))
		return 1;
	else
		return (_var_1000036#n * rfac((-1 + _var_1000036#n)));
}

int mfac(int _var_1000041#n)
{
	if ((_var_1000041#n == 0))
		return 1;
	else
		return (_var_1000041#n * nfac((-1 + _var_1000041#n)));
}

int nfac(int _var_1000046#n)
{
	if ((_var_1000046#n != 0))
		return (_var_1000046#n * mfac((-1 + _var_1000046#n)));
	else
		return 1;
}

int ifac(int _var_1000051#n)
{
	return ifac2f(1, _var_1000051#n);
}

int ifac2f(int _var_1000056#l, int _var_1000057#h)
{
	if ((_var_1000056#l == _var_1000057#h))
		return _var_1000056#l;
	else
		;
	if ((_var_1000056#l > _var_1000057#h))
		return 1;
	else
		;
	int _var_1000059#m = 0;
	_var_1000059#m = ((_var_1000056#l + _var_1000057#h) / 2);
	return (ifac2f(_var_1000056#l, _var_1000059#m) * ifac2f((1 + _var_1000059#m), _var_1000057#h));
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Assign Var ./play.lat:6:5 (Ident ./play.lat:6:5 "_var_1000004#r")
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Assign Var ./play.lat:7:5 (Ident ./play.lat:7:5 "_var_1000005#i")
[94m[Info]    [0m[Reporting.Logs.logInfo#75] transform condition: BinaryOp ./play.lat:5:9 Explicit (Lt ./play.lat:5:10) (Var ./play.lat:5:9 (Ident ./play.lat:5:9 "_var_1000005#i")) (Var ./play.lat:5:11 (Ident ./play.lat:5:11 "_var_1000002#n"))
[94m[Info]    [0m[Reporting.Logs.logInfo#75] APPDET [int]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] APPDET [int]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] APPDET [int]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] APPDET [int]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] APPDET [int]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] APPDET [int]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] APPDET [int]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] APPDET [int]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Assign Var ./play.lat:22:13 (Ident ./play.lat:22:13 "_var_1000016#r")
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Assign Var ./play.lat:23:13 (Ident ./play.lat:23:13 "_var_1000015#n")
[94m[Info]    [0m[Reporting.Logs.logInfo#75] transform condition: BinaryOp ./play.lat:21:18 Explicit (Gt ./play.lat:21:19) (Var ./play.lat:21:18 (Ident ./play.lat:21:18 "_var_1000015#n")) (Lit ./play.lat:21:20 (Int ./play.lat:21:20 0))
[94m[Info]    [0m[Reporting.Logs.logInfo#75] APPDET [int]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] APPDET [obj<String>,int]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] APPDET [obj<String>]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] APPDET [obj<String>]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] APPDET [obj<String>]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Assign Var ./play.lat:38:9 (Ident ./play.lat:38:9 "_var_1000027#r")
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Assign Var ./play.lat:39:9 (Ident ./play.lat:39:9 "_var_1000028#n")
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Assign Var ./play.lat:41:11 (Ident ./play.lat:41:11 "_var_1000027#r")
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Assign Var ./play.lat:42:11 (Ident ./play.lat:42:11 "_var_1000028#n")
[94m[Info]    [0m[Reporting.Logs.logInfo#75] transform condition: BinaryOp ./play.lat:40:16 Explicit (Gt ./play.lat:40:18) (Var ./play.lat:40:16 (Ident ./play.lat:40:16 "_var_1000028#n")) (Lit ./play.lat:40:20 (Int ./play.lat:40:20 0))
[94m[Info]    [0m[Reporting.Logs.logInfo#75] transform condition: BinaryOp ./play.lat:48:13 Explicit (Equ ./play.lat:48:15) (Var ./play.lat:48:13 (Ident ./play.lat:48:13 "_var_1000036#n")) (Lit ./play.lat:48:18 (Int ./play.lat:48:18 0))
[94m[Info]    [0m[Reporting.Logs.logInfo#75] APPDET [int]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] transform condition: BinaryOp ./play.lat:55:13 Explicit (Equ ./play.lat:55:15) (Var ./play.lat:55:13 (Ident ./play.lat:55:13 "_var_1000041#n")) (Lit ./play.lat:55:18 (Int ./play.lat:55:18 0))
[94m[Info]    [0m[Reporting.Logs.logInfo#75] APPDET [int]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] transform condition: BinaryOp ./play.lat:62:13 Explicit (Neq ./play.lat:62:15) (Var ./play.lat:62:13 (Ident ./play.lat:62:13 "_var_1000046#n")) (Lit ./play.lat:62:18 (Int ./play.lat:62:18 0))
[94m[Info]    [0m[Reporting.Logs.logInfo#75] APPDET [int]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] APPDET [int,int]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] transform condition: BinaryOp ./play.lat:71:13 Explicit (Equ ./play.lat:71:15) (Var ./play.lat:71:13 (Ident ./play.lat:71:13 "_var_1000056#l")) (Var ./play.lat:71:18 (Ident ./play.lat:71:18 "_var_1000057#h"))
[94m[Info]    [0m[Reporting.Logs.logInfo#75] transform condition: BinaryOp ./play.lat:73:13 Explicit (Gt ./play.lat:73:15) (Var ./play.lat:73:13 (Ident ./play.lat:73:13 "_var_1000056#l")) (Var ./play.lat:73:17 (Ident ./play.lat:73:17 "_var_1000057#h"))
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Assign Var ./play.lat:76:9 (Ident ./play.lat:76:9 "_var_1000059#m")
[94m[Info]    [0m[Reporting.Logs.logInfo#75] APPDET [int,int]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] APPDET [int,int]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DEBUG COLLECT_FUNCTIONS PROTOTYPES
[94m[Info]    [0m[Reporting.Logs.logInfo#75] [obj<String> repStr(obj<String> t_9, int t_10)
    obj<String> t_12 =     new string _S11
    obj<String> t_13 = <obj<String>>t_12
    int t_14 = <int>0
    int t_15 = <int>t_14
    jump _WCOND16
  _WCOND16:
    jump _WBEG17 if <int>t_15 < <int>t_10 or pass-through to _WEND18
  _WBEG17:
    obj<String> t_19 =     call<method:String, class:concat> t_13(<obj<String>>t_13, <obj<String>>t_9)
    t_13 = <obj<String>>t_19
    int t_20 = <int>1
    int t_21 = <int>t_15 + <int>t_20
    t_15 = <int>t_21
    jump _WCOND16
  _WEND18:
    return <obj<String>>t_13
,int main()
    byte t_22 = <byte>10
    int t_23 =     call<function> fac(<int>t_22)
    byte t_24 =     call<function> printInt(<int>t_23)
    byte t_25 = <byte>10
    int t_26 =     call<function> rfac(<int>t_25)
    byte t_27 =     call<function> printInt(<int>t_26)
    byte t_28 = <byte>10
    int t_29 =     call<function> mfac(<int>t_28)
    byte t_30 =     call<function> printInt(<int>t_29)
    byte t_31 = <byte>10
    int t_32 =     call<function> ifac(<int>t_31)
    byte t_33 =     call<function> printInt(<int>t_32)
    obj<String> t_34 = <obj<String>>null
    obj<String> t_35 = <obj<String>>t_34
    int t_36 = <int>10
    int t_37 = <int>t_36
    int t_38 = <int>1
    int t_39 = <int>t_38
    jump _WCOND40
  _WCOND40:
    int t_46 = <int>0
    jump _WBEG41 if <int>t_37 > <int>t_46 or pass-through to _WEND42
  _WBEG41:
    int t_43 = <int>t_39 * <int>t_37
    t_39 = <int>t_43
    int t_44 = <int>1
    int t_45 = <int>t_37 - <int>t_44
    t_37 = <int>t_45
    jump _WCOND40
  _WEND42:
    byte t_47 =     call<function> printInt(<int>t_39)
    obj<String> t_49 =     new string _S48
    byte t_50 = <byte>60
    obj<String> t_51 =     call<function> repStr(<obj<String>>t_49, <int>t_50)
    obj<String> t_52 = <obj<String>>t_51
    byte t_53 =     call<function> printString(<obj<String>>t_52)
    obj<String> t_55 =     new string _S54
    byte t_56 =     call<function> printString(<obj<String>>t_55)
    obj<String> t_58 =     new string _S57
    byte t_59 =     call<function> printString(<obj<String>>t_58)
    int t_60 = <int>0
    return <int>t_60
,int fac(int t_61)
    int t_62 = <int>0
    int t_63 = <int>t_62
    int t_64 = <int>0
    int t_65 = <int>t_64
    int t_66 = <int>1
    t_63 = <int>t_66
    t_65 = <int>t_61
    jump _WCOND67
  _WCOND67:
    int t_73 = <int>0
    jump _WBEG68 if <int>t_65 > <int>t_73 or pass-through to _WEND69
  _WBEG68:
    int t_70 = <int>t_63 * <int>t_65
    t_63 = <int>t_70
    int t_71 = <int>-1
    int t_72 = <int>t_65 + <int>t_71
    t_65 = <int>t_72
    jump _WCOND67
  _WEND69:
    return <int>t_63
,int rfac(int t_74)
    int t_78 = <int>0
    jump _IIF75 if <int>t_74 == <int>t_78 or pass-through to _IELSE76
  _IIF75:
    int t_79 = <int>1
    return <int>t_79
  _IELSE76:
    int t_80 = <int>-1
    int t_81 = <int>t_74 + <int>t_80
    int t_82 =     call<function> rfac(<int>t_81)
    int t_83 = <int>t_74 * <int>t_82
    return <int>t_83
,int mfac(int t_84)
    int t_88 = <int>0
    jump _IIF85 if <int>t_84 == <int>t_88 or pass-through to _IELSE86
  _IIF85:
    int t_89 = <int>1
    return <int>t_89
  _IELSE86:
    int t_90 = <int>-1
    int t_91 = <int>t_84 + <int>t_90
    int t_92 =     call<function> nfac(<int>t_91)
    int t_93 = <int>t_84 * <int>t_92
    return <int>t_93
,int nfac(int t_94)
    int t_98 = <int>0
    jump _IIF95 if <int>t_94 != <int>t_98 or pass-through to _IELSE96
  _IIF95:
    int t_99 = <int>-1
    int t_100 = <int>t_94 + <int>t_99
    int t_101 =     call<function> mfac(<int>t_100)
    int t_102 = <int>t_94 * <int>t_101
    return <int>t_102
  _IELSE96:
    int t_103 = <int>1
    return <int>t_103
,int ifac(int t_104)
    byte t_105 = <byte>1
    int t_106 =     call<function> ifac2f(<int>t_105, <int>t_104)
    return <int>t_106
,int ifac2f(int t_107, int t_108)
    jump _IIF109 if <int>t_107 == <int>t_108 or pass-through to _IELSE110
  _IIF109:
    return <int>t_107
    jump _IEND111
  _IELSE110:
    jump _IEND111
  _IEND111:
    jump _IIF112 if <int>t_107 > <int>t_108 or pass-through to _IELSE113
  _IIF112:
    int t_115 = <int>1
    return <int>t_115
    jump _IEND114
  _IELSE113:
    jump _IEND114
  _IEND114:
    int t_116 = <int>0
    int t_117 = <int>t_116
    int t_118 = <int>t_107 + <int>t_108
    int t_119 = <int>2
    int t_120 = <int>t_118 / <int>t_119
    t_117 = <int>t_120
    int t_121 =     call<function> ifac2f(<int>t_107, <int>t_117)
    int t_122 = <int>1
    int t_123 = <int>t_117 + <int>t_122
    int t_124 =     call<function> ifac2f(<int>t_123, <int>t_108)
    int t_125 = <int>t_121 * <int>t_124
    return <int>t_125
]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] END DEBUG
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Initial IR: 
struct Array extends [Array, Object]
    field obj<Object> elements;
    field int length;
    field int elementSize;
    method byte Object.equals (_arg_1 obj<Object>)
    method int Object.getHashCode ()
    method obj<String> Array.toString ()

struct Object extends [Object]
    method byte Object.equals (_arg_1 obj<Object>)
    method int Object.getHashCode ()
    method obj<String> Object.toString ()

struct String extends [String, Object]
    method int String.charAt (_arg_1 int)
    method byte String.equals (_arg_1 obj<Object>)
    method obj<String> String.concat (_arg_1 obj<String>)
    method byte String.startsWith (_arg_1 obj<String>)
    method byte String.endsWith (_arg_1 obj<String>)
    method array<byte> String.getBytes ()
    method int String.indexOf (_arg_1 obj<String>, _arg_2 int)
    method int String.length ()
    method obj<String> String.substring (_arg_1 int, _arg_2 int)
    method obj<String> String.toString ()
    method int String.getHashCode ()

obj<String> repStr(obj<String> t_9, int t_10)
    obj<String> t_12 =     new string _S11
    obj<String> t_13 = <obj<String>>t_12
    int t_14 = <int>0
    int t_15 = <int>t_14
    jump _WCOND16
  _WCOND16:
    jump _WBEG17 if <int>t_15 < <int>t_10 or pass-through to _WEND18
  _WBEG17:
    obj<String> t_19 =     call<method:String, class:concat> t_13(<obj<String>>t_13, <obj<String>>t_9)
    t_13 = <obj<String>>t_19
    int t_20 = <int>1
    int t_21 = <int>t_15 + <int>t_20
    t_15 = <int>t_21
    jump _WCOND16
  _WEND18:
    return <obj<String>>t_13

int main()
    byte t_22 = <byte>10
    int t_23 =     call<function> fac(<int>t_22)
    byte t_24 =     call<function> printInt(<int>t_23)
    byte t_25 = <byte>10
    int t_26 =     call<function> rfac(<int>t_25)
    byte t_27 =     call<function> printInt(<int>t_26)
    byte t_28 = <byte>10
    int t_29 =     call<function> mfac(<int>t_28)
    byte t_30 =     call<function> printInt(<int>t_29)
    byte t_31 = <byte>10
    int t_32 =     call<function> ifac(<int>t_31)
    byte t_33 =     call<function> printInt(<int>t_32)
    obj<String> t_34 = <obj<String>>null
    obj<String> t_35 = <obj<String>>t_34
    int t_36 = <int>10
    int t_37 = <int>t_36
    int t_38 = <int>1
    int t_39 = <int>t_38
    jump _WCOND40
  _WCOND40:
    int t_46 = <int>0
    jump _WBEG41 if <int>t_37 > <int>t_46 or pass-through to _WEND42
  _WBEG41:
    int t_43 = <int>t_39 * <int>t_37
    t_39 = <int>t_43
    int t_44 = <int>1
    int t_45 = <int>t_37 - <int>t_44
    t_37 = <int>t_45
    jump _WCOND40
  _WEND42:
    byte t_47 =     call<function> printInt(<int>t_39)
    obj<String> t_49 =     new string _S48
    byte t_50 = <byte>60
    obj<String> t_51 =     call<function> repStr(<obj<String>>t_49, <int>t_50)
    obj<String> t_52 = <obj<String>>t_51
    byte t_53 =     call<function> printString(<obj<String>>t_52)
    obj<String> t_55 =     new string _S54
    byte t_56 =     call<function> printString(<obj<String>>t_55)
    obj<String> t_58 =     new string _S57
    byte t_59 =     call<function> printString(<obj<String>>t_58)
    int t_60 = <int>0
    return <int>t_60

int fac(int t_61)
    int t_62 = <int>0
    int t_63 = <int>t_62
    int t_64 = <int>0
    int t_65 = <int>t_64
    int t_66 = <int>1
    t_63 = <int>t_66
    t_65 = <int>t_61
    jump _WCOND67
  _WCOND67:
    int t_73 = <int>0
    jump _WBEG68 if <int>t_65 > <int>t_73 or pass-through to _WEND69
  _WBEG68:
    int t_70 = <int>t_63 * <int>t_65
    t_63 = <int>t_70
    int t_71 = <int>-1
    int t_72 = <int>t_65 + <int>t_71
    t_65 = <int>t_72
    jump _WCOND67
  _WEND69:
    return <int>t_63

int rfac(int t_74)
    int t_78 = <int>0
    jump _IIF75 if <int>t_74 == <int>t_78 or pass-through to _IELSE76
  _IIF75:
    int t_79 = <int>1
    return <int>t_79
  _IELSE76:
    int t_80 = <int>-1
    int t_81 = <int>t_74 + <int>t_80
    int t_82 =     call<function> rfac(<int>t_81)
    int t_83 = <int>t_74 * <int>t_82
    return <int>t_83

int mfac(int t_84)
    int t_88 = <int>0
    jump _IIF85 if <int>t_84 == <int>t_88 or pass-through to _IELSE86
  _IIF85:
    int t_89 = <int>1
    return <int>t_89
  _IELSE86:
    int t_90 = <int>-1
    int t_91 = <int>t_84 + <int>t_90
    int t_92 =     call<function> nfac(<int>t_91)
    int t_93 = <int>t_84 * <int>t_92
    return <int>t_93

int nfac(int t_94)
    int t_98 = <int>0
    jump _IIF95 if <int>t_94 != <int>t_98 or pass-through to _IELSE96
  _IIF95:
    int t_99 = <int>-1
    int t_100 = <int>t_94 + <int>t_99
    int t_101 =     call<function> mfac(<int>t_100)
    int t_102 = <int>t_94 * <int>t_101
    return <int>t_102
  _IELSE96:
    int t_103 = <int>1
    return <int>t_103

int ifac(int t_104)
    byte t_105 = <byte>1
    int t_106 =     call<function> ifac2f(<int>t_105, <int>t_104)
    return <int>t_106

int ifac2f(int t_107, int t_108)
    jump _IIF109 if <int>t_107 == <int>t_108 or pass-through to _IELSE110
  _IIF109:
    return <int>t_107
    jump _IEND111
  _IELSE110:
    jump _IEND111
  _IEND111:
    jump _IIF112 if <int>t_107 > <int>t_108 or pass-through to _IELSE113
  _IIF112:
    int t_115 = <int>1
    return <int>t_115
    jump _IEND114
  _IELSE113:
    jump _IEND114
  _IEND114:
    int t_116 = <int>0
    int t_117 = <int>t_116
    int t_118 = <int>t_107 + <int>t_108
    int t_119 = <int>2
    int t_120 = <int>t_118 / <int>t_119
    t_117 = <int>t_120
    int t_121 =     call<function> ifac2f(<int>t_107, <int>t_117)
    int t_122 = <int>1
    int t_123 = <int>t_117 + <int>t_122
    int t_124 =     call<function> ifac2f(<int>t_123, <int>t_108)
    int t_125 = <int>t_121 * <int>t_124
    return <int>t_125

data string _S11 = ""
data string _S48 = "="
data string _S54 = "hello */"
data string _S57 = "/* world"
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Running linearizer internal transformation: Value propagator
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Successfully completed internal linearizer transformation: Value propagator
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Running linearizer internal transformation: Expression substituter
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Successfully completed internal linearizer transformation: Expression substituter
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Optimizing IR round 1 (took 0 ms)
[94m[Info]    [0m[Reporting.Logs.logInfo#75] > BEFORE ROUND
struct Array extends [Array, Object]
    field obj<Object> elements;
    field int length;
    field int elementSize;
    method byte Object.equals (_arg_1 obj<Object>)
    method int Object.getHashCode ()
    method obj<String> Array.toString ()

struct Object extends [Object]
    method byte Object.equals (_arg_1 obj<Object>)
    method int Object.getHashCode ()
    method obj<String> Object.toString ()

struct String extends [String, Object]
    method int String.charAt (_arg_1 int)
    method byte String.equals (_arg_1 obj<Object>)
    method obj<String> String.concat (_arg_1 obj<String>)
    method byte String.startsWith (_arg_1 obj<String>)
    method byte String.endsWith (_arg_1 obj<String>)
    method array<byte> String.getBytes ()
    method int String.indexOf (_arg_1 obj<String>, _arg_2 int)
    method int String.length ()
    method obj<String> String.substring (_arg_1 int, _arg_2 int)
    method obj<String> String.toString ()
    method int String.getHashCode ()

obj<String> repStr(obj<String> t_9, int t_10)
    obj<String> t_12 =     new string _S11
    obj<String> t_13 = <obj<String>>t_12
    int t_14 = <int>0
    int t_15 = <int>t_14
    jump _WCOND16
  _WCOND16:
    jump _WBEG17 if <int>t_15 < <int>t_10 or pass-through to _WEND18
  _WBEG17:
    obj<String> t_19 =     call<method:String, class:concat> t_13(<obj<String>>t_13, <obj<String>>t_9)
    t_13 = <obj<String>>t_19
    int t_20 = <int>1
    int t_21 = <int>t_15 + <int>t_20
    t_15 = <int>t_21
    jump _WCOND16
  _WEND18:
    return <obj<String>>t_13

int main()
    byte t_22 = <byte>10
    int t_23 =     call<function> fac(<int>t_22)
    byte t_24 =     call<function> printInt(<int>t_23)
    byte t_25 = <byte>10
    int t_26 =     call<function> rfac(<int>t_25)
    byte t_27 =     call<function> printInt(<int>t_26)
    byte t_28 = <byte>10
    int t_29 =     call<function> mfac(<int>t_28)
    byte t_30 =     call<function> printInt(<int>t_29)
    byte t_31 = <byte>10
    int t_32 =     call<function> ifac(<int>t_31)
    byte t_33 =     call<function> printInt(<int>t_32)
    obj<String> t_34 = <obj<String>>null
    obj<String> t_35 = <obj<String>>t_34
    int t_36 = <int>10
    int t_37 = <int>t_36
    int t_38 = <int>1
    int t_39 = <int>t_38
    jump _WCOND40
  _WCOND40:
    int t_46 = <int>0
    jump _WBEG41 if <int>t_37 > <int>t_46 or pass-through to _WEND42
  _WBEG41:
    int t_43 = <int>t_39 * <int>t_37
    t_39 = <int>t_43
    int t_44 = <int>1
    int t_45 = <int>t_37 - <int>t_44
    t_37 = <int>t_45
    jump _WCOND40
  _WEND42:
    byte t_47 =     call<function> printInt(<int>t_39)
    obj<String> t_49 =     new string _S48
    byte t_50 = <byte>60
    obj<String> t_51 =     call<function> repStr(<obj<String>>t_49, <int>t_50)
    obj<String> t_52 = <obj<String>>t_51
    byte t_53 =     call<function> printString(<obj<String>>t_52)
    obj<String> t_55 =     new string _S54
    byte t_56 =     call<function> printString(<obj<String>>t_55)
    obj<String> t_58 =     new string _S57
    byte t_59 =     call<function> printString(<obj<String>>t_58)
    int t_60 = <int>0
    return <int>t_60

int fac(int t_61)
    int t_62 = <int>0
    int t_63 = <int>t_62
    int t_64 = <int>0
    int t_65 = <int>t_64
    int t_66 = <int>1
    t_63 = <int>t_66
    t_65 = <int>t_61
    jump _WCOND67
  _WCOND67:
    int t_73 = <int>0
    jump _WBEG68 if <int>t_65 > <int>t_73 or pass-through to _WEND69
  _WBEG68:
    int t_70 = <int>t_63 * <int>t_65
    t_63 = <int>t_70
    int t_71 = <int>-1
    int t_72 = <int>t_65 + <int>t_71
    t_65 = <int>t_72
    jump _WCOND67
  _WEND69:
    return <int>t_63

int rfac(int t_74)
    int t_78 = <int>0
    jump _IIF75 if <int>t_74 == <int>t_78 or pass-through to _IELSE76
  _IIF75:
    int t_79 = <int>1
    return <int>t_79
  _IELSE76:
    int t_80 = <int>-1
    int t_81 = <int>t_74 + <int>t_80
    int t_82 =     call<function> rfac(<int>t_81)
    int t_83 = <int>t_74 * <int>t_82
    return <int>t_83

int mfac(int t_84)
    int t_88 = <int>0
    jump _IIF85 if <int>t_84 == <int>t_88 or pass-through to _IELSE86
  _IIF85:
    int t_89 = <int>1
    return <int>t_89
  _IELSE86:
    int t_90 = <int>-1
    int t_91 = <int>t_84 + <int>t_90
    int t_92 =     call<function> nfac(<int>t_91)
    int t_93 = <int>t_84 * <int>t_92
    return <int>t_93

int nfac(int t_94)
    int t_98 = <int>0
    jump _IIF95 if <int>t_94 != <int>t_98 or pass-through to _IELSE96
  _IIF95:
    int t_99 = <int>-1
    int t_100 = <int>t_94 + <int>t_99
    int t_101 =     call<function> mfac(<int>t_100)
    int t_102 = <int>t_94 * <int>t_101
    return <int>t_102
  _IELSE96:
    int t_103 = <int>1
    return <int>t_103

int ifac(int t_104)
    byte t_105 = <byte>1
    int t_106 =     call<function> ifac2f(<int>t_105, <int>t_104)
    return <int>t_106

int ifac2f(int t_107, int t_108)
    jump _IIF109 if <int>t_107 == <int>t_108 or pass-through to _IELSE110
  _IIF109:
    return <int>t_107
    jump _IEND111
  _IELSE110:
    jump _IEND111
  _IEND111:
    jump _IIF112 if <int>t_107 > <int>t_108 or pass-through to _IELSE113
  _IIF112:
    int t_115 = <int>1
    return <int>t_115
    jump _IEND114
  _IELSE113:
    jump _IEND114
  _IEND114:
    int t_116 = <int>0
    int t_117 = <int>t_116
    int t_118 = <int>t_107 + <int>t_108
    int t_119 = <int>2
    int t_120 = <int>t_118 / <int>t_119
    t_117 = <int>t_120
    int t_121 =     call<function> ifac2f(<int>t_107, <int>t_117)
    int t_122 = <int>1
    int t_123 = <int>t_117 + <int>t_122
    int t_124 =     call<function> ifac2f(<int>t_123, <int>t_108)
    int t_125 = <int>t_121 * <int>t_124
    return <int>t_125

data string _S11 = ""
data string _S48 = "="
data string _S54 = "hello */"
data string _S57 = "/* world"
[94m[Info]    [0m[Reporting.Logs.logInfo#75] > AFTER ROUND
struct Array extends [Array, Object]
    field obj<Object> elements;
    field int length;
    field int elementSize;
    method byte Object.equals (_arg_1 obj<Object>)
    method int Object.getHashCode ()
    method obj<String> Array.toString ()

struct Object extends [Object]
    method byte Object.equals (_arg_1 obj<Object>)
    method int Object.getHashCode ()
    method obj<String> Object.toString ()

struct String extends [String, Object]
    method int String.charAt (_arg_1 int)
    method byte String.equals (_arg_1 obj<Object>)
    method obj<String> String.concat (_arg_1 obj<String>)
    method byte String.startsWith (_arg_1 obj<String>)
    method byte String.endsWith (_arg_1 obj<String>)
    method array<byte> String.getBytes ()
    method int String.indexOf (_arg_1 obj<String>, _arg_2 int)
    method int String.length ()
    method obj<String> String.substring (_arg_1 int, _arg_2 int)
    method obj<String> String.toString ()
    method int String.getHashCode ()

obj<String> repStr(obj<String> t_9, int t_10)
    obj<String> t_12 =     new string _S11
    obj<String> t_13 = <obj<String>>t_12
    int t_15 = <int>0
    jump _WCOND16
  _WCOND16:
    jump _WBEG17 if <int>t_15 < <int>t_10 or pass-through to _WEND18
  _WBEG17:
    obj<String> t_19 =     call<method:String, class:concat> t_13(<obj<String>>t_13, <obj<String>>t_9)
    t_13 = <obj<String>>t_19
    int t_21 = <int>t_15 + <int>1
    t_15 = <int>t_21
    jump _WCOND16
  _WEND18:
    return <obj<String>>t_13

int main()
    int t_23 =     call<function> fac(<byte>10)
    discard<byte> call<function> printInt(<int>t_23)
    int t_26 =     call<function> rfac(<byte>10)
    discard<byte> call<function> printInt(<int>t_26)
    int t_29 =     call<function> mfac(<byte>10)
    discard<byte> call<function> printInt(<int>t_29)
    int t_32 =     call<function> ifac(<byte>10)
    discard<byte> call<function> printInt(<int>t_32)
    int t_37 = <int>10
    int t_39 = <int>1
    jump _WCOND40
  _WCOND40:
    jump _WBEG41 if <int>t_37 > <int>0 or pass-through to _WEND42
  _WBEG41:
    int t_43 = <int>t_39 * <int>t_37
    t_39 = <int>t_43
    int t_45 = <int>t_37 - <int>1
    t_37 = <int>t_45
    jump _WCOND40
  _WEND42:
    discard<byte> call<function> printInt(<int>t_39)
    obj<String> t_49 =     new string _S48
    obj<String> t_51 =     call<function> repStr(<obj<String>>t_49, <byte>60)
    obj<String> t_52 = <obj<String>>t_51
    discard<byte> call<function> printString(<obj<String>>t_52)
    obj<String> t_55 =     new string _S54
    discard<byte> call<function> printString(<obj<String>>t_55)
    obj<String> t_58 =     new string _S57
    discard<byte> call<function> printString(<obj<String>>t_58)
    return <int>0

int fac(int t_61)
    int t_63 = <int>0
    int t_65 = <int>0
    t_63 = <int>1
    t_65 = <int>t_61
    jump _WCOND67
  _WCOND67:
    jump _WBEG68 if <int>t_65 > <int>0 or pass-through to _WEND69
  _WBEG68:
    int t_70 = <int>t_63 * <int>t_65
    t_63 = <int>t_70
    int t_72 = <int>t_65 + <int>-1
    t_65 = <int>t_72
    jump _WCOND67
  _WEND69:
    return <int>t_63

int rfac(int t_74)
    jump _IIF75 if <int>t_74 == <int>0 or pass-through to _IELSE76
  _IIF75:
    return <int>1
  _IELSE76:
    int t_81 = <int>t_74 + <int>-1
    int t_82 =     call<function> rfac(<int>t_81)
    int t_83 = <int>t_74 * <int>t_82
    return <int>t_83

int mfac(int t_84)
    jump _IIF85 if <int>t_84 == <int>0 or pass-through to _IELSE86
  _IIF85:
    return <int>1
  _IELSE86:
    int t_91 = <int>t_84 + <int>-1
    int t_92 =     call<function> nfac(<int>t_91)
    int t_93 = <int>t_84 * <int>t_92
    return <int>t_93

int nfac(int t_94)
    jump _IIF95 if <int>t_94 != <int>0 or pass-through to _IELSE96
  _IIF95:
    int t_100 = <int>t_94 + <int>-1
    int t_101 =     call<function> mfac(<int>t_100)
    int t_102 = <int>t_94 * <int>t_101
    return <int>t_102
  _IELSE96:
    return <int>1

int ifac(int t_104)
    int t_106 =     call<function> ifac2f(<byte>1, <int>t_104)
    return <int>t_106

int ifac2f(int t_107, int t_108)
    jump _IIF109 if <int>t_107 == <int>t_108 or pass-through to _IELSE110
  _IIF109:
    return <int>t_107
    jump _IEND111
  _IELSE110:
    jump _IEND111
  _IEND111:
    jump _IIF112 if <int>t_107 > <int>t_108 or pass-through to _IELSE113
  _IIF112:
    return <int>1
    jump _IEND114
  _IELSE113:
    jump _IEND114
  _IEND114:
    int t_117 = <int>0
    int t_118 = <int>t_107 + <int>t_108
    int t_120 = <int>t_118 / <int>2
    t_117 = <int>t_120
    int t_121 =     call<function> ifac2f(<int>t_107, <int>t_117)
    int t_123 = <int>t_117 + <int>1
    int t_124 =     call<function> ifac2f(<int>t_123, <int>t_108)
    int t_125 = <int>t_121 * <int>t_124
    return <int>t_125

data string _S11 = ""
data string _S48 = "="
data string _S54 = "hello */"
data string _S57 = "/* world"
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Running linearizer internal transformation: Value propagator
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Successfully completed internal linearizer transformation: Value propagator
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Running linearizer internal transformation: Expression substituter
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Successfully completed internal linearizer transformation: Expression substituter
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Optimizing IR round 2 (took 4 ms)
[94m[Info]    [0m[Reporting.Logs.logInfo#75] > BEFORE ROUND
struct Array extends [Array, Object]
    field obj<Object> elements;
    field int length;
    field int elementSize;
    method byte Object.equals (_arg_1 obj<Object>)
    method int Object.getHashCode ()
    method obj<String> Array.toString ()

struct Object extends [Object]
    method byte Object.equals (_arg_1 obj<Object>)
    method int Object.getHashCode ()
    method obj<String> Object.toString ()

struct String extends [String, Object]
    method int String.charAt (_arg_1 int)
    method byte String.equals (_arg_1 obj<Object>)
    method obj<String> String.concat (_arg_1 obj<String>)
    method byte String.startsWith (_arg_1 obj<String>)
    method byte String.endsWith (_arg_1 obj<String>)
    method array<byte> String.getBytes ()
    method int String.indexOf (_arg_1 obj<String>, _arg_2 int)
    method int String.length ()
    method obj<String> String.substring (_arg_1 int, _arg_2 int)
    method obj<String> String.toString ()
    method int String.getHashCode ()

obj<String> repStr(obj<String> t_9, int t_10)
    obj<String> t_12 =     new string _S11
    obj<String> t_13 = <obj<String>>t_12
    int t_15 = <int>0
    jump _WCOND16
  _WCOND16:
    jump _WBEG17 if <int>t_15 < <int>t_10 or pass-through to _WEND18
  _WBEG17:
    obj<String> t_19 =     call<method:String, class:concat> t_13(<obj<String>>t_13, <obj<String>>t_9)
    t_13 = <obj<String>>t_19
    int t_21 = <int>t_15 + <int>1
    t_15 = <int>t_21
    jump _WCOND16
  _WEND18:
    return <obj<String>>t_13

int main()
    int t_23 =     call<function> fac(<byte>10)
    discard<byte> call<function> printInt(<int>t_23)
    int t_26 =     call<function> rfac(<byte>10)
    discard<byte> call<function> printInt(<int>t_26)
    int t_29 =     call<function> mfac(<byte>10)
    discard<byte> call<function> printInt(<int>t_29)
    int t_32 =     call<function> ifac(<byte>10)
    discard<byte> call<function> printInt(<int>t_32)
    int t_37 = <int>10
    int t_39 = <int>1
    jump _WCOND40
  _WCOND40:
    jump _WBEG41 if <int>t_37 > <int>0 or pass-through to _WEND42
  _WBEG41:
    int t_43 = <int>t_39 * <int>t_37
    t_39 = <int>t_43
    int t_45 = <int>t_37 - <int>1
    t_37 = <int>t_45
    jump _WCOND40
  _WEND42:
    discard<byte> call<function> printInt(<int>t_39)
    obj<String> t_49 =     new string _S48
    obj<String> t_51 =     call<function> repStr(<obj<String>>t_49, <byte>60)
    obj<String> t_52 = <obj<String>>t_51
    discard<byte> call<function> printString(<obj<String>>t_52)
    obj<String> t_55 =     new string _S54
    discard<byte> call<function> printString(<obj<String>>t_55)
    obj<String> t_58 =     new string _S57
    discard<byte> call<function> printString(<obj<String>>t_58)
    return <int>0

int fac(int t_61)
    int t_63 = <int>0
    int t_65 = <int>0
    t_63 = <int>1
    t_65 = <int>t_61
    jump _WCOND67
  _WCOND67:
    jump _WBEG68 if <int>t_65 > <int>0 or pass-through to _WEND69
  _WBEG68:
    int t_70 = <int>t_63 * <int>t_65
    t_63 = <int>t_70
    int t_72 = <int>t_65 + <int>-1
    t_65 = <int>t_72
    jump _WCOND67
  _WEND69:
    return <int>t_63

int rfac(int t_74)
    jump _IIF75 if <int>t_74 == <int>0 or pass-through to _IELSE76
  _IIF75:
    return <int>1
  _IELSE76:
    int t_81 = <int>t_74 + <int>-1
    int t_82 =     call<function> rfac(<int>t_81)
    int t_83 = <int>t_74 * <int>t_82
    return <int>t_83

int mfac(int t_84)
    jump _IIF85 if <int>t_84 == <int>0 or pass-through to _IELSE86
  _IIF85:
    return <int>1
  _IELSE86:
    int t_91 = <int>t_84 + <int>-1
    int t_92 =     call<function> nfac(<int>t_91)
    int t_93 = <int>t_84 * <int>t_92
    return <int>t_93

int nfac(int t_94)
    jump _IIF95 if <int>t_94 != <int>0 or pass-through to _IELSE96
  _IIF95:
    int t_100 = <int>t_94 + <int>-1
    int t_101 =     call<function> mfac(<int>t_100)
    int t_102 = <int>t_94 * <int>t_101
    return <int>t_102
  _IELSE96:
    return <int>1

int ifac(int t_104)
    int t_106 =     call<function> ifac2f(<byte>1, <int>t_104)
    return <int>t_106

int ifac2f(int t_107, int t_108)
    jump _IIF109 if <int>t_107 == <int>t_108 or pass-through to _IELSE110
  _IIF109:
    return <int>t_107
    jump _IEND111
  _IELSE110:
    jump _IEND111
  _IEND111:
    jump _IIF112 if <int>t_107 > <int>t_108 or pass-through to _IELSE113
  _IIF112:
    return <int>1
    jump _IEND114
  _IELSE113:
    jump _IEND114
  _IEND114:
    int t_117 = <int>0
    int t_118 = <int>t_107 + <int>t_108
    int t_120 = <int>t_118 / <int>2
    t_117 = <int>t_120
    int t_121 =     call<function> ifac2f(<int>t_107, <int>t_117)
    int t_123 = <int>t_117 + <int>1
    int t_124 =     call<function> ifac2f(<int>t_123, <int>t_108)
    int t_125 = <int>t_121 * <int>t_124
    return <int>t_125

data string _S11 = ""
data string _S48 = "="
data string _S54 = "hello */"
data string _S57 = "/* world"
[94m[Info]    [0m[Reporting.Logs.logInfo#75] > AFTER ROUND
struct Array extends [Array, Object]
    field obj<Object> elements;
    field int length;
    field int elementSize;
    method byte Object.equals (_arg_1 obj<Object>)
    method int Object.getHashCode ()
    method obj<String> Array.toString ()

struct Object extends [Object]
    method byte Object.equals (_arg_1 obj<Object>)
    method int Object.getHashCode ()
    method obj<String> Object.toString ()

struct String extends [String, Object]
    method int String.charAt (_arg_1 int)
    method byte String.equals (_arg_1 obj<Object>)
    method obj<String> String.concat (_arg_1 obj<String>)
    method byte String.startsWith (_arg_1 obj<String>)
    method byte String.endsWith (_arg_1 obj<String>)
    method array<byte> String.getBytes ()
    method int String.indexOf (_arg_1 obj<String>, _arg_2 int)
    method int String.length ()
    method obj<String> String.substring (_arg_1 int, _arg_2 int)
    method obj<String> String.toString ()
    method int String.getHashCode ()

obj<String> repStr(obj<String> t_9, int t_10)
    obj<String> t_12 =     new string _S11
    obj<String> t_13 = <obj<String>>t_12
    int t_15 = <int>0
    jump _WCOND16
  _WCOND16:
    jump _WBEG17 if <int>t_15 < <int>t_10 or pass-through to _WEND18
  _WBEG17:
    obj<String> t_19 =     call<method:String, class:concat> t_13(<obj<String>>t_13, <obj<String>>t_9)
    t_13 = <obj<String>>t_19
    int t_21 = <int>t_15 + <int>1
    t_15 = <int>t_21
    jump _WCOND16
  _WEND18:
    return <obj<String>>t_13

int main()
    int t_23 =     call<function> fac(<byte>10)
    discard<byte> call<function> printInt(<int>t_23)
    int t_26 =     call<function> rfac(<byte>10)
    discard<byte> call<function> printInt(<int>t_26)
    int t_29 =     call<function> mfac(<byte>10)
    discard<byte> call<function> printInt(<int>t_29)
    int t_32 =     call<function> ifac(<byte>10)
    discard<byte> call<function> printInt(<int>t_32)
    int t_37 = <int>10
    int t_39 = <int>1
    jump _WCOND40
  _WCOND40:
    jump _WBEG41 if <int>t_37 > <int>0 or pass-through to _WEND42
  _WBEG41:
    int t_43 = <int>t_39 * <int>t_37
    t_39 = <int>t_43
    int t_45 = <int>t_37 - <int>1
    t_37 = <int>t_45
    jump _WCOND40
  _WEND42:
    discard<byte> call<function> printInt(<int>t_39)
    obj<String> t_49 =     new string _S48
    obj<String> t_51 =     call<function> repStr(<obj<String>>t_49, <byte>60)
    obj<String> t_52 = <obj<String>>t_51
    discard<byte> call<function> printString(<obj<String>>t_52)
    obj<String> t_55 =     new string _S54
    discard<byte> call<function> printString(<obj<String>>t_55)
    obj<String> t_58 =     new string _S57
    discard<byte> call<function> printString(<obj<String>>t_58)
    return <int>0

int fac(int t_61)
    int t_63 = <int>0
    int t_65 = <int>0
    t_63 = <int>1
    t_65 = <int>t_61
    jump _WCOND67
  _WCOND67:
    jump _WBEG68 if <int>t_65 > <int>0 or pass-through to _WEND69
  _WBEG68:
    int t_70 = <int>t_63 * <int>t_65
    t_63 = <int>t_70
    int t_72 = <int>t_65 + <int>-1
    t_65 = <int>t_72
    jump _WCOND67
  _WEND69:
    return <int>t_63

int rfac(int t_74)
    jump _IIF75 if <int>t_74 == <int>0 or pass-through to _IELSE76
  _IIF75:
    return <int>1
  _IELSE76:
    int t_81 = <int>t_74 + <int>-1
    int t_82 =     call<function> rfac(<int>t_81)
    int t_83 = <int>t_74 * <int>t_82
    return <int>t_83

int mfac(int t_84)
    jump _IIF85 if <int>t_84 == <int>0 or pass-through to _IELSE86
  _IIF85:
    return <int>1
  _IELSE86:
    int t_91 = <int>t_84 + <int>-1
    int t_92 =     call<function> nfac(<int>t_91)
    int t_93 = <int>t_84 * <int>t_92
    return <int>t_93

int nfac(int t_94)
    jump _IIF95 if <int>t_94 != <int>0 or pass-through to _IELSE96
  _IIF95:
    int t_100 = <int>t_94 + <int>-1
    int t_101 =     call<function> mfac(<int>t_100)
    int t_102 = <int>t_94 * <int>t_101
    return <int>t_102
  _IELSE96:
    return <int>1

int ifac(int t_104)
    int t_106 =     call<function> ifac2f(<byte>1, <int>t_104)
    return <int>t_106

int ifac2f(int t_107, int t_108)
    jump _IIF109 if <int>t_107 == <int>t_108 or pass-through to _IELSE110
  _IIF109:
    return <int>t_107
    jump _IEND111
  _IELSE110:
    jump _IEND111
  _IEND111:
    jump _IIF112 if <int>t_107 > <int>t_108 or pass-through to _IELSE113
  _IIF112:
    return <int>1
    jump _IEND114
  _IELSE113:
    jump _IEND114
  _IEND114:
    int t_117 = <int>0
    int t_118 = <int>t_107 + <int>t_108
    int t_120 = <int>t_118 / <int>2
    t_117 = <int>t_120
    int t_121 =     call<function> ifac2f(<int>t_107, <int>t_117)
    int t_123 = <int>t_117 + <int>1
    int t_124 =     call<function> ifac2f(<int>t_123, <int>t_108)
    int t_125 = <int>t_121 * <int>t_124
    return <int>t_125

data string _S11 = ""
data string _S48 = "="
data string _S54 = "hello */"
data string _S57 = "/* world"
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Running linearizer internal transformation: Convert to FIR
[94m[Info]    [0m[Reporting.Logs.logInfo#75] AST to convert:
struct Array extends [Array, Object]
    field obj<Object> elements;
    field int length;
    field int elementSize;
    method byte Object.equals (_arg_1 obj<Object>)
    method int Object.getHashCode ()
    method obj<String> Array.toString ()

struct Object extends [Object]
    method byte Object.equals (_arg_1 obj<Object>)
    method int Object.getHashCode ()
    method obj<String> Object.toString ()

struct String extends [String, Object]
    method int String.charAt (_arg_1 int)
    method byte String.equals (_arg_1 obj<Object>)
    method obj<String> String.concat (_arg_1 obj<String>)
    method byte String.startsWith (_arg_1 obj<String>)
    method byte String.endsWith (_arg_1 obj<String>)
    method array<byte> String.getBytes ()
    method int String.indexOf (_arg_1 obj<String>, _arg_2 int)
    method int String.length ()
    method obj<String> String.substring (_arg_1 int, _arg_2 int)
    method obj<String> String.toString ()
    method int String.getHashCode ()

obj<String> repStr(obj<String> t_9, int t_10)
    obj<String> t_12 =     new string _S11
    obj<String> t_13 = <obj<String>>t_12
    int t_15 = <int>0
    jump _WCOND16
  _WCOND16:
    jump _WBEG17 if <int>t_15 < <int>t_10 or pass-through to _WEND18
  _WBEG17:
    obj<String> t_19 =     call<method:String, class:concat> t_13(<obj<String>>t_13, <obj<String>>t_9)
    t_13 = <obj<String>>t_19
    int t_21 = <int>t_15 + <int>1
    t_15 = <int>t_21
    jump _WCOND16
  _WEND18:
    return <obj<String>>t_13

int main()
    int t_23 =     call<function> fac(<byte>10)
    discard<byte> call<function> printInt(<int>t_23)
    int t_26 =     call<function> rfac(<byte>10)
    discard<byte> call<function> printInt(<int>t_26)
    int t_29 =     call<function> mfac(<byte>10)
    discard<byte> call<function> printInt(<int>t_29)
    int t_32 =     call<function> ifac(<byte>10)
    discard<byte> call<function> printInt(<int>t_32)
    int t_37 = <int>10
    int t_39 = <int>1
    jump _WCOND40
  _WCOND40:
    jump _WBEG41 if <int>t_37 > <int>0 or pass-through to _WEND42
  _WBEG41:
    int t_43 = <int>t_39 * <int>t_37
    t_39 = <int>t_43
    int t_45 = <int>t_37 - <int>1
    t_37 = <int>t_45
    jump _WCOND40
  _WEND42:
    discard<byte> call<function> printInt(<int>t_39)
    obj<String> t_49 =     new string _S48
    obj<String> t_51 =     call<function> repStr(<obj<String>>t_49, <byte>60)
    obj<String> t_52 = <obj<String>>t_51
    discard<byte> call<function> printString(<obj<String>>t_52)
    obj<String> t_55 =     new string _S54
    discard<byte> call<function> printString(<obj<String>>t_55)
    obj<String> t_58 =     new string _S57
    discard<byte> call<function> printString(<obj<String>>t_58)
    return <int>0

int fac(int t_61)
    int t_63 = <int>0
    int t_65 = <int>0
    t_63 = <int>1
    t_65 = <int>t_61
    jump _WCOND67
  _WCOND67:
    jump _WBEG68 if <int>t_65 > <int>0 or pass-through to _WEND69
  _WBEG68:
    int t_70 = <int>t_63 * <int>t_65
    t_63 = <int>t_70
    int t_72 = <int>t_65 + <int>-1
    t_65 = <int>t_72
    jump _WCOND67
  _WEND69:
    return <int>t_63

int rfac(int t_74)
    jump _IIF75 if <int>t_74 == <int>0 or pass-through to _IELSE76
  _IIF75:
    return <int>1
  _IELSE76:
    int t_81 = <int>t_74 + <int>-1
    int t_82 =     call<function> rfac(<int>t_81)
    int t_83 = <int>t_74 * <int>t_82
    return <int>t_83

int mfac(int t_84)
    jump _IIF85 if <int>t_84 == <int>0 or pass-through to _IELSE86
  _IIF85:
    return <int>1
  _IELSE86:
    int t_91 = <int>t_84 + <int>-1
    int t_92 =     call<function> nfac(<int>t_91)
    int t_93 = <int>t_84 * <int>t_92
    return <int>t_93

int nfac(int t_94)
    jump _IIF95 if <int>t_94 != <int>0 or pass-through to _IELSE96
  _IIF95:
    int t_100 = <int>t_94 + <int>-1
    int t_101 =     call<function> mfac(<int>t_100)
    int t_102 = <int>t_94 * <int>t_101
    return <int>t_102
  _IELSE96:
    return <int>1

int ifac(int t_104)
    int t_106 =     call<function> ifac2f(<byte>1, <int>t_104)
    return <int>t_106

int ifac2f(int t_107, int t_108)
    jump _IIF109 if <int>t_107 == <int>t_108 or pass-through to _IELSE110
  _IIF109:
    return <int>t_107
    jump _IEND111
  _IELSE110:
    jump _IEND111
  _IEND111:
    jump _IIF112 if <int>t_107 > <int>t_108 or pass-through to _IELSE113
  _IIF112:
    return <int>1
    jump _IEND114
  _IELSE113:
    jump _IEND114
  _IEND114:
    int t_117 = <int>0
    int t_118 = <int>t_107 + <int>t_108
    int t_120 = <int>t_118 / <int>2
    t_117 = <int>t_120
    int t_121 =     call<function> ifac2f(<int>t_107, <int>t_117)
    int t_123 = <int>t_117 + <int>1
    int t_124 =     call<function> ifac2f(<int>t_123, <int>t_108)
    int t_125 = <int>t_121 * <int>t_124
    return <int>t_125

data string _S11 = ""
data string _S48 = "="
data string _S54 = "hello */"
data string _S57 = "/* world"
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Successfully completed internal linearizer transformation: Convert to FIR
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Linearizer terminated
[94m[Info]    [0m[Reporting.Logs.logInfo#75] IR conversion done./play.lat

.metadata: [
  .classes: [
    Array  extends [SymIdent "Array", SymIdent "Object"] : [
      .fields: [
        Object & elements;
        int length;
        int elementSize;
      ]
      .methods: [
        int (Object &)Object.equals;
        int () Object.getHashCode;
        String & () Array.toString;
      ]
    ]
    Object  extends [SymIdent "Object"] : [
      .fields: [
        ]
      .methods: [
        int (Object &)Object.equals;
        int () Object.getHashCode;
        String & () Object.toString;
      ]
    ]
    String  extends [SymIdent "String", SymIdent "Object"] : [
      .fields: [
        ]
      .methods: [
        int (int)String.charAt;
        int (Object &)String.equals;
        String & (String &)String.concat;
        int (String &)String.startsWith;
        int (String &)String.endsWith;
        int [] & () String.getBytes;
        int (String &, int)String.indexOf;
        int () String.length;
        String & (int, int)String.substring;
        String & () String.toString;
        int () String.getHashCode;
      ]
    ]
    ~cl_TopLevel  extends [] : [
      .fields: [
        ]
      .methods: [
        Array & () Array.toString;
        Object & () Object.toString;
        int () Object.getHashCode;
        int (Object &)Object.equals;
        int (Object &)String.equals;
        int () String.getHashCode;
        String & () String.toString;
        String & () String.substring;
        int () String.length;
        int (String &, int)String.indexOf;
        String & () String.getBytes;
        int (String &)String.endsWith;
        int (String &)String.startsWith;
        String & (String &, String &)String.concat;
        int (int)String.charAt;
        int (String &)~cl_TopLevel.printString;
        int (int)~cl_TopLevel.printInt;
        int (int)~cl_TopLevel.printByte;
        int (int)~cl_TopLevel.printBoolean;
        int (Array &)~cl_TopLevel.printBinArray;
        String & (int)~cl_TopLevel.byteToString;
        String & (int)~cl_TopLevel.boolToString;
        String & (int)~cl_TopLevel.intToString;
        int (Object &)~cl_TopLevel.print;
        int () ~cl_TopLevel.error;
        int () ~cl_TopLevel.readInt;
        String & () ~cl_TopLevel.readString;
        Object & (Object &, Object &)~cl_TopLevel.__cast;
        String & (String &, int)~cl_TopLevel.repStr;
        int () ~cl_TopLevel.main;
        int (int)~cl_TopLevel.fac;
        int (int)~cl_TopLevel.rfac;
        int (int)~cl_TopLevel.mfac;
        int (int)~cl_TopLevel.nfac;
        int (int)~cl_TopLevel.ifac;
        int (int, int)~cl_TopLevel.ifac2f;
      ]
    ]
  ]
]
.method String & ~cl_TopLevel.repStr (String & %a_t_9, int %a_t_10): [
.L_entry:
  %v_t_9 := load String & & param 0 %a_t_9;
  %v_t_10 := load int & param 1 %a_t_10;
  %v_t_12 := newstr "";
  %v_t_13 := String & %v_t_12;
  %v_t_15 := 0;
  jump _WCOND16;
  _WCOND16:
  %v___temp_0 := int %v_t_15 < int %v_t_10;
  jump if boolean %v___temp_0 then _WBEG17 else _WEND18;
  _WBEG17:
  %v_t_19 := callvirt String & String.concat (String & %v_t_13, String & %v_t_9);
  %v_t_13 := String & %v_t_19;
  %v_t_21 := int %v_t_15 + 1;
  %v_t_15 := int %v_t_21;
  jump _WCOND16;
  _WEND18:
  %v___temp_1 := String & %v_t_13;
  %v_return := String & %v___temp_1;
  jump .L_exit;
.L_exit:
  return String & %v_return;
]
.method int ~cl_TopLevel.main (): [
.L_entry:
  %v_t_23 := call int ~cl_TopLevel.fac (10);
  call int ~cl_TopLevel.printInt (int %v_t_23);
  %v_t_26 := call int ~cl_TopLevel.rfac (10);
  call int ~cl_TopLevel.printInt (int %v_t_26);
  %v_t_29 := call int ~cl_TopLevel.mfac (10);
  call int ~cl_TopLevel.printInt (int %v_t_29);
  %v_t_32 := call int ~cl_TopLevel.ifac (10);
  call int ~cl_TopLevel.printInt (int %v_t_32);
  %v_t_37 := 10;
  %v_t_39 := 1;
  jump _WCOND40;
  _WCOND40:
  %v___temp_2 := int %v_t_37 > 0;
  jump if boolean %v___temp_2 then _WBEG41 else _WEND42;
  _WBEG41:
  %v_t_43 := int %v_t_39 * int %v_t_37;
  %v_t_39 := int %v_t_43;
  %v_t_45 := int %v_t_37 - 1;
  %v_t_37 := int %v_t_45;
  jump _WCOND40;
  _WEND42:
  call int ~cl_TopLevel.printInt (int %v_t_39);
  %v_t_49 := newstr "=";
  %v_t_51 := call String & ~cl_TopLevel.repStr (String & %v_t_49, 60);
  %v_t_52 := String & %v_t_51;
  call int ~cl_TopLevel.printString (String & %v_t_52);
  %v_t_55 := newstr "hello */";
  call int ~cl_TopLevel.printString (String & %v_t_55);
  %v_t_58 := newstr "/* world";
  call int ~cl_TopLevel.printString (String & %v_t_58);
  %v___temp_3 := 0;
  %v_return := int %v___temp_3;
  jump .L_exit;
.L_exit:
  return int %v_return;
]
.method int ~cl_TopLevel.fac (int %a_t_61): [
.L_entry:
  %v_t_61 := load int & param 0 %a_t_61;
  %v_t_63 := 0;
  %v_t_65 := 0;
  %v_t_63 := 1;
  %v_t_65 := int %v_t_61;
  jump _WCOND67;
  _WCOND67:
  %v___temp_4 := int %v_t_65 > 0;
  jump if boolean %v___temp_4 then _WBEG68 else _WEND69;
  _WBEG68:
  %v_t_70 := int %v_t_63 * int %v_t_65;
  %v_t_63 := int %v_t_70;
  %v_t_72 := int %v_t_65 + -1;
  %v_t_65 := int %v_t_72;
  jump _WCOND67;
  _WEND69:
  %v___temp_5 := int %v_t_63;
  %v_return := int %v___temp_5;
  jump .L_exit;
.L_exit:
  return int %v_return;
]
.method int ~cl_TopLevel.rfac (int %a_t_74): [
.L_entry:
  %v_t_74 := load int & param 0 %a_t_74;
  %v___temp_6 := int %v_t_74 == 0;
  jump if boolean %v___temp_6 then _IIF75 else _IELSE76;
  _IIF75:
  %v___temp_7 := 1;
  %v_return := int %v___temp_7;
  jump .L_exit;
  _IELSE76:
  %v_t_81 := int %v_t_74 + -1;
  %v_t_82 := call int ~cl_TopLevel.rfac (int %v_t_81);
  %v_t_83 := int %v_t_74 * int %v_t_82;
  %v___temp_8 := int %v_t_83;
  %v_return := int %v___temp_8;
  jump .L_exit;
.L_exit:
  return int %v_return;
]
.method int ~cl_TopLevel.mfac (int %a_t_84): [
.L_entry:
  %v_t_84 := load int & param 0 %a_t_84;
  %v___temp_9 := int %v_t_84 == 0;
  jump if boolean %v___temp_9 then _IIF85 else _IELSE86;
  _IIF85:
  %v___temp_10 := 1;
  %v_return := int %v___temp_10;
  jump .L_exit;
  _IELSE86:
  %v_t_91 := int %v_t_84 + -1;
  %v_t_92 := call int ~cl_TopLevel.nfac (int %v_t_91);
  %v_t_93 := int %v_t_84 * int %v_t_92;
  %v___temp_11 := int %v_t_93;
  %v_return := int %v___temp_11;
  jump .L_exit;
.L_exit:
  return int %v_return;
]
.method int ~cl_TopLevel.nfac (int %a_t_94): [
.L_entry:
  %v_t_94 := load int & param 0 %a_t_94;
  %v___temp_12 := int %v_t_94 != 0;
  jump if boolean %v___temp_12 then _IIF95 else _IELSE96;
  _IIF95:
  %v_t_100 := int %v_t_94 + -1;
  %v_t_101 := call int ~cl_TopLevel.mfac (int %v_t_100);
  %v_t_102 := int %v_t_94 * int %v_t_101;
  %v___temp_13 := int %v_t_102;
  %v_return := int %v___temp_13;
  jump .L_exit;
  _IELSE96:
  %v___temp_14 := 1;
  %v_return := int %v___temp_14;
  jump .L_exit;
.L_exit:
  return int %v_return;
]
.method int ~cl_TopLevel.ifac (int %a_t_104): [
.L_entry:
  %v_t_104 := load int & param 0 %a_t_104;
  %v_t_106 := call int ~cl_TopLevel.ifac2f (1, int %v_t_104);
  %v___temp_15 := int %v_t_106;
  %v_return := int %v___temp_15;
  jump .L_exit;
.L_exit:
  return int %v_return;
]
.method int ~cl_TopLevel.ifac2f (int %a_t_107, int %a_t_108): [
.L_entry:
  %v_t_107 := load int & param 0 %a_t_107;
  %v_t_108 := load int & param 1 %a_t_108;
  %v___temp_16 := int %v_t_107 == int %v_t_108;
  jump if boolean %v___temp_16 then _IIF109 else _IELSE110;
  _IIF109:
  %v___temp_17 := int %v_t_107;
  %v_return := int %v___temp_17;
  jump .L_exit;
  jump _IEND111;
  _IELSE110:
  jump _IEND111;
  _IEND111:
  %v___temp_18 := int %v_t_107 > int %v_t_108;
  jump if boolean %v___temp_18 then _IIF112 else _IELSE113;
  _IIF112:
  %v___temp_19 := 1;
  %v_return := int %v___temp_19;
  jump .L_exit;
  jump _IEND114;
  _IELSE113:
  jump _IEND114;
  _IEND114:
  %v_t_117 := 0;
  %v_t_118 := int %v_t_107 + int %v_t_108;
  %v_t_120 := int %v_t_118 / 2;
  %v_t_117 := int %v_t_120;
  %v_t_121 := call int ~cl_TopLevel.ifac2f (int %v_t_107, int %v_t_117);
  %v_t_123 := int %v_t_117 + 1;
  %v_t_124 := call int ~cl_TopLevel.ifac2f (int %v_t_123, int %v_t_108);
  %v_t_125 := int %v_t_121 * int %v_t_124;
  %v___temp_20 := int %v_t_125;
  %v_return := int %v___temp_20;
  jump .L_exit;
.L_exit:
  return int %v_return;
]

[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Try collapsing CFG nodes in CFG [
[".L_entry",".L_exit","_WBEG17","_WCOND16","_WCOND16__from__WBEG17","_WCOND16__from_entry","_WEND18"]
".L_entry" -> fromList [LabIdent "_WCOND16__from_entry"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_WEND18"]
"_WBEG17" -> fromList [LabIdent "_WCOND16__from__WBEG17"] <- fromList [LabIdent "_WCOND16"]
"_WCOND16" -> fromList [LabIdent "_WBEG17",LabIdent "_WEND18"] <- fromList [LabIdent "_WCOND16__from__WBEG17",LabIdent "_WCOND16__from_entry"]
"_WCOND16__from__WBEG17" -> fromList [LabIdent "_WCOND16"] <- fromList [LabIdent "_WBEG17"]
"_WCOND16__from_entry" -> fromList [LabIdent "_WCOND16"] <- fromList [LabIdent ".L_entry"]
"_WEND18" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_WCOND16"]

]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Collapse eligible edge .L_entry == to => _WCOND16__from_entry
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Try collapsing CFG nodes in CFG [
[".L_entry",".L_exit","_WBEG17","_WCOND16","_WCOND16__from__WBEG17","_WEND18"]
".L_entry" -> fromList [LabIdent "_WCOND16"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_WEND18"]
"_WBEG17" -> fromList [LabIdent "_WCOND16__from__WBEG17"] <- fromList [LabIdent "_WCOND16"]
"_WCOND16" -> fromList [LabIdent "_WBEG17",LabIdent "_WEND18"] <- fromList [LabIdent ".L_entry",LabIdent "_WCOND16__from__WBEG17"]
"_WCOND16__from__WBEG17" -> fromList [LabIdent "_WCOND16"] <- fromList [LabIdent "_WBEG17"]
"_WEND18" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_WCOND16"]

]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Collapse eligible edge _WBEG17 == to => _WCOND16__from__WBEG17
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Try collapsing CFG nodes in CFG [
[".L_entry",".L_exit","_WBEG17","_WCOND16","_WEND18"]
".L_entry" -> fromList [LabIdent "_WCOND16"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_WEND18"]
"_WBEG17" -> fromList [LabIdent "_WCOND16"] <- fromList [LabIdent "_WCOND16"]
"_WCOND16" -> fromList [LabIdent "_WBEG17",LabIdent "_WEND18"] <- fromList [LabIdent ".L_entry",LabIdent "_WBEG17"]
"_WEND18" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_WCOND16"]

]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Collapse eligible edge _WEND18 == to => .L_exit
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Try collapsing CFG nodes in CFG [
[".L_entry","_WBEG17","_WCOND16","_WEND18"]
".L_entry" -> fromList [LabIdent "_WCOND16"] <- fromList []
"_WBEG17" -> fromList [LabIdent "_WCOND16"] <- fromList [LabIdent "_WCOND16"]
"_WCOND16" -> fromList [LabIdent "_WBEG17",LabIdent "_WEND18"] <- fromList [LabIdent ".L_entry",LabIdent "_WBEG17"]
"_WEND18" -> fromList [] <- fromList [LabIdent "_WCOND16"]

]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Try collapsing CFG nodes in CFG [
[".L_entry",".L_exit","_WBEG41","_WCOND40","_WCOND40__from__WBEG41","_WCOND40__from_entry","_WEND42"]
".L_entry" -> fromList [LabIdent "_WCOND40__from_entry"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_WEND42"]
"_WBEG41" -> fromList [LabIdent "_WCOND40__from__WBEG41"] <- fromList [LabIdent "_WCOND40"]
"_WCOND40" -> fromList [LabIdent "_WBEG41",LabIdent "_WEND42"] <- fromList [LabIdent "_WCOND40__from__WBEG41",LabIdent "_WCOND40__from_entry"]
"_WCOND40__from__WBEG41" -> fromList [LabIdent "_WCOND40"] <- fromList [LabIdent "_WBEG41"]
"_WCOND40__from_entry" -> fromList [LabIdent "_WCOND40"] <- fromList [LabIdent ".L_entry"]
"_WEND42" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_WCOND40"]

]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Collapse eligible edge .L_entry == to => _WCOND40__from_entry
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Try collapsing CFG nodes in CFG [
[".L_entry",".L_exit","_WBEG41","_WCOND40","_WCOND40__from__WBEG41","_WEND42"]
".L_entry" -> fromList [LabIdent "_WCOND40"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_WEND42"]
"_WBEG41" -> fromList [LabIdent "_WCOND40__from__WBEG41"] <- fromList [LabIdent "_WCOND40"]
"_WCOND40" -> fromList [LabIdent "_WBEG41",LabIdent "_WEND42"] <- fromList [LabIdent ".L_entry",LabIdent "_WCOND40__from__WBEG41"]
"_WCOND40__from__WBEG41" -> fromList [LabIdent "_WCOND40"] <- fromList [LabIdent "_WBEG41"]
"_WEND42" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_WCOND40"]

]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Collapse eligible edge _WBEG41 == to => _WCOND40__from__WBEG41
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Try collapsing CFG nodes in CFG [
[".L_entry",".L_exit","_WBEG41","_WCOND40","_WEND42"]
".L_entry" -> fromList [LabIdent "_WCOND40"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_WEND42"]
"_WBEG41" -> fromList [LabIdent "_WCOND40"] <- fromList [LabIdent "_WCOND40"]
"_WCOND40" -> fromList [LabIdent "_WBEG41",LabIdent "_WEND42"] <- fromList [LabIdent ".L_entry",LabIdent "_WBEG41"]
"_WEND42" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_WCOND40"]

]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Collapse eligible edge _WEND42 == to => .L_exit
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Try collapsing CFG nodes in CFG [
[".L_entry","_WBEG41","_WCOND40","_WEND42"]
".L_entry" -> fromList [LabIdent "_WCOND40"] <- fromList []
"_WBEG41" -> fromList [LabIdent "_WCOND40"] <- fromList [LabIdent "_WCOND40"]
"_WCOND40" -> fromList [LabIdent "_WBEG41",LabIdent "_WEND42"] <- fromList [LabIdent ".L_entry",LabIdent "_WBEG41"]
"_WEND42" -> fromList [] <- fromList [LabIdent "_WCOND40"]

]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Try collapsing CFG nodes in CFG [
[".L_entry",".L_exit","_WBEG68","_WCOND67","_WCOND67__from__WBEG68","_WCOND67__from_entry","_WEND69"]
".L_entry" -> fromList [LabIdent "_WCOND67__from_entry"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_WEND69"]
"_WBEG68" -> fromList [LabIdent "_WCOND67__from__WBEG68"] <- fromList [LabIdent "_WCOND67"]
"_WCOND67" -> fromList [LabIdent "_WBEG68",LabIdent "_WEND69"] <- fromList [LabIdent "_WCOND67__from__WBEG68",LabIdent "_WCOND67__from_entry"]
"_WCOND67__from__WBEG68" -> fromList [LabIdent "_WCOND67"] <- fromList [LabIdent "_WBEG68"]
"_WCOND67__from_entry" -> fromList [LabIdent "_WCOND67"] <- fromList [LabIdent ".L_entry"]
"_WEND69" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_WCOND67"]

]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Collapse eligible edge .L_entry == to => _WCOND67__from_entry
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Try collapsing CFG nodes in CFG [
[".L_entry",".L_exit","_WBEG68","_WCOND67","_WCOND67__from__WBEG68","_WEND69"]
".L_entry" -> fromList [LabIdent "_WCOND67"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_WEND69"]
"_WBEG68" -> fromList [LabIdent "_WCOND67__from__WBEG68"] <- fromList [LabIdent "_WCOND67"]
"_WCOND67" -> fromList [LabIdent "_WBEG68",LabIdent "_WEND69"] <- fromList [LabIdent ".L_entry",LabIdent "_WCOND67__from__WBEG68"]
"_WCOND67__from__WBEG68" -> fromList [LabIdent "_WCOND67"] <- fromList [LabIdent "_WBEG68"]
"_WEND69" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_WCOND67"]

]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Collapse eligible edge _WBEG68 == to => _WCOND67__from__WBEG68
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Try collapsing CFG nodes in CFG [
[".L_entry",".L_exit","_WBEG68","_WCOND67","_WEND69"]
".L_entry" -> fromList [LabIdent "_WCOND67"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_WEND69"]
"_WBEG68" -> fromList [LabIdent "_WCOND67"] <- fromList [LabIdent "_WCOND67"]
"_WCOND67" -> fromList [LabIdent "_WBEG68",LabIdent "_WEND69"] <- fromList [LabIdent ".L_entry",LabIdent "_WBEG68"]
"_WEND69" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_WCOND67"]

]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Collapse eligible edge _WEND69 == to => .L_exit
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Try collapsing CFG nodes in CFG [
[".L_entry","_WBEG68","_WCOND67","_WEND69"]
".L_entry" -> fromList [LabIdent "_WCOND67"] <- fromList []
"_WBEG68" -> fromList [LabIdent "_WCOND67"] <- fromList [LabIdent "_WCOND67"]
"_WCOND67" -> fromList [LabIdent "_WBEG68",LabIdent "_WEND69"] <- fromList [LabIdent ".L_entry",LabIdent "_WBEG68"]
"_WEND69" -> fromList [] <- fromList [LabIdent "_WCOND67"]

]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Try collapsing CFG nodes in CFG [
[".L_entry",".L_exit",".L_exit__from__IELSE76",".L_exit__from__IIF75","_IELSE76","_IIF75"]
".L_entry" -> fromList [LabIdent "_IELSE76",LabIdent "_IIF75"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_exit__from__IELSE76",LabIdent ".L_exit__from__IIF75"]
".L_exit__from__IELSE76" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_IELSE76"]
".L_exit__from__IIF75" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_IIF75"]
"_IELSE76" -> fromList [LabIdent ".L_exit__from__IELSE76"] <- fromList [LabIdent ".L_entry"]
"_IIF75" -> fromList [LabIdent ".L_exit__from__IIF75"] <- fromList [LabIdent ".L_entry"]

]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Collapse eligible edge _IELSE76 == to => .L_exit__from__IELSE76
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Try collapsing CFG nodes in CFG [
[".L_entry",".L_exit",".L_exit__from__IIF75","_IELSE76","_IIF75"]
".L_entry" -> fromList [LabIdent "_IELSE76",LabIdent "_IIF75"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_exit__from__IIF75",LabIdent "_IELSE76"]
".L_exit__from__IIF75" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_IIF75"]
"_IELSE76" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
"_IIF75" -> fromList [LabIdent ".L_exit__from__IIF75"] <- fromList [LabIdent ".L_entry"]

]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Collapse eligible edge _IIF75 == to => .L_exit__from__IIF75
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Try collapsing CFG nodes in CFG [
[".L_entry",".L_exit","_IELSE76","_IIF75"]
".L_entry" -> fromList [LabIdent "_IELSE76",LabIdent "_IIF75"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_IELSE76",LabIdent "_IIF75"]
"_IELSE76" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
"_IIF75" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]

]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Try collapsing CFG nodes in CFG [
[".L_entry",".L_exit",".L_exit__from__IELSE86",".L_exit__from__IIF85","_IELSE86","_IIF85"]
".L_entry" -> fromList [LabIdent "_IELSE86",LabIdent "_IIF85"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_exit__from__IELSE86",LabIdent ".L_exit__from__IIF85"]
".L_exit__from__IELSE86" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_IELSE86"]
".L_exit__from__IIF85" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_IIF85"]
"_IELSE86" -> fromList [LabIdent ".L_exit__from__IELSE86"] <- fromList [LabIdent ".L_entry"]
"_IIF85" -> fromList [LabIdent ".L_exit__from__IIF85"] <- fromList [LabIdent ".L_entry"]

]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Collapse eligible edge _IELSE86 == to => .L_exit__from__IELSE86
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Try collapsing CFG nodes in CFG [
[".L_entry",".L_exit",".L_exit__from__IIF85","_IELSE86","_IIF85"]
".L_entry" -> fromList [LabIdent "_IELSE86",LabIdent "_IIF85"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_exit__from__IIF85",LabIdent "_IELSE86"]
".L_exit__from__IIF85" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_IIF85"]
"_IELSE86" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
"_IIF85" -> fromList [LabIdent ".L_exit__from__IIF85"] <- fromList [LabIdent ".L_entry"]

]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Collapse eligible edge _IIF85 == to => .L_exit__from__IIF85
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Try collapsing CFG nodes in CFG [
[".L_entry",".L_exit","_IELSE86","_IIF85"]
".L_entry" -> fromList [LabIdent "_IELSE86",LabIdent "_IIF85"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_IELSE86",LabIdent "_IIF85"]
"_IELSE86" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
"_IIF85" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]

]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Try collapsing CFG nodes in CFG [
[".L_entry",".L_exit",".L_exit__from__IELSE96",".L_exit__from__IIF95","_IELSE96","_IIF95"]
".L_entry" -> fromList [LabIdent "_IELSE96",LabIdent "_IIF95"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_exit__from__IELSE96",LabIdent ".L_exit__from__IIF95"]
".L_exit__from__IELSE96" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_IELSE96"]
".L_exit__from__IIF95" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_IIF95"]
"_IELSE96" -> fromList [LabIdent ".L_exit__from__IELSE96"] <- fromList [LabIdent ".L_entry"]
"_IIF95" -> fromList [LabIdent ".L_exit__from__IIF95"] <- fromList [LabIdent ".L_entry"]

]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Collapse eligible edge _IELSE96 == to => .L_exit__from__IELSE96
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Try collapsing CFG nodes in CFG [
[".L_entry",".L_exit",".L_exit__from__IIF95","_IELSE96","_IIF95"]
".L_entry" -> fromList [LabIdent "_IELSE96",LabIdent "_IIF95"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_exit__from__IIF95",LabIdent "_IELSE96"]
".L_exit__from__IIF95" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_IIF95"]
"_IELSE96" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
"_IIF95" -> fromList [LabIdent ".L_exit__from__IIF95"] <- fromList [LabIdent ".L_entry"]

]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Collapse eligible edge _IIF95 == to => .L_exit__from__IIF95
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Try collapsing CFG nodes in CFG [
[".L_entry",".L_exit","_IELSE96","_IIF95"]
".L_entry" -> fromList [LabIdent "_IELSE96",LabIdent "_IIF95"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_IELSE96",LabIdent "_IIF95"]
"_IELSE96" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
"_IIF95" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]

]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Try collapsing CFG nodes in CFG [
[".L_entry",".L_exit"]
".L_entry" -> fromList [LabIdent ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_entry"]

]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Collapse eligible edge .L_entry == to => .L_exit
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Try collapsing CFG nodes in CFG [
[".L_entry"]
".L_entry" -> fromList [] <- fromList []

]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Try collapsing CFG nodes in CFG [
[".L_entry",".L_exit",".L_exit__from__IEND114",".L_exit__from__IIF109",".L_exit__from__IIF112","_IELSE110","_IELSE113","_IEND111","_IEND114","_IIF109","_IIF112"]
".L_entry" -> fromList [LabIdent "_IELSE110",LabIdent "_IIF109"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_exit__from__IEND114",LabIdent ".L_exit__from__IIF109",LabIdent ".L_exit__from__IIF112"]
".L_exit__from__IEND114" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_IEND114"]
".L_exit__from__IIF109" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_IIF109"]
".L_exit__from__IIF112" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_IIF112"]
"_IELSE110" -> fromList [LabIdent "_IEND111"] <- fromList [LabIdent ".L_entry"]
"_IELSE113" -> fromList [LabIdent "_IEND114"] <- fromList [LabIdent "_IEND111"]
"_IEND111" -> fromList [LabIdent "_IELSE113",LabIdent "_IIF112"] <- fromList [LabIdent "_IELSE110"]
"_IEND114" -> fromList [LabIdent ".L_exit__from__IEND114"] <- fromList [LabIdent "_IELSE113"]
"_IIF109" -> fromList [LabIdent ".L_exit__from__IIF109"] <- fromList [LabIdent ".L_entry"]
"_IIF112" -> fromList [LabIdent ".L_exit__from__IIF112"] <- fromList [LabIdent "_IEND111"]

]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Collapse eligible edge _IELSE110 == to => _IEND111
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Try collapsing CFG nodes in CFG [
[".L_entry",".L_exit",".L_exit__from__IEND114",".L_exit__from__IIF109",".L_exit__from__IIF112","_IELSE110","_IELSE113","_IEND114","_IIF109","_IIF112"]
".L_entry" -> fromList [LabIdent "_IELSE110",LabIdent "_IIF109"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_exit__from__IEND114",LabIdent ".L_exit__from__IIF109",LabIdent ".L_exit__from__IIF112"]
".L_exit__from__IEND114" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_IEND114"]
".L_exit__from__IIF109" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_IIF109"]
".L_exit__from__IIF112" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_IIF112"]
"_IELSE110" -> fromList [LabIdent "_IELSE113",LabIdent "_IIF112"] <- fromList [LabIdent ".L_entry"]
"_IELSE113" -> fromList [LabIdent "_IEND114"] <- fromList [LabIdent "_IELSE110"]
"_IEND114" -> fromList [LabIdent ".L_exit__from__IEND114"] <- fromList [LabIdent "_IELSE113"]
"_IIF109" -> fromList [LabIdent ".L_exit__from__IIF109"] <- fromList [LabIdent ".L_entry"]
"_IIF112" -> fromList [LabIdent ".L_exit__from__IIF112"] <- fromList [LabIdent "_IELSE110"]

]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Collapse eligible edge _IELSE113 == to => _IEND114
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Try collapsing CFG nodes in CFG [
[".L_entry",".L_exit",".L_exit__from__IEND114",".L_exit__from__IIF109",".L_exit__from__IIF112","_IELSE110","_IELSE113","_IIF109","_IIF112"]
".L_entry" -> fromList [LabIdent "_IELSE110",LabIdent "_IIF109"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_exit__from__IEND114",LabIdent ".L_exit__from__IIF109",LabIdent ".L_exit__from__IIF112"]
".L_exit__from__IEND114" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_IELSE113"]
".L_exit__from__IIF109" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_IIF109"]
".L_exit__from__IIF112" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_IIF112"]
"_IELSE110" -> fromList [LabIdent "_IELSE113",LabIdent "_IIF112"] <- fromList [LabIdent ".L_entry"]
"_IELSE113" -> fromList [LabIdent ".L_exit__from__IEND114"] <- fromList [LabIdent "_IELSE110"]
"_IIF109" -> fromList [LabIdent ".L_exit__from__IIF109"] <- fromList [LabIdent ".L_entry"]
"_IIF112" -> fromList [LabIdent ".L_exit__from__IIF112"] <- fromList [LabIdent "_IELSE110"]

]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Collapse eligible edge _IELSE113 == to => .L_exit__from__IEND114
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Try collapsing CFG nodes in CFG [
[".L_entry",".L_exit",".L_exit__from__IIF109",".L_exit__from__IIF112","_IELSE110","_IELSE113","_IIF109","_IIF112"]
".L_entry" -> fromList [LabIdent "_IELSE110",LabIdent "_IIF109"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_exit__from__IIF109",LabIdent ".L_exit__from__IIF112",LabIdent "_IELSE113"]
".L_exit__from__IIF109" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_IIF109"]
".L_exit__from__IIF112" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_IIF112"]
"_IELSE110" -> fromList [LabIdent "_IELSE113",LabIdent "_IIF112"] <- fromList [LabIdent ".L_entry"]
"_IELSE113" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_IELSE110"]
"_IIF109" -> fromList [LabIdent ".L_exit__from__IIF109"] <- fromList [LabIdent ".L_entry"]
"_IIF112" -> fromList [LabIdent ".L_exit__from__IIF112"] <- fromList [LabIdent "_IELSE110"]

]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Collapse eligible edge _IIF109 == to => .L_exit__from__IIF109
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Try collapsing CFG nodes in CFG [
[".L_entry",".L_exit",".L_exit__from__IIF112","_IELSE110","_IELSE113","_IIF109","_IIF112"]
".L_entry" -> fromList [LabIdent "_IELSE110",LabIdent "_IIF109"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_exit__from__IIF112",LabIdent "_IELSE113",LabIdent "_IIF109"]
".L_exit__from__IIF112" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_IIF112"]
"_IELSE110" -> fromList [LabIdent "_IELSE113",LabIdent "_IIF112"] <- fromList [LabIdent ".L_entry"]
"_IELSE113" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_IELSE110"]
"_IIF109" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
"_IIF112" -> fromList [LabIdent ".L_exit__from__IIF112"] <- fromList [LabIdent "_IELSE110"]

]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Collapse eligible edge _IIF112 == to => .L_exit__from__IIF112
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Try collapsing CFG nodes in CFG [
[".L_entry",".L_exit","_IELSE110","_IELSE113","_IIF109","_IIF112"]
".L_entry" -> fromList [LabIdent "_IELSE110",LabIdent "_IIF109"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_IELSE113",LabIdent "_IIF109",LabIdent "_IIF112"]
"_IELSE110" -> fromList [LabIdent "_IELSE113",LabIdent "_IIF112"] <- fromList [LabIdent ".L_entry"]
"_IELSE113" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_IELSE110"]
"_IIF109" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
"_IIF112" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_IELSE110"]

]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> GENERATED CFGS

CFG for ~cl_TopLevel.repStr:
[".L_entry",".L_exit","_WBEG17","_WCOND16","_WEND18"]
".L_entry" -> fromList [LabIdent "_WCOND16"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_WEND18"]
"_WBEG17" -> fromList [LabIdent "_WCOND16"] <- fromList [LabIdent "_WCOND16"]
"_WCOND16" -> fromList [LabIdent "_WBEG17",LabIdent "_WEND18"] <- fromList [LabIdent ".L_entry",LabIdent "_WBEG17"]
"_WEND18" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_WCOND16"]
Code: 
.method String & ~cl_TopLevel.repStr (String & %a_t_9, int %a_t_10): [
.L_entry:
  %v_t_9 := load String & & param 0 %a_t_9;
  %v_t_10 := load int & param 1 %a_t_10;
  %v_t_12 := newstr "";
  %v_t_13 := String & %v_t_12;
  %v_t_15 := 0;
  jump _WCOND16;
  _WCOND16:
  %v___temp_0 := int %v_t_15 < int %v_t_10;
  jump if boolean %v___temp_0 then _WBEG17 else _WEND18;
  _WBEG17:
  %v_t_19 := callvirt String & String.concat (String & %v_t_13, String & %v_t_9);
  %v_t_13 := String & %v_t_19;
  %v_t_21 := int %v_t_15 + 1;
  %v_t_15 := int %v_t_21;
  jump _WCOND16;
  _WEND18:
  %v___temp_1 := String & %v_t_13;
  %v_return := String & %v___temp_1;
  jump .L_exit;
.L_exit:
  return String & %v_return;
]

CFG for ~cl_TopLevel.main:
[".L_entry",".L_exit","_WBEG41","_WCOND40","_WEND42"]
".L_entry" -> fromList [LabIdent "_WCOND40"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_WEND42"]
"_WBEG41" -> fromList [LabIdent "_WCOND40"] <- fromList [LabIdent "_WCOND40"]
"_WCOND40" -> fromList [LabIdent "_WBEG41",LabIdent "_WEND42"] <- fromList [LabIdent ".L_entry",LabIdent "_WBEG41"]
"_WEND42" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_WCOND40"]
Code: 
.method int ~cl_TopLevel.main (): [
.L_entry:
  %v_t_23 := call int ~cl_TopLevel.fac (10);
  call int ~cl_TopLevel.printInt (int %v_t_23);
  %v_t_26 := call int ~cl_TopLevel.rfac (10);
  call int ~cl_TopLevel.printInt (int %v_t_26);
  %v_t_29 := call int ~cl_TopLevel.mfac (10);
  call int ~cl_TopLevel.printInt (int %v_t_29);
  %v_t_32 := call int ~cl_TopLevel.ifac (10);
  call int ~cl_TopLevel.printInt (int %v_t_32);
  %v_t_37 := 10;
  %v_t_39 := 1;
  jump _WCOND40;
  _WCOND40:
  %v___temp_2 := int %v_t_37 > 0;
  jump if boolean %v___temp_2 then _WBEG41 else _WEND42;
  _WBEG41:
  %v_t_43 := int %v_t_39 * int %v_t_37;
  %v_t_39 := int %v_t_43;
  %v_t_45 := int %v_t_37 - 1;
  %v_t_37 := int %v_t_45;
  jump _WCOND40;
  _WEND42:
  call int ~cl_TopLevel.printInt (int %v_t_39);
  %v_t_49 := newstr "=";
  %v_t_51 := call String & ~cl_TopLevel.repStr (String & %v_t_49, 60);
  %v_t_52 := String & %v_t_51;
  call int ~cl_TopLevel.printString (String & %v_t_52);
  %v_t_55 := newstr "hello */";
  call int ~cl_TopLevel.printString (String & %v_t_55);
  %v_t_58 := newstr "/* world";
  call int ~cl_TopLevel.printString (String & %v_t_58);
  %v___temp_3 := 0;
  %v_return := int %v___temp_3;
  jump .L_exit;
.L_exit:
  return int %v_return;
]

CFG for ~cl_TopLevel.fac:
[".L_entry",".L_exit","_WBEG68","_WCOND67","_WEND69"]
".L_entry" -> fromList [LabIdent "_WCOND67"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_WEND69"]
"_WBEG68" -> fromList [LabIdent "_WCOND67"] <- fromList [LabIdent "_WCOND67"]
"_WCOND67" -> fromList [LabIdent "_WBEG68",LabIdent "_WEND69"] <- fromList [LabIdent ".L_entry",LabIdent "_WBEG68"]
"_WEND69" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_WCOND67"]
Code: 
.method int ~cl_TopLevel.fac (int %a_t_61): [
.L_entry:
  %v_t_61 := load int & param 0 %a_t_61;
  %v_t_63 := 0;
  %v_t_65 := 0;
  %v_t_63 := 1;
  %v_t_65 := int %v_t_61;
  jump _WCOND67;
  _WCOND67:
  %v___temp_4 := int %v_t_65 > 0;
  jump if boolean %v___temp_4 then _WBEG68 else _WEND69;
  _WBEG68:
  %v_t_70 := int %v_t_63 * int %v_t_65;
  %v_t_63 := int %v_t_70;
  %v_t_72 := int %v_t_65 + -1;
  %v_t_65 := int %v_t_72;
  jump _WCOND67;
  _WEND69:
  %v___temp_5 := int %v_t_63;
  %v_return := int %v___temp_5;
  jump .L_exit;
.L_exit:
  return int %v_return;
]

CFG for ~cl_TopLevel.rfac:
[".L_entry",".L_exit","_IELSE76","_IIF75"]
".L_entry" -> fromList [LabIdent "_IELSE76",LabIdent "_IIF75"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_IELSE76",LabIdent "_IIF75"]
"_IELSE76" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
"_IIF75" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
Code: 
.method int ~cl_TopLevel.rfac (int %a_t_74): [
.L_entry:
  %v_t_74 := load int & param 0 %a_t_74;
  %v___temp_6 := int %v_t_74 == 0;
  jump if boolean %v___temp_6 then _IIF75 else _IELSE76;
  _IIF75:
  %v___temp_7 := 1;
  %v_return := int %v___temp_7;
  jump .L_exit;
  _IELSE76:
  %v_t_81 := int %v_t_74 + -1;
  %v_t_82 := call int ~cl_TopLevel.rfac (int %v_t_81);
  %v_t_83 := int %v_t_74 * int %v_t_82;
  %v___temp_8 := int %v_t_83;
  %v_return := int %v___temp_8;
  jump .L_exit;
.L_exit:
  return int %v_return;
]

CFG for ~cl_TopLevel.mfac:
[".L_entry",".L_exit","_IELSE86","_IIF85"]
".L_entry" -> fromList [LabIdent "_IELSE86",LabIdent "_IIF85"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_IELSE86",LabIdent "_IIF85"]
"_IELSE86" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
"_IIF85" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
Code: 
.method int ~cl_TopLevel.mfac (int %a_t_84): [
.L_entry:
  %v_t_84 := load int & param 0 %a_t_84;
  %v___temp_9 := int %v_t_84 == 0;
  jump if boolean %v___temp_9 then _IIF85 else _IELSE86;
  _IIF85:
  %v___temp_10 := 1;
  %v_return := int %v___temp_10;
  jump .L_exit;
  _IELSE86:
  %v_t_91 := int %v_t_84 + -1;
  %v_t_92 := call int ~cl_TopLevel.nfac (int %v_t_91);
  %v_t_93 := int %v_t_84 * int %v_t_92;
  %v___temp_11 := int %v_t_93;
  %v_return := int %v___temp_11;
  jump .L_exit;
.L_exit:
  return int %v_return;
]

CFG for ~cl_TopLevel.nfac:
[".L_entry",".L_exit","_IELSE96","_IIF95"]
".L_entry" -> fromList [LabIdent "_IELSE96",LabIdent "_IIF95"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_IELSE96",LabIdent "_IIF95"]
"_IELSE96" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
"_IIF95" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
Code: 
.method int ~cl_TopLevel.nfac (int %a_t_94): [
.L_entry:
  %v_t_94 := load int & param 0 %a_t_94;
  %v___temp_12 := int %v_t_94 != 0;
  jump if boolean %v___temp_12 then _IIF95 else _IELSE96;
  _IIF95:
  %v_t_100 := int %v_t_94 + -1;
  %v_t_101 := call int ~cl_TopLevel.mfac (int %v_t_100);
  %v_t_102 := int %v_t_94 * int %v_t_101;
  %v___temp_13 := int %v_t_102;
  %v_return := int %v___temp_13;
  jump .L_exit;
  _IELSE96:
  %v___temp_14 := 1;
  %v_return := int %v___temp_14;
  jump .L_exit;
.L_exit:
  return int %v_return;
]

CFG for ~cl_TopLevel.ifac:
[".L_entry",".L_exit"]
".L_entry" -> fromList [LabIdent ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_entry"]
Code: 
.method int ~cl_TopLevel.ifac (int %a_t_104): [
.L_entry:
  %v_t_104 := load int & param 0 %a_t_104;
  %v_t_106 := call int ~cl_TopLevel.ifac2f (1, int %v_t_104);
  %v___temp_15 := int %v_t_106;
  %v_return := int %v___temp_15;
  jump .L_exit;
.L_exit:
  return int %v_return;
]

CFG for ~cl_TopLevel.ifac2f:
[".L_entry",".L_exit","_IELSE110","_IELSE113","_IEND111","_IEND114","_IIF109","_IIF112"]
".L_entry" -> fromList [LabIdent "_IELSE110",LabIdent "_IIF109"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_IEND114",LabIdent "_IIF109",LabIdent "_IIF112"]
"_IELSE110" -> fromList [LabIdent "_IEND111"] <- fromList [LabIdent ".L_entry"]
"_IELSE113" -> fromList [LabIdent "_IEND114"] <- fromList [LabIdent "_IEND111"]
"_IEND111" -> fromList [LabIdent "_IELSE113",LabIdent "_IIF112"] <- fromList [LabIdent "_IELSE110"]
"_IEND114" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_IELSE113"]
"_IIF109" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
"_IIF112" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_IEND111"]
Code: 
.method int ~cl_TopLevel.ifac2f (int %a_t_107, int %a_t_108): [
.L_entry:
  %v_t_107 := load int & param 0 %a_t_107;
  %v_t_108 := load int & param 1 %a_t_108;
  %v___temp_16 := int %v_t_107 == int %v_t_108;
  jump if boolean %v___temp_16 then _IIF109 else _IELSE110;
  _IIF109:
  %v___temp_17 := int %v_t_107;
  %v_return := int %v___temp_17;
  jump .L_exit;
  jump _IEND111;
  _IELSE110:
  jump _IEND111;
  _IEND111:
  %v___temp_18 := int %v_t_107 > int %v_t_108;
  jump if boolean %v___temp_18 then _IIF112 else _IELSE113;
  _IIF112:
  %v___temp_19 := 1;
  %v_return := int %v___temp_19;
  jump .L_exit;
  jump _IEND114;
  _IELSE113:
  jump _IEND114;
  _IEND114:
  %v_t_117 := 0;
  %v_t_118 := int %v_t_107 + int %v_t_108;
  %v_t_120 := int %v_t_118 / 2;
  %v_t_117 := int %v_t_120;
  %v_t_121 := call int ~cl_TopLevel.ifac2f (int %v_t_107, int %v_t_117);
  %v_t_123 := int %v_t_117 + 1;
  %v_t_124 := call int ~cl_TopLevel.ifac2f (int %v_t_123, int %v_t_108);
  %v_t_125 := int %v_t_121 * int %v_t_124;
  %v___temp_20 := int %v_t_125;
  %v_return := int %v___temp_20;
  jump .L_exit;
.L_exit:
  return int %v_return;
]


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> GENERATED INTERMEDIATE STEP Removing unreachable blocks...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] CFG for ~cl_TopLevel.repStr:
[".L_entry",".L_exit","_WBEG17","_WCOND16","_WEND18"]
".L_entry" -> fromList [LabIdent "_WCOND16"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_WEND18"]
"_WBEG17" -> fromList [LabIdent "_WCOND16"] <- fromList [LabIdent "_WCOND16"]
"_WCOND16" -> fromList [LabIdent "_WBEG17",LabIdent "_WEND18"] <- fromList [LabIdent ".L_entry",LabIdent "_WBEG17"]
"_WEND18" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_WCOND16"]
Code: 
.method String & ~cl_TopLevel.repStr (String & %a_t_9, int %a_t_10): [
.L_entry:
  %v_t_9 := load String & & param 0 %a_t_9;
  %v_t_10 := load int & param 1 %a_t_10;
  %v_t_12 := newstr "";
  %v_t_13 := String & %v_t_12;
  %v_t_15 := 0;
  jump _WCOND16;
  _WCOND16:
  %v___temp_0 := int %v_t_15 < int %v_t_10;
  jump if boolean %v___temp_0 then _WBEG17 else _WEND18;
  _WBEG17:
  %v_t_19 := callvirt String & String.concat (String & %v_t_13, String & %v_t_9);
  %v_t_13 := String & %v_t_19;
  %v_t_21 := int %v_t_15 + 1;
  %v_t_15 := int %v_t_21;
  jump _WCOND16;
  _WEND18:
  %v___temp_1 := String & %v_t_13;
  %v_return := String & %v___temp_1;
  jump .L_exit;
.L_exit:
  return String & %v_return;
]

CFG for ~cl_TopLevel.main:
[".L_entry",".L_exit","_WBEG41","_WCOND40","_WEND42"]
".L_entry" -> fromList [LabIdent "_WCOND40"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_WEND42"]
"_WBEG41" -> fromList [LabIdent "_WCOND40"] <- fromList [LabIdent "_WCOND40"]
"_WCOND40" -> fromList [LabIdent "_WBEG41",LabIdent "_WEND42"] <- fromList [LabIdent ".L_entry",LabIdent "_WBEG41"]
"_WEND42" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_WCOND40"]
Code: 
.method int ~cl_TopLevel.main (): [
.L_entry:
  %v_t_23 := call int ~cl_TopLevel.fac (10);
  call int ~cl_TopLevel.printInt (int %v_t_23);
  %v_t_26 := call int ~cl_TopLevel.rfac (10);
  call int ~cl_TopLevel.printInt (int %v_t_26);
  %v_t_29 := call int ~cl_TopLevel.mfac (10);
  call int ~cl_TopLevel.printInt (int %v_t_29);
  %v_t_32 := call int ~cl_TopLevel.ifac (10);
  call int ~cl_TopLevel.printInt (int %v_t_32);
  %v_t_37 := 10;
  %v_t_39 := 1;
  jump _WCOND40;
  _WCOND40:
  %v___temp_2 := int %v_t_37 > 0;
  jump if boolean %v___temp_2 then _WBEG41 else _WEND42;
  _WBEG41:
  %v_t_43 := int %v_t_39 * int %v_t_37;
  %v_t_39 := int %v_t_43;
  %v_t_45 := int %v_t_37 - 1;
  %v_t_37 := int %v_t_45;
  jump _WCOND40;
  _WEND42:
  call int ~cl_TopLevel.printInt (int %v_t_39);
  %v_t_49 := newstr "=";
  %v_t_51 := call String & ~cl_TopLevel.repStr (String & %v_t_49, 60);
  %v_t_52 := String & %v_t_51;
  call int ~cl_TopLevel.printString (String & %v_t_52);
  %v_t_55 := newstr "hello */";
  call int ~cl_TopLevel.printString (String & %v_t_55);
  %v_t_58 := newstr "/* world";
  call int ~cl_TopLevel.printString (String & %v_t_58);
  %v___temp_3 := 0;
  %v_return := int %v___temp_3;
  jump .L_exit;
.L_exit:
  return int %v_return;
]

CFG for ~cl_TopLevel.fac:
[".L_entry",".L_exit","_WBEG68","_WCOND67","_WEND69"]
".L_entry" -> fromList [LabIdent "_WCOND67"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_WEND69"]
"_WBEG68" -> fromList [LabIdent "_WCOND67"] <- fromList [LabIdent "_WCOND67"]
"_WCOND67" -> fromList [LabIdent "_WBEG68",LabIdent "_WEND69"] <- fromList [LabIdent ".L_entry",LabIdent "_WBEG68"]
"_WEND69" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_WCOND67"]
Code: 
.method int ~cl_TopLevel.fac (int %a_t_61): [
.L_entry:
  %v_t_61 := load int & param 0 %a_t_61;
  %v_t_63 := 0;
  %v_t_65 := 0;
  %v_t_63 := 1;
  %v_t_65 := int %v_t_61;
  jump _WCOND67;
  _WCOND67:
  %v___temp_4 := int %v_t_65 > 0;
  jump if boolean %v___temp_4 then _WBEG68 else _WEND69;
  _WBEG68:
  %v_t_70 := int %v_t_63 * int %v_t_65;
  %v_t_63 := int %v_t_70;
  %v_t_72 := int %v_t_65 + -1;
  %v_t_65 := int %v_t_72;
  jump _WCOND67;
  _WEND69:
  %v___temp_5 := int %v_t_63;
  %v_return := int %v___temp_5;
  jump .L_exit;
.L_exit:
  return int %v_return;
]

CFG for ~cl_TopLevel.rfac:
[".L_entry",".L_exit","_IELSE76","_IIF75"]
".L_entry" -> fromList [LabIdent "_IELSE76",LabIdent "_IIF75"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_IELSE76",LabIdent "_IIF75"]
"_IELSE76" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
"_IIF75" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
Code: 
.method int ~cl_TopLevel.rfac (int %a_t_74): [
.L_entry:
  %v_t_74 := load int & param 0 %a_t_74;
  %v___temp_6 := int %v_t_74 == 0;
  jump if boolean %v___temp_6 then _IIF75 else _IELSE76;
  _IELSE76:
  %v_t_81 := int %v_t_74 + -1;
  %v_t_82 := call int ~cl_TopLevel.rfac (int %v_t_81);
  %v_t_83 := int %v_t_74 * int %v_t_82;
  %v___temp_8 := int %v_t_83;
  %v_return := int %v___temp_8;
  jump .L_exit;
.L_exit:
  return int %v_return;
  _IIF75:
  %v___temp_7 := 1;
  %v_return := int %v___temp_7;
  jump .L_exit;
]

CFG for ~cl_TopLevel.mfac:
[".L_entry",".L_exit","_IELSE86","_IIF85"]
".L_entry" -> fromList [LabIdent "_IELSE86",LabIdent "_IIF85"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_IELSE86",LabIdent "_IIF85"]
"_IELSE86" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
"_IIF85" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
Code: 
.method int ~cl_TopLevel.mfac (int %a_t_84): [
.L_entry:
  %v_t_84 := load int & param 0 %a_t_84;
  %v___temp_9 := int %v_t_84 == 0;
  jump if boolean %v___temp_9 then _IIF85 else _IELSE86;
  _IELSE86:
  %v_t_91 := int %v_t_84 + -1;
  %v_t_92 := call int ~cl_TopLevel.nfac (int %v_t_91);
  %v_t_93 := int %v_t_84 * int %v_t_92;
  %v___temp_11 := int %v_t_93;
  %v_return := int %v___temp_11;
  jump .L_exit;
.L_exit:
  return int %v_return;
  _IIF85:
  %v___temp_10 := 1;
  %v_return := int %v___temp_10;
  jump .L_exit;
]

CFG for ~cl_TopLevel.nfac:
[".L_entry",".L_exit","_IELSE96","_IIF95"]
".L_entry" -> fromList [LabIdent "_IELSE96",LabIdent "_IIF95"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_IELSE96",LabIdent "_IIF95"]
"_IELSE96" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
"_IIF95" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
Code: 
.method int ~cl_TopLevel.nfac (int %a_t_94): [
.L_entry:
  %v_t_94 := load int & param 0 %a_t_94;
  %v___temp_12 := int %v_t_94 != 0;
  jump if boolean %v___temp_12 then _IIF95 else _IELSE96;
  _IELSE96:
  %v___temp_14 := 1;
  %v_return := int %v___temp_14;
  jump .L_exit;
.L_exit:
  return int %v_return;
  _IIF95:
  %v_t_100 := int %v_t_94 + -1;
  %v_t_101 := call int ~cl_TopLevel.mfac (int %v_t_100);
  %v_t_102 := int %v_t_94 * int %v_t_101;
  %v___temp_13 := int %v_t_102;
  %v_return := int %v___temp_13;
  jump .L_exit;
]

CFG for ~cl_TopLevel.ifac:
[".L_entry",".L_exit"]
".L_entry" -> fromList [LabIdent ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_entry"]
Code: 
.method int ~cl_TopLevel.ifac (int %a_t_104): [
.L_entry:
  %v_t_104 := load int & param 0 %a_t_104;
  %v_t_106 := call int ~cl_TopLevel.ifac2f (1, int %v_t_104);
  %v___temp_15 := int %v_t_106;
  %v_return := int %v___temp_15;
  jump .L_exit;
.L_exit:
  return int %v_return;
]

CFG for ~cl_TopLevel.ifac2f:
[".L_entry",".L_exit","_IELSE110","_IELSE113","_IEND111","_IEND114","_IIF109","_IIF112"]
".L_entry" -> fromList [LabIdent "_IELSE110",LabIdent "_IIF109"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_IEND114",LabIdent "_IIF109",LabIdent "_IIF112"]
"_IELSE110" -> fromList [LabIdent "_IEND111"] <- fromList [LabIdent ".L_entry"]
"_IELSE113" -> fromList [LabIdent "_IEND114"] <- fromList [LabIdent "_IEND111"]
"_IEND111" -> fromList [LabIdent "_IELSE113",LabIdent "_IIF112"] <- fromList [LabIdent "_IELSE110"]
"_IEND114" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_IELSE113"]
"_IIF109" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
"_IIF112" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_IEND111"]
Code: 
.method int ~cl_TopLevel.ifac2f (int %a_t_107, int %a_t_108): [
.L_entry:
  %v_t_107 := load int & param 0 %a_t_107;
  %v_t_108 := load int & param 1 %a_t_108;
  %v___temp_16 := int %v_t_107 == int %v_t_108;
  jump if boolean %v___temp_16 then _IIF109 else _IELSE110;
  _IELSE110:
  jump _IEND111;
  _IEND111:
  %v___temp_18 := int %v_t_107 > int %v_t_108;
  jump if boolean %v___temp_18 then _IIF112 else _IELSE113;
  _IELSE113:
  jump _IEND114;
  _IEND114:
  %v_t_117 := 0;
  %v_t_118 := int %v_t_107 + int %v_t_108;
  %v_t_120 := int %v_t_118 / 2;
  %v_t_117 := int %v_t_120;
  %v_t_121 := call int ~cl_TopLevel.ifac2f (int %v_t_107, int %v_t_117);
  %v_t_123 := int %v_t_117 + 1;
  %v_t_124 := call int ~cl_TopLevel.ifac2f (int %v_t_123, int %v_t_108);
  %v_t_125 := int %v_t_121 * int %v_t_124;
  %v___temp_20 := int %v_t_125;
  %v_return := int %v___temp_20;
  jump .L_exit;
.L_exit:
  return int %v_return;
  _IIF112:
  %v___temp_19 := 1;
  %v_return := int %v___temp_19;
  jump .L_exit;
  _IIF109:
  %v___temp_17 := int %v_t_107;
  %v_return := int %v___temp_17;
  jump .L_exit;
]


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> END STEP Removing unreachable blocks...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> GENERATED INTERMEDIATE STEP Analysing liveness...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] CFG for ~cl_TopLevel.repStr:
[".L_entry",".L_exit","_WBEG17","_WCOND16","_WEND18"]
".L_entry" -> fromList [LabIdent "_WCOND16"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_WEND18"]
"_WBEG17" -> fromList [LabIdent "_WCOND16"] <- fromList [LabIdent "_WCOND16"]
"_WCOND16" -> fromList [LabIdent "_WBEG17",LabIdent "_WEND18"] <- fromList [LabIdent ".L_entry",LabIdent "_WBEG17"]
"_WEND18" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_WCOND16"]
Liveness at start of .L_entry: in = [("%a_t_10",(2,Ref () (Int ()))),("%a_t_9",(1,Ref () (Ref () (Cl () (SymIdent "String")))))], out = [("%a_t_10",(1,Ref () (Int ()))),("%a_t_9",(0,Ref () (Ref () (Cl () (SymIdent "String")))))], use = [], kill = []
Liveness at end of .L_entry: in = [("%v_t_15",(3,Int ())),("%v_t_13",(7,Ref () (Cl () (SymIdent "String")))),("%v_t_10",(3,Int ())),("%v_t_9",(7,Ref () (Cl () (SymIdent "String"))))], out = [("%v_t_15",(2,Int ())),("%v_t_13",(6,Ref () (Cl () (SymIdent "String")))),("%v_t_10",(2,Int ())),("%v_t_9",(6,Ref () (Cl () (SymIdent "String"))))], use = [], kill = []
Liveness at start of .L_exit: in = [("%v_return",(1,Ref () (Cl () (SymIdent "String"))))], out = [("%v_return",(0,Ref () (Cl () (SymIdent "String"))))], use = [], kill = []
Liveness at end of .L_exit: in = [("%v_return",(0,Ref () (Cl () (SymIdent "String"))))], out = [], use = [("%v_return",Ref () (Cl () (SymIdent "String")))], kill = []
Liveness at start of _WBEG17: in = [("%v_t_15",(3,Int ())),("%v_t_13",(1,Ref () (Cl () (SymIdent "String")))),("%v_t_10",(8,Int ())),("%v_t_9",(1,Ref () (Cl () (SymIdent "String"))))], out = [("%v_t_15",(2,Int ())),("%v_t_13",(0,Ref () (Cl () (SymIdent "String")))),("%v_t_10",(7,Int ())),("%v_t_9",(0,Ref () (Cl () (SymIdent "String"))))], use = [], kill = []
Liveness at end of _WBEG17: in = [("%v_t_15",(3,Int ())),("%v_t_13",(7,Ref () (Cl () (SymIdent "String")))),("%v_t_10",(3,Int ())),("%v_t_9",(7,Ref () (Cl () (SymIdent "String"))))], out = [("%v_t_15",(2,Int ())),("%v_t_13",(6,Ref () (Cl () (SymIdent "String")))),("%v_t_10",(2,Int ())),("%v_t_9",(6,Ref () (Cl () (SymIdent "String"))))], use = [], kill = []
Liveness at start of _WCOND16: in = [("%v_t_15",(1,Int ())),("%v_t_13",(5,Ref () (Cl () (SymIdent "String")))),("%v_t_10",(1,Int ())),("%v_t_9",(5,Ref () (Cl () (SymIdent "String"))))], out = [("%v_t_15",(0,Int ())),("%v_t_13",(4,Ref () (Cl () (SymIdent "String")))),("%v_t_10",(0,Int ())),("%v_t_9",(4,Ref () (Cl () (SymIdent "String"))))], use = [], kill = []
Liveness at end of _WCOND16: in = [("%v_t_15",(5,Int ())),("%v___temp_0",(0,Bool ())),("%v_t_13",(3,Ref () (Cl () (SymIdent "String")))),("%v_t_10",(10,Int ())),("%v_t_9",(3,Ref () (Cl () (SymIdent "String"))))], out = [("%v_t_15",(4,Int ())),("%v_t_13",(2,Ref () (Cl () (SymIdent "String")))),("%v_t_10",(9,Int ())),("%v_t_9",(2,Ref () (Cl () (SymIdent "String"))))], use = [("%v___temp_0",Bool ())], kill = []
Liveness at start of _WEND18: in = [("%v_t_13",(1,Ref () (Cl () (SymIdent "String"))))], out = [("%v_t_13",(0,Ref () (Cl () (SymIdent "String"))))], use = [], kill = []
Liveness at end of _WEND18: in = [("%v_return",(3,Ref () (Cl () (SymIdent "String"))))], out = [("%v_return",(2,Ref () (Cl () (SymIdent "String"))))], use = [], kill = []
Code: 
.method String & ~cl_TopLevel.repStr (String & %a_t_9, int %a_t_10): [
.L_entry:
  %v_t_9 := load String & & param 0 %a_t_9;
  %v_t_10 := load int & param 1 %a_t_10;
  %v_t_12 := newstr "";
  %v_t_13 := String & %v_t_12;
  %v_t_15 := 0;
  jump _WCOND16;
  _WCOND16:
  %v___temp_0 := int %v_t_15 < int %v_t_10;
  jump if boolean %v___temp_0 then _WBEG17 else _WEND18;
  _WBEG17:
  %v_t_19 := callvirt String & String.concat (String & %v_t_13, String & %v_t_9);
  %v_t_13 := String & %v_t_19;
  %v_t_21 := int %v_t_15 + 1;
  %v_t_15 := int %v_t_21;
  jump _WCOND16;
  _WEND18:
  %v___temp_1 := String & %v_t_13;
  %v_return := String & %v___temp_1;
  jump .L_exit;
.L_exit:
  return String & %v_return;
]

CFG for ~cl_TopLevel.main:
[".L_entry",".L_exit","_WBEG41","_WCOND40","_WEND42"]
".L_entry" -> fromList [LabIdent "_WCOND40"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_WEND42"]
"_WBEG41" -> fromList [LabIdent "_WCOND40"] <- fromList [LabIdent "_WCOND40"]
"_WCOND40" -> fromList [LabIdent "_WBEG41",LabIdent "_WEND42"] <- fromList [LabIdent ".L_entry",LabIdent "_WBEG41"]
"_WEND42" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_WCOND40"]
Liveness at start of .L_entry: in = [], out = [], use = [], kill = []
Liveness at end of .L_entry: in = [("%v_t_37",(3,Int ())),("%v_t_39",(7,Int ()))], out = [("%v_t_37",(2,Int ())),("%v_t_39",(6,Int ()))], use = [], kill = []
Liveness at start of .L_exit: in = [("%v_return",(1,Int ()))], out = [("%v_return",(0,Int ()))], use = [], kill = []
Liveness at end of .L_exit: in = [("%v_return",(0,Int ()))], out = [], use = [("%v_return",Int ())], kill = []
Liveness at start of _WBEG41: in = [("%v_t_37",(1,Int ())),("%v_t_39",(1,Int ()))], out = [("%v_t_37",(0,Int ())),("%v_t_39",(0,Int ()))], use = [], kill = []
Liveness at end of _WBEG41: in = [("%v_t_37",(3,Int ())),("%v_t_39",(7,Int ()))], out = [("%v_t_37",(2,Int ())),("%v_t_39",(6,Int ()))], use = [], kill = []
Liveness at start of _WCOND40: in = [("%v_t_37",(1,Int ())),("%v_t_39",(5,Int ()))], out = [("%v_t_37",(0,Int ())),("%v_t_39",(4,Int ()))], use = [], kill = []
Liveness at end of _WCOND40: in = [("%v_t_37",(3,Int ())),("%v___temp_2",(0,Bool ())),("%v_t_39",(3,Int ()))], out = [("%v_t_37",(2,Int ())),("%v_t_39",(2,Int ()))], use = [("%v___temp_2",Bool ())], kill = []
Liveness at start of _WEND42: in = [("%v_t_39",(1,Int ()))], out = [("%v_t_39",(0,Int ()))], use = [], kill = []
Liveness at end of _WEND42: in = [("%v_return",(3,Int ()))], out = [("%v_return",(2,Int ()))], use = [], kill = []
Code: 
.method int ~cl_TopLevel.main (): [
.L_entry:
  %v_t_23 := call int ~cl_TopLevel.fac (10);
  call int ~cl_TopLevel.printInt (int %v_t_23);
  %v_t_26 := call int ~cl_TopLevel.rfac (10);
  call int ~cl_TopLevel.printInt (int %v_t_26);
  %v_t_29 := call int ~cl_TopLevel.mfac (10);
  call int ~cl_TopLevel.printInt (int %v_t_29);
  %v_t_32 := call int ~cl_TopLevel.ifac (10);
  call int ~cl_TopLevel.printInt (int %v_t_32);
  %v_t_37 := 10;
  %v_t_39 := 1;
  jump _WCOND40;
  _WCOND40:
  %v___temp_2 := int %v_t_37 > 0;
  jump if boolean %v___temp_2 then _WBEG41 else _WEND42;
  _WBEG41:
  %v_t_43 := int %v_t_39 * int %v_t_37;
  %v_t_39 := int %v_t_43;
  %v_t_45 := int %v_t_37 - 1;
  %v_t_37 := int %v_t_45;
  jump _WCOND40;
  _WEND42:
  call int ~cl_TopLevel.printInt (int %v_t_39);
  %v_t_49 := newstr "=";
  %v_t_51 := call String & ~cl_TopLevel.repStr (String & %v_t_49, 60);
  %v_t_52 := String & %v_t_51;
  call int ~cl_TopLevel.printString (String & %v_t_52);
  %v_t_55 := newstr "hello */";
  call int ~cl_TopLevel.printString (String & %v_t_55);
  %v_t_58 := newstr "/* world";
  call int ~cl_TopLevel.printString (String & %v_t_58);
  %v___temp_3 := 0;
  %v_return := int %v___temp_3;
  jump .L_exit;
.L_exit:
  return int %v_return;
]

CFG for ~cl_TopLevel.fac:
[".L_entry",".L_exit","_WBEG68","_WCOND67","_WEND69"]
".L_entry" -> fromList [LabIdent "_WCOND67"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_WEND69"]
"_WBEG68" -> fromList [LabIdent "_WCOND67"] <- fromList [LabIdent "_WCOND67"]
"_WCOND67" -> fromList [LabIdent "_WBEG68",LabIdent "_WEND69"] <- fromList [LabIdent ".L_entry",LabIdent "_WBEG68"]
"_WEND69" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_WCOND67"]
Liveness at start of .L_entry: in = [("%a_t_61",(1,Ref () (Int ())))], out = [("%a_t_61",(0,Ref () (Int ())))], use = [], kill = []
Liveness at end of .L_entry: in = [("%v_t_63",(7,Int ())),("%v_t_65",(3,Int ()))], out = [("%v_t_63",(6,Int ())),("%v_t_65",(2,Int ()))], use = [], kill = []
Liveness at start of .L_exit: in = [("%v_return",(1,Int ()))], out = [("%v_return",(0,Int ()))], use = [], kill = []
Liveness at end of .L_exit: in = [("%v_return",(0,Int ()))], out = [], use = [("%v_return",Int ())], kill = []
Liveness at start of _WBEG68: in = [("%v_t_63",(1,Int ())),("%v_t_65",(1,Int ()))], out = [("%v_t_63",(0,Int ())),("%v_t_65",(0,Int ()))], use = [], kill = []
Liveness at end of _WBEG68: in = [("%v_t_63",(7,Int ())),("%v_t_65",(3,Int ()))], out = [("%v_t_63",(6,Int ())),("%v_t_65",(2,Int ()))], use = [], kill = []
Liveness at start of _WCOND67: in = [("%v_t_63",(5,Int ())),("%v_t_65",(1,Int ()))], out = [("%v_t_63",(4,Int ())),("%v_t_65",(0,Int ()))], use = [], kill = []
Liveness at end of _WCOND67: in = [("%v_t_63",(3,Int ())),("%v___temp_4",(0,Bool ())),("%v_t_65",(3,Int ()))], out = [("%v_t_63",(2,Int ())),("%v_t_65",(2,Int ()))], use = [("%v___temp_4",Bool ())], kill = []
Liveness at start of _WEND69: in = [("%v_t_63",(1,Int ()))], out = [("%v_t_63",(0,Int ()))], use = [], kill = []
Liveness at end of _WEND69: in = [("%v_return",(3,Int ()))], out = [("%v_return",(2,Int ()))], use = [], kill = []
Code: 
.method int ~cl_TopLevel.fac (int %a_t_61): [
.L_entry:
  %v_t_61 := load int & param 0 %a_t_61;
  %v_t_63 := 0;
  %v_t_65 := 0;
  %v_t_63 := 1;
  %v_t_65 := int %v_t_61;
  jump _WCOND67;
  _WCOND67:
  %v___temp_4 := int %v_t_65 > 0;
  jump if boolean %v___temp_4 then _WBEG68 else _WEND69;
  _WBEG68:
  %v_t_70 := int %v_t_63 * int %v_t_65;
  %v_t_63 := int %v_t_70;
  %v_t_72 := int %v_t_65 + -1;
  %v_t_65 := int %v_t_72;
  jump _WCOND67;
  _WEND69:
  %v___temp_5 := int %v_t_63;
  %v_return := int %v___temp_5;
  jump .L_exit;
.L_exit:
  return int %v_return;
]

CFG for ~cl_TopLevel.rfac:
[".L_entry",".L_exit","_IELSE76","_IIF75"]
".L_entry" -> fromList [LabIdent "_IELSE76",LabIdent "_IIF75"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_IELSE76",LabIdent "_IIF75"]
"_IELSE76" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
"_IIF75" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
Liveness at start of .L_entry: in = [("%a_t_74",(1,Ref () (Int ())))], out = [("%a_t_74",(0,Ref () (Int ())))], use = [], kill = []
Liveness at end of .L_entry: in = [("%v___temp_6",(0,Bool ())),("%v_t_74",(3,Int ()))], out = [("%v_t_74",(2,Int ()))], use = [("%v___temp_6",Bool ())], kill = []
Liveness at start of .L_exit: in = [("%v_return",(1,Int ()))], out = [("%v_return",(0,Int ()))], use = [], kill = []
Liveness at end of .L_exit: in = [("%v_return",(0,Int ()))], out = [], use = [("%v_return",Int ())], kill = []
Liveness at start of _IELSE76: in = [("%v_t_74",(1,Int ()))], out = [("%v_t_74",(0,Int ()))], use = [], kill = []
Liveness at end of _IELSE76: in = [("%v_return",(3,Int ()))], out = [("%v_return",(2,Int ()))], use = [], kill = []
Liveness at start of _IIF75: in = [], out = [], use = [], kill = []
Liveness at end of _IIF75: in = [("%v_return",(3,Int ()))], out = [("%v_return",(2,Int ()))], use = [], kill = []
Code: 
.method int ~cl_TopLevel.rfac (int %a_t_74): [
.L_entry:
  %v_t_74 := load int & param 0 %a_t_74;
  %v___temp_6 := int %v_t_74 == 0;
  jump if boolean %v___temp_6 then _IIF75 else _IELSE76;
  _IELSE76:
  %v_t_81 := int %v_t_74 + -1;
  %v_t_82 := call int ~cl_TopLevel.rfac (int %v_t_81);
  %v_t_83 := int %v_t_74 * int %v_t_82;
  %v___temp_8 := int %v_t_83;
  %v_return := int %v___temp_8;
  jump .L_exit;
.L_exit:
  return int %v_return;
  _IIF75:
  %v___temp_7 := 1;
  %v_return := int %v___temp_7;
  jump .L_exit;
]

CFG for ~cl_TopLevel.mfac:
[".L_entry",".L_exit","_IELSE86","_IIF85"]
".L_entry" -> fromList [LabIdent "_IELSE86",LabIdent "_IIF85"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_IELSE86",LabIdent "_IIF85"]
"_IELSE86" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
"_IIF85" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
Liveness at start of .L_entry: in = [("%a_t_84",(1,Ref () (Int ())))], out = [("%a_t_84",(0,Ref () (Int ())))], use = [], kill = []
Liveness at end of .L_entry: in = [("%v___temp_9",(0,Bool ())),("%v_t_84",(3,Int ()))], out = [("%v_t_84",(2,Int ()))], use = [("%v___temp_9",Bool ())], kill = []
Liveness at start of .L_exit: in = [("%v_return",(1,Int ()))], out = [("%v_return",(0,Int ()))], use = [], kill = []
Liveness at end of .L_exit: in = [("%v_return",(0,Int ()))], out = [], use = [("%v_return",Int ())], kill = []
Liveness at start of _IELSE86: in = [("%v_t_84",(1,Int ()))], out = [("%v_t_84",(0,Int ()))], use = [], kill = []
Liveness at end of _IELSE86: in = [("%v_return",(3,Int ()))], out = [("%v_return",(2,Int ()))], use = [], kill = []
Liveness at start of _IIF85: in = [], out = [], use = [], kill = []
Liveness at end of _IIF85: in = [("%v_return",(3,Int ()))], out = [("%v_return",(2,Int ()))], use = [], kill = []
Code: 
.method int ~cl_TopLevel.mfac (int %a_t_84): [
.L_entry:
  %v_t_84 := load int & param 0 %a_t_84;
  %v___temp_9 := int %v_t_84 == 0;
  jump if boolean %v___temp_9 then _IIF85 else _IELSE86;
  _IELSE86:
  %v_t_91 := int %v_t_84 + -1;
  %v_t_92 := call int ~cl_TopLevel.nfac (int %v_t_91);
  %v_t_93 := int %v_t_84 * int %v_t_92;
  %v___temp_11 := int %v_t_93;
  %v_return := int %v___temp_11;
  jump .L_exit;
.L_exit:
  return int %v_return;
  _IIF85:
  %v___temp_10 := 1;
  %v_return := int %v___temp_10;
  jump .L_exit;
]

CFG for ~cl_TopLevel.nfac:
[".L_entry",".L_exit","_IELSE96","_IIF95"]
".L_entry" -> fromList [LabIdent "_IELSE96",LabIdent "_IIF95"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_IELSE96",LabIdent "_IIF95"]
"_IELSE96" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
"_IIF95" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
Liveness at start of .L_entry: in = [("%a_t_94",(1,Ref () (Int ())))], out = [("%a_t_94",(0,Ref () (Int ())))], use = [], kill = []
Liveness at end of .L_entry: in = [("%v___temp_12",(0,Bool ())),("%v_t_94",(3,Int ()))], out = [("%v_t_94",(2,Int ()))], use = [("%v___temp_12",Bool ())], kill = []
Liveness at start of .L_exit: in = [("%v_return",(1,Int ()))], out = [("%v_return",(0,Int ()))], use = [], kill = []
Liveness at end of .L_exit: in = [("%v_return",(0,Int ()))], out = [], use = [("%v_return",Int ())], kill = []
Liveness at start of _IELSE96: in = [], out = [], use = [], kill = []
Liveness at end of _IELSE96: in = [("%v_return",(3,Int ()))], out = [("%v_return",(2,Int ()))], use = [], kill = []
Liveness at start of _IIF95: in = [("%v_t_94",(1,Int ()))], out = [("%v_t_94",(0,Int ()))], use = [], kill = []
Liveness at end of _IIF95: in = [("%v_return",(3,Int ()))], out = [("%v_return",(2,Int ()))], use = [], kill = []
Code: 
.method int ~cl_TopLevel.nfac (int %a_t_94): [
.L_entry:
  %v_t_94 := load int & param 0 %a_t_94;
  %v___temp_12 := int %v_t_94 != 0;
  jump if boolean %v___temp_12 then _IIF95 else _IELSE96;
  _IELSE96:
  %v___temp_14 := 1;
  %v_return := int %v___temp_14;
  jump .L_exit;
.L_exit:
  return int %v_return;
  _IIF95:
  %v_t_100 := int %v_t_94 + -1;
  %v_t_101 := call int ~cl_TopLevel.mfac (int %v_t_100);
  %v_t_102 := int %v_t_94 * int %v_t_101;
  %v___temp_13 := int %v_t_102;
  %v_return := int %v___temp_13;
  jump .L_exit;
]

CFG for ~cl_TopLevel.ifac:
[".L_entry",".L_exit"]
".L_entry" -> fromList [LabIdent ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_entry"]
Liveness at start of .L_entry: in = [("%a_t_104",(1,Ref () (Int ())))], out = [("%a_t_104",(0,Ref () (Int ())))], use = [], kill = []
Liveness at end of .L_entry: in = [("%v_return",(3,Int ()))], out = [("%v_return",(2,Int ()))], use = [], kill = []
Liveness at start of .L_exit: in = [("%v_return",(1,Int ()))], out = [("%v_return",(0,Int ()))], use = [], kill = []
Liveness at end of .L_exit: in = [("%v_return",(0,Int ()))], out = [], use = [("%v_return",Int ())], kill = []
Code: 
.method int ~cl_TopLevel.ifac (int %a_t_104): [
.L_entry:
  %v_t_104 := load int & param 0 %a_t_104;
  %v_t_106 := call int ~cl_TopLevel.ifac2f (1, int %v_t_104);
  %v___temp_15 := int %v_t_106;
  %v_return := int %v___temp_15;
  jump .L_exit;
.L_exit:
  return int %v_return;
]

CFG for ~cl_TopLevel.ifac2f:
[".L_entry",".L_exit","_IELSE110","_IELSE113","_IEND111","_IEND114","_IIF109","_IIF112"]
".L_entry" -> fromList [LabIdent "_IELSE110",LabIdent "_IIF109"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_IEND114",LabIdent "_IIF109",LabIdent "_IIF112"]
"_IELSE110" -> fromList [LabIdent "_IEND111"] <- fromList [LabIdent ".L_entry"]
"_IELSE113" -> fromList [LabIdent "_IEND114"] <- fromList [LabIdent "_IEND111"]
"_IEND111" -> fromList [LabIdent "_IELSE113",LabIdent "_IIF112"] <- fromList [LabIdent "_IELSE110"]
"_IEND114" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_IELSE113"]
"_IIF109" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
"_IIF112" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_IEND111"]
Liveness at start of .L_entry: in = [("%a_t_107",(1,Ref () (Int ()))),("%a_t_108",(2,Ref () (Int ())))], out = [("%a_t_107",(0,Ref () (Int ()))),("%a_t_108",(1,Ref () (Int ())))], use = [], kill = []
Liveness at end of .L_entry: in = [("%v_t_107",(3,Int ())),("%v___temp_16",(0,Bool ())),("%v_t_108",(6,Int ()))], out = [("%v_t_107",(2,Int ())),("%v_t_108",(5,Int ()))], use = [("%v___temp_16",Bool ())], kill = []
Liveness at start of .L_exit: in = [("%v_return",(1,Int ()))], out = [("%v_return",(0,Int ()))], use = [], kill = []
Liveness at end of .L_exit: in = [("%v_return",(0,Int ()))], out = [], use = [("%v_return",Int ())], kill = []
Liveness at start of _IELSE110: in = [("%v_t_107",(4,Int ())),("%v_t_108",(4,Int ()))], out = [("%v_t_107",(3,Int ())),("%v_t_108",(3,Int ()))], use = [], kill = []
Liveness at end of _IELSE110: in = [("%v_t_107",(3,Int ())),("%v_t_108",(3,Int ()))], out = [("%v_t_107",(2,Int ())),("%v_t_108",(2,Int ()))], use = [], kill = []
Liveness at start of _IELSE113: in = [("%v_t_107",(5,Int ())),("%v_t_108",(5,Int ()))], out = [("%v_t_107",(4,Int ())),("%v_t_108",(4,Int ()))], use = [], kill = []
Liveness at end of _IELSE113: in = [("%v_t_107",(4,Int ())),("%v_t_108",(4,Int ()))], out = [("%v_t_107",(3,Int ())),("%v_t_108",(3,Int ()))], use = [], kill = []
Liveness at start of _IEND111: in = [("%v_t_107",(1,Int ())),("%v_t_108",(1,Int ()))], out = [("%v_t_107",(0,Int ())),("%v_t_108",(0,Int ()))], use = [], kill = []
Liveness at end of _IEND111: in = [("%v_t_107",(7,Int ())),("%v_t_108",(7,Int ())),("%v___temp_18",(0,Bool ()))], out = [("%v_t_107",(6,Int ())),("%v_t_108",(6,Int ()))], use = [("%v___temp_18",Bool ())], kill = []
Liveness at start of _IEND114: in = [("%v_t_107",(2,Int ())),("%v_t_108",(2,Int ()))], out = [("%v_t_107",(1,Int ())),("%v_t_108",(1,Int ()))], use = [], kill = []
Liveness at end of _IEND114: in = [("%v_return",(3,Int ()))], out = [("%v_return",(2,Int ()))], use = [], kill = []
Liveness at start of _IIF109: in = [("%v_t_107",(1,Int ()))], out = [("%v_t_107",(0,Int ()))], use = [], kill = []
Liveness at end of _IIF109: in = [("%v_return",(3,Int ()))], out = [("%v_return",(2,Int ()))], use = [], kill = []
Liveness at start of _IIF112: in = [], out = [], use = [], kill = []
Liveness at end of _IIF112: in = [("%v_return",(3,Int ()))], out = [("%v_return",(2,Int ()))], use = [], kill = []
Code: 
.method int ~cl_TopLevel.ifac2f (int %a_t_107, int %a_t_108): [
.L_entry:
  %v_t_107 := load int & param 0 %a_t_107;
  %v_t_108 := load int & param 1 %a_t_108;
  %v___temp_16 := int %v_t_107 == int %v_t_108;
  jump if boolean %v___temp_16 then _IIF109 else _IELSE110;
  _IELSE110:
  jump _IEND111;
  _IEND111:
  %v___temp_18 := int %v_t_107 > int %v_t_108;
  jump if boolean %v___temp_18 then _IIF112 else _IELSE113;
  _IELSE113:
  jump _IEND114;
  _IEND114:
  %v_t_117 := 0;
  %v_t_118 := int %v_t_107 + int %v_t_108;
  %v_t_120 := int %v_t_118 / 2;
  %v_t_117 := int %v_t_120;
  %v_t_121 := call int ~cl_TopLevel.ifac2f (int %v_t_107, int %v_t_117);
  %v_t_123 := int %v_t_117 + 1;
  %v_t_124 := call int ~cl_TopLevel.ifac2f (int %v_t_123, int %v_t_108);
  %v_t_125 := int %v_t_121 * int %v_t_124;
  %v___temp_20 := int %v_t_125;
  %v_return := int %v___temp_20;
  jump .L_exit;
.L_exit:
  return int %v_return;
  _IIF112:
  %v___temp_19 := 1;
  %v_return := int %v___temp_19;
  jump .L_exit;
  _IIF109:
  %v___temp_17 := int %v_t_107;
  %v_return := int %v___temp_17;
  jump .L_exit;
]


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> END STEP Analysing liveness...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> GENERATED INTERMEDIATE STEP Transforming to SSA...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] CFG for ~cl_TopLevel.repStr:
[".L_entry",".L_exit","_WBEG17","_WCOND16","_WEND18"]
".L_entry" -> fromList [LabIdent "_WCOND16"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_WEND18"]
"_WBEG17" -> fromList [LabIdent "_WCOND16"] <- fromList [LabIdent "_WCOND16"]
"_WCOND16" -> fromList [LabIdent "_WBEG17",LabIdent "_WEND18"] <- fromList [LabIdent ".L_entry",LabIdent "_WBEG17"]
"_WEND18" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_WCOND16"]
Code: 
.method String & ~cl_TopLevel.repStr (String & %a_t_9, int %a_t_10): [
.L_entry:
  %v_t_9 := load String & & param 0 %a_t_9;
  %v_t_10 := load int & param 1 %a_t_10;
  %v_t_12 := newstr "";
  %v_t_13 := String & %v_t_12;
  %v_t_15 := 0;
  jump _WCOND16;
  _WCOND16:
  %v___temp_0 := int %v_t_15 < int %v_t_10;
  jump if boolean %v___temp_0 then _WBEG17 else _WEND18;
  _WBEG17:
  %v_t_19 := callvirt String & String.concat (String & %v_t_13, String & %v_t_9);
  %v_t_13 := String & %v_t_19;
  %v_t_21 := int %v_t_15 + 1;
  %v_t_15 := int %v_t_21;
  jump _WCOND16;
  _WEND18:
  %v___temp_1 := String & %v_t_13;
  %v_return := String & %v___temp_1;
  jump .L_exit;
.L_exit:
  return String & %v_return;
]

CFG for ~cl_TopLevel.main:
[".L_entry",".L_exit","_WBEG41","_WCOND40","_WEND42"]
".L_entry" -> fromList [LabIdent "_WCOND40"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_WEND42"]
"_WBEG41" -> fromList [LabIdent "_WCOND40"] <- fromList [LabIdent "_WCOND40"]
"_WCOND40" -> fromList [LabIdent "_WBEG41",LabIdent "_WEND42"] <- fromList [LabIdent ".L_entry",LabIdent "_WBEG41"]
"_WEND42" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_WCOND40"]
Code: 
.method int ~cl_TopLevel.main (): [
.L_entry:
  %v_t_23 := call int ~cl_TopLevel.fac (10);
  call int ~cl_TopLevel.printInt (int %v_t_23);
  %v_t_26 := call int ~cl_TopLevel.rfac (10);
  call int ~cl_TopLevel.printInt (int %v_t_26);
  %v_t_29 := call int ~cl_TopLevel.mfac (10);
  call int ~cl_TopLevel.printInt (int %v_t_29);
  %v_t_32 := call int ~cl_TopLevel.ifac (10);
  call int ~cl_TopLevel.printInt (int %v_t_32);
  %v_t_37 := 10;
  %v_t_39 := 1;
  jump _WCOND40;
  _WCOND40:
  %v___temp_2 := int %v_t_37 > 0;
  jump if boolean %v___temp_2 then _WBEG41 else _WEND42;
  _WBEG41:
  %v_t_43 := int %v_t_39 * int %v_t_37;
  %v_t_39 := int %v_t_43;
  %v_t_45 := int %v_t_37 - 1;
  %v_t_37 := int %v_t_45;
  jump _WCOND40;
  _WEND42:
  call int ~cl_TopLevel.printInt (int %v_t_39);
  %v_t_49 := newstr "=";
  %v_t_51 := call String & ~cl_TopLevel.repStr (String & %v_t_49, 60);
  %v_t_52 := String & %v_t_51;
  call int ~cl_TopLevel.printString (String & %v_t_52);
  %v_t_55 := newstr "hello */";
  call int ~cl_TopLevel.printString (String & %v_t_55);
  %v_t_58 := newstr "/* world";
  call int ~cl_TopLevel.printString (String & %v_t_58);
  %v___temp_3 := 0;
  %v_return := int %v___temp_3;
  jump .L_exit;
.L_exit:
  return int %v_return;
]

CFG for ~cl_TopLevel.fac:
[".L_entry",".L_exit","_WBEG68","_WCOND67","_WEND69"]
".L_entry" -> fromList [LabIdent "_WCOND67"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_WEND69"]
"_WBEG68" -> fromList [LabIdent "_WCOND67"] <- fromList [LabIdent "_WCOND67"]
"_WCOND67" -> fromList [LabIdent "_WBEG68",LabIdent "_WEND69"] <- fromList [LabIdent ".L_entry",LabIdent "_WBEG68"]
"_WEND69" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_WCOND67"]
Code: 
.method int ~cl_TopLevel.fac (int %a_t_61): [
.L_entry:
  %v_t_61 := load int & param 0 %a_t_61;
  %v_t_63 := 0;
  %v_t_65 := 0;
  %v_t_63 := 1;
  %v_t_65 := int %v_t_61;
  jump _WCOND67;
  _WCOND67:
  %v___temp_4 := int %v_t_65 > 0;
  jump if boolean %v___temp_4 then _WBEG68 else _WEND69;
  _WBEG68:
  %v_t_70 := int %v_t_63 * int %v_t_65;
  %v_t_63 := int %v_t_70;
  %v_t_72 := int %v_t_65 + -1;
  %v_t_65 := int %v_t_72;
  jump _WCOND67;
  _WEND69:
  %v___temp_5 := int %v_t_63;
  %v_return := int %v___temp_5;
  jump .L_exit;
.L_exit:
  return int %v_return;
]

CFG for ~cl_TopLevel.rfac:
[".L_entry",".L_exit","_IELSE76","_IIF75"]
".L_entry" -> fromList [LabIdent "_IELSE76",LabIdent "_IIF75"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_IELSE76",LabIdent "_IIF75"]
"_IELSE76" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
"_IIF75" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
Code: 
.method int ~cl_TopLevel.rfac (int %a_t_74): [
.L_entry:
  %v_t_74 := load int & param 0 %a_t_74;
  %v___temp_6 := int %v_t_74 == 0;
  jump if boolean %v___temp_6 then _IIF75 else _IELSE76;
  _IELSE76:
  %v_t_81 := int %v_t_74 + -1;
  %v_t_82 := call int ~cl_TopLevel.rfac (int %v_t_81);
  %v_t_83 := int %v_t_74 * int %v_t_82;
  %v___temp_8 := int %v_t_83;
  %v_return := int %v___temp_8;
  jump .L_exit;
.L_exit:
  return int %v_return;
  _IIF75:
  %v___temp_7 := 1;
  %v_return := int %v___temp_7;
  jump .L_exit;
]

CFG for ~cl_TopLevel.mfac:
[".L_entry",".L_exit","_IELSE86","_IIF85"]
".L_entry" -> fromList [LabIdent "_IELSE86",LabIdent "_IIF85"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_IELSE86",LabIdent "_IIF85"]
"_IELSE86" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
"_IIF85" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
Code: 
.method int ~cl_TopLevel.mfac (int %a_t_84): [
.L_entry:
  %v_t_84 := load int & param 0 %a_t_84;
  %v___temp_9 := int %v_t_84 == 0;
  jump if boolean %v___temp_9 then _IIF85 else _IELSE86;
  _IELSE86:
  %v_t_91 := int %v_t_84 + -1;
  %v_t_92 := call int ~cl_TopLevel.nfac (int %v_t_91);
  %v_t_93 := int %v_t_84 * int %v_t_92;
  %v___temp_11 := int %v_t_93;
  %v_return := int %v___temp_11;
  jump .L_exit;
.L_exit:
  return int %v_return;
  _IIF85:
  %v___temp_10 := 1;
  %v_return := int %v___temp_10;
  jump .L_exit;
]

CFG for ~cl_TopLevel.nfac:
[".L_entry",".L_exit","_IELSE96","_IIF95"]
".L_entry" -> fromList [LabIdent "_IELSE96",LabIdent "_IIF95"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_IELSE96",LabIdent "_IIF95"]
"_IELSE96" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
"_IIF95" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
Code: 
.method int ~cl_TopLevel.nfac (int %a_t_94): [
.L_entry:
  %v_t_94 := load int & param 0 %a_t_94;
  %v___temp_12 := int %v_t_94 != 0;
  jump if boolean %v___temp_12 then _IIF95 else _IELSE96;
  _IELSE96:
  %v___temp_14 := 1;
  %v_return := int %v___temp_14;
  jump .L_exit;
.L_exit:
  return int %v_return;
  _IIF95:
  %v_t_100 := int %v_t_94 + -1;
  %v_t_101 := call int ~cl_TopLevel.mfac (int %v_t_100);
  %v_t_102 := int %v_t_94 * int %v_t_101;
  %v___temp_13 := int %v_t_102;
  %v_return := int %v___temp_13;
  jump .L_exit;
]

CFG for ~cl_TopLevel.ifac:
[".L_entry",".L_exit"]
".L_entry" -> fromList [LabIdent ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_entry"]
Code: 
.method int ~cl_TopLevel.ifac (int %a_t_104): [
.L_entry:
  %v_t_104 := load int & param 0 %a_t_104;
  %v_t_106 := call int ~cl_TopLevel.ifac2f (1, int %v_t_104);
  %v___temp_15 := int %v_t_106;
  %v_return := int %v___temp_15;
  jump .L_exit;
.L_exit:
  return int %v_return;
]

CFG for ~cl_TopLevel.ifac2f:
[".L_entry",".L_exit","_IELSE110","_IELSE113","_IEND111","_IEND114","_IIF109","_IIF112"]
".L_entry" -> fromList [LabIdent "_IELSE110",LabIdent "_IIF109"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_IEND114",LabIdent "_IIF109",LabIdent "_IIF112"]
"_IELSE110" -> fromList [LabIdent "_IEND111"] <- fromList [LabIdent ".L_entry"]
"_IELSE113" -> fromList [LabIdent "_IEND114"] <- fromList [LabIdent "_IEND111"]
"_IEND111" -> fromList [LabIdent "_IELSE113",LabIdent "_IIF112"] <- fromList [LabIdent "_IELSE110"]
"_IEND114" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_IELSE113"]
"_IIF109" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
"_IIF112" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_IEND111"]
Code: 
.method int ~cl_TopLevel.ifac2f (int %a_t_107, int %a_t_108): [
.L_entry:
  %v_t_107 := load int & param 0 %a_t_107;
  %v_t_108 := load int & param 1 %a_t_108;
  %v___temp_16 := int %v_t_107 == int %v_t_108;
  jump if boolean %v___temp_16 then _IIF109 else _IELSE110;
  _IELSE110:
  jump _IEND111;
  _IEND111:
  %v___temp_18 := int %v_t_107 > int %v_t_108;
  jump if boolean %v___temp_18 then _IIF112 else _IELSE113;
  _IELSE113:
  jump _IEND114;
  _IEND114:
  %v_t_117 := 0;
  %v_t_118 := int %v_t_107 + int %v_t_108;
  %v_t_120 := int %v_t_118 / 2;
  %v_t_117 := int %v_t_120;
  %v_t_121 := call int ~cl_TopLevel.ifac2f (int %v_t_107, int %v_t_117);
  %v_t_123 := int %v_t_117 + 1;
  %v_t_124 := call int ~cl_TopLevel.ifac2f (int %v_t_123, int %v_t_108);
  %v_t_125 := int %v_t_121 * int %v_t_124;
  %v___temp_20 := int %v_t_125;
  %v_return := int %v___temp_20;
  jump .L_exit;
.L_exit:
  return int %v_return;
  _IIF112:
  %v___temp_19 := 1;
  %v_return := int %v___temp_19;
  jump .L_exit;
  _IIF109:
  %v___temp_17 := int %v_t_107;
  %v_return := int %v___temp_17;
  jump .L_exit;
]


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> END STEP Transforming to SSA...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> ENTIRE SSA CODE DUMP 


[94m[Info]    [0m[Reporting.Logs.logInfo#75] [(SSA [".L_entry",".L_exit","_WBEG17","_WCOND16","_WEND18"]
".L_entry" -> fromList [LabIdent "_WCOND16"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_WEND18"]
"_WBEG17" -> fromList [LabIdent "_WCOND16"] <- fromList [LabIdent "_WCOND16"]
"_WCOND16" -> fromList [LabIdent "_WBEG17",LabIdent "_WEND18"] <- fromList [LabIdent ".L_entry",LabIdent "_WBEG17"]
"_WEND18" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_WCOND16"]
,Mthd ./play.lat:2:1 (Ref ./play.lat:2:1 (Cl ./play.lat:2:1 (SymIdent "String"))) (QIdent ./play.lat:2:8 (SymIdent "~cl_TopLevel") (SymIdent "repStr")) [Param ./play.lat:2:1 (Ref ./play.lat:2:15 (Cl ./play.lat:2:15 (SymIdent "String"))) (ValIdent "%a_t_9"),Param ./play.lat:2:1 (Int ./play.lat:2:25) (ValIdent "%a_t_10")] [ILabel ./play.lat:2:1 (LabIdent ".L_entry"),ILoad ./play.lat:2:1 (ValIdent "%v_t_9") (PParam ./play.lat:2:1 (Ref ./play.lat:2:1 (Ref ./play.lat:2:15 (Cl ./play.lat:2:15 (SymIdent "String")))) 0 (ValIdent "%a_t_9")),ILoad ./play.lat:2:1 (ValIdent "%v_t_10") (PParam ./play.lat:2:1 (Ref ./play.lat:2:1 (Int ./play.lat:2:25)) 1 (ValIdent "%a_t_10")),INewStr ./play.lat:3:14 (ValIdent "%v_t_12") "",ISet ./play.lat:3:10 (ValIdent "%v_t_13") (VVal ./play.lat:3:10 (Ref ./play.lat:3:14 (Cl ./play.lat:3:14 (SymIdent "String"))) (ValIdent "%v_t_12")),ISet ./play.lat:4:7 (ValIdent "%v_t_15") (VInt ./play.lat:4:7 0),IJmp ./play.lat:5:3 (LabIdent "_WCOND16"),ILabel ./play.lat:5:3 (LabIdent "_WCOND16"),IOp ./play.lat:5:9 (ValIdent "%v___temp_0") (VVal ./play.lat:5:9 (Int ./play.lat:4:3) (ValIdent "%v_t_15")) (OpLTH ./play.lat:5:10) (VVal ./play.lat:5:9 (Int ./play.lat:2:25) (ValIdent "%v_t_10")),ICondJmp ./play.lat:5:9 (VVal ./play.lat:5:9 (Bool ./play.lat:5:9) (ValIdent "%v___temp_0")) (LabIdent "_WBEG17") (LabIdent "_WEND18"),ILabel ./play.lat:5:3 (LabIdent "_WBEG17"),ICall ./play.lat:6:9 (ValIdent "%v_t_19") (CallVirt ./play.lat:6:9 (Ref inside standard library (Cl inside standard library (SymIdent "String"))) (QIdent ./play.lat:6:9 (SymIdent "String") (SymIdent "concat")) [VVal ./play.lat:6:9 (Ref ./play.lat:3:3 (Cl ./play.lat:3:3 (SymIdent "String"))) (ValIdent "%v_t_13"),VVal ./play.lat:6:9 (Ref inside standard library (Cl inside standard library (SymIdent "String"))) (ValIdent "%v_t_9")]),ISet ./play.lat:6:5 (ValIdent "%v_t_13") (VVal ./play.lat:6:5 (Ref inside standard library (Cl inside standard library (SymIdent "String"))) (ValIdent "%v_t_19")),IOp ./play.lat:7:5 (ValIdent "%v_t_21") (VVal ./play.lat:7:5 (Int ./play.lat:7:5) (ValIdent "%v_t_15")) (OpAdd ./play.lat:7:5) (VInt ./play.lat:7:5 1),ISet ./play.lat:7:5 (ValIdent "%v_t_15") (VVal ./play.lat:7:5 (Int ./play.lat:7:5) (ValIdent "%v_t_21")),IJmp ./play.lat:5:3 (LabIdent "_WCOND16"),ILabel ./play.lat:5:3 (LabIdent "_WEND18"),ISet ./play.lat:9:2 (ValIdent "%v___temp_1") (VVal ./play.lat:9:2 (Ref ./play.lat:3:3 (Cl ./play.lat:3:3 (SymIdent "String"))) (ValIdent "%v_t_13")),ISet ./play.lat:9:2 (ValIdent "%v_return") (VVal ./play.lat:9:2 (Ref ./play.lat:3:3 (Cl ./play.lat:3:3 (SymIdent "String"))) (ValIdent "%v___temp_1")),IJmp ./play.lat:9:2 (LabIdent ".L_exit"),ILabel ./play.lat:2:1 (LabIdent ".L_exit"),IRet ./play.lat:2:1 (VVal ./play.lat:2:1 (Ref ./play.lat:2:1 (Cl ./play.lat:2:1 (SymIdent "String"))) (ValIdent "%v_return"))]),(SSA [".L_entry",".L_exit","_WBEG41","_WCOND40","_WEND42"]
".L_entry" -> fromList [LabIdent "_WCOND40"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_WEND42"]
"_WBEG41" -> fromList [LabIdent "_WCOND40"] <- fromList [LabIdent "_WCOND40"]
"_WCOND40" -> fromList [LabIdent "_WBEG41",LabIdent "_WEND42"] <- fromList [LabIdent ".L_entry",LabIdent "_WBEG41"]
"_WEND42" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_WCOND40"]
,Mthd ./play.lat:12:1 (Int ./play.lat:12:1) (QIdent ./play.lat:12:5 (SymIdent "~cl_TopLevel") (SymIdent "main")) [] [ILabel ./play.lat:12:1 (LabIdent ".L_entry"),ICall ./play.lat:13:18 (ValIdent "%v_t_23") (Call ./play.lat:13:18 (Int ./play.lat:34:1) (QIdent ./play.lat:13:18 (SymIdent "~cl_TopLevel") (SymIdent "fac")) [VInt ./play.lat:13:18 10] []),IVCall ./play.lat:13:9 (Call ./play.lat:13:9 (Int inside standard library) (QIdent ./play.lat:13:9 (SymIdent "~cl_TopLevel") (SymIdent "printInt")) [VVal ./play.lat:13:9 (Int inside standard library) (ValIdent "%v_t_23")] []),ICall ./play.lat:14:18 (ValIdent "%v_t_26") (Call ./play.lat:14:18 (Int ./play.lat:47:1) (QIdent ./play.lat:14:18 (SymIdent "~cl_TopLevel") (SymIdent "rfac")) [VInt ./play.lat:14:18 10] []),IVCall ./play.lat:14:9 (Call ./play.lat:14:9 (Int inside standard library) (QIdent ./play.lat:14:9 (SymIdent "~cl_TopLevel") (SymIdent "printInt")) [VVal ./play.lat:14:9 (Int inside standard library) (ValIdent "%v_t_26")] []),ICall ./play.lat:15:18 (ValIdent "%v_t_29") (Call ./play.lat:15:18 (Int ./play.lat:54:1) (QIdent ./play.lat:15:18 (SymIdent "~cl_TopLevel") (SymIdent "mfac")) [VInt ./play.lat:15:18 10] []),IVCall ./play.lat:15:9 (Call ./play.lat:15:9 (Int inside standard library) (QIdent ./play.lat:15:9 (SymIdent "~cl_TopLevel") (SymIdent "printInt")) [VVal ./play.lat:15:9 (Int inside standard library) (ValIdent "%v_t_29")] []),ICall ./play.lat:16:18 (ValIdent "%v_t_32") (Call ./play.lat:16:18 (Int ./play.lat:68:1) (QIdent ./play.lat:16:18 (SymIdent "~cl_TopLevel") (SymIdent "ifac")) [VInt ./play.lat:16:18 10] []),IVCall ./play.lat:16:9 (Call ./play.lat:16:9 (Int inside standard library) (QIdent ./play.lat:16:9 (SymIdent "~cl_TopLevel") (SymIdent "printInt")) [VVal ./play.lat:16:9 (Int inside standard library) (ValIdent "%v_t_32")] []),ISet ./play.lat:19:15 (ValIdent "%v_t_37") (VInt ./play.lat:19:15 10),ISet ./play.lat:20:15 (ValIdent "%v_t_39") (VInt ./play.lat:20:15 1),IJmp ./play.lat:21:11 (LabIdent "_WCOND40"),ILabel ./play.lat:21:11 (LabIdent "_WCOND40"),IOp ./play.lat:21:18 (ValIdent "%v___temp_2") (VVal ./play.lat:21:18 (Int ./play.lat:19:11) (ValIdent "%v_t_37")) (OpGTH ./play.lat:21:19) (VInt ./play.lat:21:18 0),ICondJmp ./play.lat:21:18 (VVal ./play.lat:21:18 (Bool ./play.lat:21:18) (ValIdent "%v___temp_2")) (LabIdent "_WBEG41") (LabIdent "_WEND42"),ILabel ./play.lat:21:11 (LabIdent "_WBEG41"),IOp ./play.lat:22:19 (ValIdent "%v_t_43") (VVal ./play.lat:22:19 (Int ./play.lat:20:11) (ValIdent "%v_t_39")) (OpMul ./play.lat:22:19) (VVal ./play.lat:22:19 (Int ./play.lat:20:11) (ValIdent "%v_t_37")),ISet ./play.lat:22:13 (ValIdent "%v_t_39") (VVal ./play.lat:22:13 (Int ./play.lat:20:11) (ValIdent "%v_t_43")),IOp ./play.lat:23:13 (ValIdent "%v_t_45") (VVal ./play.lat:23:13 (Int ./play.lat:19:11) (ValIdent "%v_t_37")) (OpSub ./play.lat:23:13) (VInt ./play.lat:23:13 1),ISet ./play.lat:23:13 (ValIdent "%v_t_37") (VVal ./play.lat:23:13 (Int ./play.lat:19:11) (ValIdent "%v_t_45")),IJmp ./play.lat:21:11 (LabIdent "_WCOND40"),ILabel ./play.lat:21:11 (LabIdent "_WEND42"),IVCall ./play.lat:25:11 (Call ./play.lat:25:11 (Int inside standard library) (QIdent ./play.lat:25:11 (SymIdent "~cl_TopLevel") (SymIdent "printInt")) [VVal ./play.lat:25:11 (Int inside standard library) (ValIdent "%v_t_39")] []),INewStr ./play.lat:27:22 (ValIdent "%v_t_49") "=",ICall ./play.lat:27:15 (ValIdent "%v_t_51") (Call ./play.lat:27:15 (Ref ./play.lat:2:1 (Cl ./play.lat:2:1 (SymIdent "String"))) (QIdent ./play.lat:27:15 (SymIdent "~cl_TopLevel") (SymIdent "repStr")) [VVal ./play.lat:27:15 (Ref ./play.lat:2:15 (Cl ./play.lat:2:15 (SymIdent "String"))) (ValIdent "%v_t_49"),VInt ./play.lat:27:15 60] []),ISet ./play.lat:27:10 (ValIdent "%v_t_52") (VVal ./play.lat:27:10 (Ref ./play.lat:2:1 (Cl ./play.lat:2:1 (SymIdent "String"))) (ValIdent "%v_t_51")),IVCall ./play.lat:28:9 (Call ./play.lat:28:9 (Int inside standard library) (QIdent ./play.lat:28:9 (SymIdent "~cl_TopLevel") (SymIdent "printString")) [VVal ./play.lat:28:9 (Ref inside standard library (Cl inside standard library (SymIdent "String"))) (ValIdent "%v_t_52")] []),INewStr ./play.lat:29:22 (ValIdent "%v_t_55") "hello */",IVCall ./play.lat:29:9 (Call ./play.lat:29:9 (Int inside standard library) (QIdent ./play.lat:29:9 (SymIdent "~cl_TopLevel") (SymIdent "printString")) [VVal ./play.lat:29:9 (Ref inside standard library (Cl inside standard library (SymIdent "String"))) (ValIdent "%v_t_55")] []),INewStr ./play.lat:30:22 (ValIdent "%v_t_58") "/* world",IVCall ./play.lat:30:9 (Call ./play.lat:30:9 (Int inside standard library) (QIdent ./play.lat:30:9 (SymIdent "~cl_TopLevel") (SymIdent "printString")) [VVal ./play.lat:30:9 (Ref inside standard library (Cl inside standard library (SymIdent "String"))) (ValIdent "%v_t_58")] []),ISet ./play.lat:31:9 (ValIdent "%v___temp_3") (VInt ./play.lat:31:9 0),ISet ./play.lat:31:9 (ValIdent "%v_return") (VVal ./play.lat:31:9 (Int ./play.lat:31:16) (ValIdent "%v___temp_3")),IJmp ./play.lat:31:9 (LabIdent ".L_exit"),ILabel ./play.lat:12:1 (LabIdent ".L_exit"),IRet ./play.lat:12:1 (VVal ./play.lat:12:1 (Int ./play.lat:12:1) (ValIdent "%v_return"))]),(SSA [".L_entry",".L_exit","_WBEG68","_WCOND67","_WEND69"]
".L_entry" -> fromList [LabIdent "_WCOND67"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_WEND69"]
"_WBEG68" -> fromList [LabIdent "_WCOND67"] <- fromList [LabIdent "_WCOND67"]
"_WCOND67" -> fromList [LabIdent "_WBEG68",LabIdent "_WEND69"] <- fromList [LabIdent ".L_entry",LabIdent "_WBEG68"]
"_WEND69" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_WCOND67"]
,Mthd ./play.lat:34:1 (Int ./play.lat:34:1) (QIdent ./play.lat:34:5 (SymIdent "~cl_TopLevel") (SymIdent "fac")) [Param ./play.lat:34:1 (Int ./play.lat:34:9) (ValIdent "%a_t_61")] [ILabel ./play.lat:34:1 (LabIdent ".L_entry"),ILoad ./play.lat:34:1 (ValIdent "%v_t_61") (PParam ./play.lat:34:1 (Ref ./play.lat:34:1 (Int ./play.lat:34:9)) 0 (ValIdent "%a_t_61")),ISet ./play.lat:35:13 (ValIdent "%v_t_63") (VInt ./play.lat:35:13 0),ISet ./play.lat:36:13 (ValIdent "%v_t_65") (VInt ./play.lat:36:13 0),ISet ./play.lat:38:9 (ValIdent "%v_t_63") (VInt ./play.lat:38:9 1),ISet ./play.lat:39:9 (ValIdent "%v_t_65") (VVal ./play.lat:39:9 (Int ./play.lat:34:9) (ValIdent "%v_t_61")),IJmp ./play.lat:40:9 (LabIdent "_WCOND67"),ILabel ./play.lat:40:9 (LabIdent "_WCOND67"),IOp ./play.lat:40:16 (ValIdent "%v___temp_4") (VVal ./play.lat:40:16 (Int ./play.lat:36:9) (ValIdent "%v_t_65")) (OpGTH ./play.lat:40:18) (VInt ./play.lat:40:16 0),ICondJmp ./play.lat:40:16 (VVal ./play.lat:40:16 (Bool ./play.lat:40:16) (ValIdent "%v___temp_4")) (LabIdent "_WBEG68") (LabIdent "_WEND69"),ILabel ./play.lat:40:9 (LabIdent "_WBEG68"),IOp ./play.lat:41:17 (ValIdent "%v_t_70") (VVal ./play.lat:41:17 (Int ./play.lat:35:9) (ValIdent "%v_t_63")) (OpMul ./play.lat:41:17) (VVal ./play.lat:41:17 (Int ./play.lat:35:9) (ValIdent "%v_t_65")),ISet ./play.lat:41:11 (ValIdent "%v_t_63") (VVal ./play.lat:41:11 (Int ./play.lat:35:9) (ValIdent "%v_t_70")),IOp ./play.lat:42:17 (ValIdent "%v_t_72") (VVal ./play.lat:42:17 (Int ./play.lat:42:15) (ValIdent "%v_t_65")) (OpAdd ./play.lat:42:17) (VInt ./play.lat:42:17 (-1)),ISet ./play.lat:42:11 (ValIdent "%v_t_65") (VVal ./play.lat:42:11 (Int ./play.lat:42:15) (ValIdent "%v_t_72")),IJmp ./play.lat:40:9 (LabIdent "_WCOND67"),ILabel ./play.lat:40:9 (LabIdent "_WEND69"),ISet ./play.lat:44:9 (ValIdent "%v___temp_5") (VVal ./play.lat:44:9 (Int ./play.lat:35:9) (ValIdent "%v_t_63")),ISet ./play.lat:44:9 (ValIdent "%v_return") (VVal ./play.lat:44:9 (Int ./play.lat:35:9) (ValIdent "%v___temp_5")),IJmp ./play.lat:44:9 (LabIdent ".L_exit"),ILabel ./play.lat:34:1 (LabIdent ".L_exit"),IRet ./play.lat:34:1 (VVal ./play.lat:34:1 (Int ./play.lat:34:1) (ValIdent "%v_return"))]),(SSA [".L_entry",".L_exit","_IELSE76","_IIF75"]
".L_entry" -> fromList [LabIdent "_IELSE76",LabIdent "_IIF75"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_IELSE76",LabIdent "_IIF75"]
"_IELSE76" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
"_IIF75" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
,Mthd ./play.lat:47:1 (Int ./play.lat:47:1) (QIdent ./play.lat:47:5 (SymIdent "~cl_TopLevel") (SymIdent "rfac")) [Param ./play.lat:47:1 (Int ./play.lat:47:10) (ValIdent "%a_t_74")] [ILabel ./play.lat:47:1 (LabIdent ".L_entry"),ILoad ./play.lat:47:1 (ValIdent "%v_t_74") (PParam ./play.lat:47:1 (Ref ./play.lat:47:1 (Int ./play.lat:47:10)) 0 (ValIdent "%a_t_74")),IOp ./play.lat:48:13 (ValIdent "%v___temp_6") (VVal ./play.lat:48:13 (Int ./play.lat:47:10) (ValIdent "%v_t_74")) (OpEQU ./play.lat:48:15) (VInt ./play.lat:48:13 0),ICondJmp ./play.lat:48:13 (VVal ./play.lat:48:13 (Bool ./play.lat:48:13) (ValIdent "%v___temp_6")) (LabIdent "_IIF75") (LabIdent "_IELSE76"),ILabel ./play.lat:48:9 (LabIdent "_IELSE76"),IOp ./play.lat:51:28 (ValIdent "%v_t_81") (VVal ./play.lat:51:28 (Int ./play.lat:51:27) (ValIdent "%v_t_74")) (OpAdd ./play.lat:51:28) (VInt ./play.lat:51:28 (-1)),ICall ./play.lat:51:22 (ValIdent "%v_t_82") (Call ./play.lat:51:22 (Int ./play.lat:47:1) (QIdent ./play.lat:51:22 (SymIdent "~cl_TopLevel") (SymIdent "rfac")) [VVal ./play.lat:51:22 (Int ./play.lat:47:10) (ValIdent "%v_t_81")] []),IOp ./play.lat:51:20 (ValIdent "%v_t_83") (VVal ./play.lat:51:20 (Int ./play.lat:47:10) (ValIdent "%v_t_74")) (OpMul ./play.lat:51:20) (VVal ./play.lat:51:20 (Int ./play.lat:47:10) (ValIdent "%v_t_82")),ISet ./play.lat:51:11 (ValIdent "%v___temp_8") (VVal ./play.lat:51:11 (Int ./play.lat:47:10) (ValIdent "%v_t_83")),ISet ./play.lat:51:11 (ValIdent "%v_return") (VVal ./play.lat:51:11 (Int ./play.lat:47:10) (ValIdent "%v___temp_8")),IJmp ./play.lat:51:11 (LabIdent ".L_exit"),ILabel ./play.lat:47:1 (LabIdent ".L_exit"),IRet ./play.lat:47:1 (VVal ./play.lat:47:1 (Int ./play.lat:47:1) (ValIdent "%v_return")),ILabel ./play.lat:48:9 (LabIdent "_IIF75"),ISet ./play.lat:49:11 (ValIdent "%v___temp_7") (VInt ./play.lat:49:11 1),ISet ./play.lat:49:11 (ValIdent "%v_return") (VVal ./play.lat:49:11 (Int ./play.lat:49:18) (ValIdent "%v___temp_7")),IJmp ./play.lat:49:11 (LabIdent ".L_exit")]),(SSA [".L_entry",".L_exit","_IELSE86","_IIF85"]
".L_entry" -> fromList [LabIdent "_IELSE86",LabIdent "_IIF85"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_IELSE86",LabIdent "_IIF85"]
"_IELSE86" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
"_IIF85" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
,Mthd ./play.lat:54:1 (Int ./play.lat:54:1) (QIdent ./play.lat:54:5 (SymIdent "~cl_TopLevel") (SymIdent "mfac")) [Param ./play.lat:54:1 (Int ./play.lat:54:10) (ValIdent "%a_t_84")] [ILabel ./play.lat:54:1 (LabIdent ".L_entry"),ILoad ./play.lat:54:1 (ValIdent "%v_t_84") (PParam ./play.lat:54:1 (Ref ./play.lat:54:1 (Int ./play.lat:54:10)) 0 (ValIdent "%a_t_84")),IOp ./play.lat:55:13 (ValIdent "%v___temp_9") (VVal ./play.lat:55:13 (Int ./play.lat:54:10) (ValIdent "%v_t_84")) (OpEQU ./play.lat:55:15) (VInt ./play.lat:55:13 0),ICondJmp ./play.lat:55:13 (VVal ./play.lat:55:13 (Bool ./play.lat:55:13) (ValIdent "%v___temp_9")) (LabIdent "_IIF85") (LabIdent "_IELSE86"),ILabel ./play.lat:55:9 (LabIdent "_IELSE86"),IOp ./play.lat:58:28 (ValIdent "%v_t_91") (VVal ./play.lat:58:28 (Int ./play.lat:58:27) (ValIdent "%v_t_84")) (OpAdd ./play.lat:58:28) (VInt ./play.lat:58:28 (-1)),ICall ./play.lat:58:22 (ValIdent "%v_t_92") (Call ./play.lat:58:22 (Int ./play.lat:61:1) (QIdent ./play.lat:58:22 (SymIdent "~cl_TopLevel") (SymIdent "nfac")) [VVal ./play.lat:58:22 (Int ./play.lat:61:10) (ValIdent "%v_t_91")] []),IOp ./play.lat:58:20 (ValIdent "%v_t_93") (VVal ./play.lat:58:20 (Int ./play.lat:54:10) (ValIdent "%v_t_84")) (OpMul ./play.lat:58:20) (VVal ./play.lat:58:20 (Int ./play.lat:54:10) (ValIdent "%v_t_92")),ISet ./play.lat:58:11 (ValIdent "%v___temp_11") (VVal ./play.lat:58:11 (Int ./play.lat:54:10) (ValIdent "%v_t_93")),ISet ./play.lat:58:11 (ValIdent "%v_return") (VVal ./play.lat:58:11 (Int ./play.lat:54:10) (ValIdent "%v___temp_11")),IJmp ./play.lat:58:11 (LabIdent ".L_exit"),ILabel ./play.lat:54:1 (LabIdent ".L_exit"),IRet ./play.lat:54:1 (VVal ./play.lat:54:1 (Int ./play.lat:54:1) (ValIdent "%v_return")),ILabel ./play.lat:55:9 (LabIdent "_IIF85"),ISet ./play.lat:56:11 (ValIdent "%v___temp_10") (VInt ./play.lat:56:11 1),ISet ./play.lat:56:11 (ValIdent "%v_return") (VVal ./play.lat:56:11 (Int ./play.lat:56:18) (ValIdent "%v___temp_10")),IJmp ./play.lat:56:11 (LabIdent ".L_exit")]),(SSA [".L_entry",".L_exit","_IELSE96","_IIF95"]
".L_entry" -> fromList [LabIdent "_IELSE96",LabIdent "_IIF95"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_IELSE96",LabIdent "_IIF95"]
"_IELSE96" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
"_IIF95" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
,Mthd ./play.lat:61:1 (Int ./play.lat:61:1) (QIdent ./play.lat:61:5 (SymIdent "~cl_TopLevel") (SymIdent "nfac")) [Param ./play.lat:61:1 (Int ./play.lat:61:10) (ValIdent "%a_t_94")] [ILabel ./play.lat:61:1 (LabIdent ".L_entry"),ILoad ./play.lat:61:1 (ValIdent "%v_t_94") (PParam ./play.lat:61:1 (Ref ./play.lat:61:1 (Int ./play.lat:61:10)) 0 (ValIdent "%a_t_94")),IOp ./play.lat:62:13 (ValIdent "%v___temp_12") (VVal ./play.lat:62:13 (Int ./play.lat:61:10) (ValIdent "%v_t_94")) (OpNE ./play.lat:62:15) (VInt ./play.lat:62:13 0),ICondJmp ./play.lat:62:13 (VVal ./play.lat:62:13 (Bool ./play.lat:62:13) (ValIdent "%v___temp_12")) (LabIdent "_IIF95") (LabIdent "_IELSE96"),ILabel ./play.lat:62:9 (LabIdent "_IELSE96"),ISet ./play.lat:65:11 (ValIdent "%v___temp_14") (VInt ./play.lat:65:11 1),ISet ./play.lat:65:11 (ValIdent "%v_return") (VVal ./play.lat:65:11 (Int ./play.lat:65:18) (ValIdent "%v___temp_14")),IJmp ./play.lat:65:11 (LabIdent ".L_exit"),ILabel ./play.lat:61:1 (LabIdent ".L_exit"),IRet ./play.lat:61:1 (VVal ./play.lat:61:1 (Int ./play.lat:61:1) (ValIdent "%v_return")),ILabel ./play.lat:62:9 (LabIdent "_IIF95"),IOp ./play.lat:63:24 (ValIdent "%v_t_100") (VVal ./play.lat:63:24 (Int ./play.lat:63:23) (ValIdent "%v_t_94")) (OpAdd ./play.lat:63:24) (VInt ./play.lat:63:24 (-1)),ICall ./play.lat:63:18 (ValIdent "%v_t_101") (Call ./play.lat:63:18 (Int ./play.lat:54:1) (QIdent ./play.lat:63:18 (SymIdent "~cl_TopLevel") (SymIdent "mfac")) [VVal ./play.lat:63:18 (Int ./play.lat:54:10) (ValIdent "%v_t_100")] []),IOp ./play.lat:63:28 (ValIdent "%v_t_102") (VVal ./play.lat:63:28 (Int ./play.lat:61:10) (ValIdent "%v_t_94")) (OpMul ./play.lat:63:28) (VVal ./play.lat:63:28 (Int ./play.lat:61:10) (ValIdent "%v_t_101")),ISet ./play.lat:63:11 (ValIdent "%v___temp_13") (VVal ./play.lat:63:11 (Int ./play.lat:61:10) (ValIdent "%v_t_102")),ISet ./play.lat:63:11 (ValIdent "%v_return") (VVal ./play.lat:63:11 (Int ./play.lat:61:10) (ValIdent "%v___temp_13")),IJmp ./play.lat:63:11 (LabIdent ".L_exit")]),(SSA [".L_entry",".L_exit"]
".L_entry" -> fromList [LabIdent ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_entry"]
,Mthd ./play.lat:68:1 (Int ./play.lat:68:1) (QIdent ./play.lat:68:5 (SymIdent "~cl_TopLevel") (SymIdent "ifac")) [Param ./play.lat:68:1 (Int ./play.lat:68:10) (ValIdent "%a_t_104")] [ILabel ./play.lat:68:1 (LabIdent ".L_entry"),ILoad ./play.lat:68:1 (ValIdent "%v_t_104") (PParam ./play.lat:68:1 (Ref ./play.lat:68:1 (Int ./play.lat:68:10)) 0 (ValIdent "%a_t_104")),ICall ./play.lat:68:26 (ValIdent "%v_t_106") (Call ./play.lat:68:26 (Int ./play.lat:70:1) (QIdent ./play.lat:68:26 (SymIdent "~cl_TopLevel") (SymIdent "ifac2f")) [VInt ./play.lat:68:26 1,VVal ./play.lat:68:26 (Int ./play.lat:70:19) (ValIdent "%v_t_104")] []),ISet ./play.lat:68:19 (ValIdent "%v___temp_15") (VVal ./play.lat:68:19 (Int ./play.lat:70:1) (ValIdent "%v_t_106")),ISet ./play.lat:68:19 (ValIdent "%v_return") (VVal ./play.lat:68:19 (Int ./play.lat:70:1) (ValIdent "%v___temp_15")),IJmp ./play.lat:68:19 (LabIdent ".L_exit"),ILabel ./play.lat:68:1 (LabIdent ".L_exit"),IRet ./play.lat:68:1 (VVal ./play.lat:68:1 (Int ./play.lat:68:1) (ValIdent "%v_return"))]),(SSA [".L_entry",".L_exit","_IELSE110","_IELSE113","_IEND111","_IEND114","_IIF109","_IIF112"]
".L_entry" -> fromList [LabIdent "_IELSE110",LabIdent "_IIF109"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_IEND114",LabIdent "_IIF109",LabIdent "_IIF112"]
"_IELSE110" -> fromList [LabIdent "_IEND111"] <- fromList [LabIdent ".L_entry"]
"_IELSE113" -> fromList [LabIdent "_IEND114"] <- fromList [LabIdent "_IEND111"]
"_IEND111" -> fromList [LabIdent "_IELSE113",LabIdent "_IIF112"] <- fromList [LabIdent "_IELSE110"]
"_IEND114" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_IELSE113"]
"_IIF109" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
"_IIF112" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_IEND111"]
,Mthd ./play.lat:70:1 (Int ./play.lat:70:1) (QIdent ./play.lat:70:5 (SymIdent "~cl_TopLevel") (SymIdent "ifac2f")) [Param ./play.lat:70:1 (Int ./play.lat:70:12) (ValIdent "%a_t_107"),Param ./play.lat:70:1 (Int ./play.lat:70:19) (ValIdent "%a_t_108")] [ILabel ./play.lat:70:1 (LabIdent ".L_entry"),ILoad ./play.lat:70:1 (ValIdent "%v_t_107") (PParam ./play.lat:70:1 (Ref ./play.lat:70:1 (Int ./play.lat:70:12)) 0 (ValIdent "%a_t_107")),ILoad ./play.lat:70:1 (ValIdent "%v_t_108") (PParam ./play.lat:70:1 (Ref ./play.lat:70:1 (Int ./play.lat:70:19)) 1 (ValIdent "%a_t_108")),IOp ./play.lat:71:13 (ValIdent "%v___temp_16") (VVal ./play.lat:71:13 (Int ./play.lat:70:12) (ValIdent "%v_t_107")) (OpEQU ./play.lat:71:15) (VVal ./play.lat:71:13 (Int ./play.lat:70:19) (ValIdent "%v_t_108")),ICondJmp ./play.lat:71:13 (VVal ./play.lat:71:13 (Bool ./play.lat:71:13) (ValIdent "%v___temp_16")) (LabIdent "_IIF109") (LabIdent "_IELSE110"),ILabel ./play.lat:71:9 (LabIdent "_IELSE110"),IJmp ./play.lat:71:9 (LabIdent "_IEND111"),ILabel ./play.lat:71:9 (LabIdent "_IEND111"),IOp ./play.lat:73:13 (ValIdent "%v___temp_18") (VVal ./play.lat:73:13 (Int ./play.lat:70:12) (ValIdent "%v_t_107")) (OpGTH ./play.lat:73:15) (VVal ./play.lat:73:13 (Int ./play.lat:70:19) (ValIdent "%v_t_108")),ICondJmp ./play.lat:73:13 (VVal ./play.lat:73:13 (Bool ./play.lat:73:13) (ValIdent "%v___temp_18")) (LabIdent "_IIF112") (LabIdent "_IELSE113"),ILabel ./play.lat:73:9 (LabIdent "_IELSE113"),IJmp ./play.lat:73:9 (LabIdent "_IEND114"),ILabel ./play.lat:73:9 (LabIdent "_IEND114"),ISet ./play.lat:75:13 (ValIdent "%v_t_117") (VInt ./play.lat:75:13 0),IOp ./play.lat:76:16 (ValIdent "%v_t_118") (VVal ./play.lat:76:16 (Int ./play.lat:70:12) (ValIdent "%v_t_107")) (OpAdd ./play.lat:76:16) (VVal ./play.lat:76:16 (Int ./play.lat:70:12) (ValIdent "%v_t_108")),IOp ./play.lat:76:21 (ValIdent "%v_t_120") (VVal ./play.lat:76:21 (Int ./play.lat:70:12) (ValIdent "%v_t_118")) (OpDiv ./play.lat:76:21) (VInt ./play.lat:76:21 2),ISet ./play.lat:76:9 (ValIdent "%v_t_117") (VVal ./play.lat:76:9 (Int ./play.lat:70:12) (ValIdent "%v_t_120")),ICall ./play.lat:77:16 (ValIdent "%v_t_121") (Call ./play.lat:77:16 (Int ./play.lat:70:1) (QIdent ./play.lat:77:16 (SymIdent "~cl_TopLevel") (SymIdent "ifac2f")) [VVal ./play.lat:77:16 (Int ./play.lat:70:12) (ValIdent "%v_t_107"),VVal ./play.lat:77:16 (Int ./play.lat:70:19) (ValIdent "%v_t_117")] []),IOp ./play.lat:77:38 (ValIdent "%v_t_123") (VVal ./play.lat:77:38 (Int ./play.lat:77:39) (ValIdent "%v_t_117")) (OpAdd ./play.lat:77:38) (VInt ./play.lat:77:38 1),ICall ./play.lat:77:30 (ValIdent "%v_t_124") (Call ./play.lat:77:30 (Int ./play.lat:70:1) (QIdent ./play.lat:77:30 (SymIdent "~cl_TopLevel") (SymIdent "ifac2f")) [VVal ./play.lat:77:30 (Int ./play.lat:70:12) (ValIdent "%v_t_123"),VVal ./play.lat:77:30 (Int ./play.lat:70:19) (ValIdent "%v_t_108")] []),IOp ./play.lat:77:28 (ValIdent "%v_t_125") (VVal ./play.lat:77:28 (Int ./play.lat:70:1) (ValIdent "%v_t_121")) (OpMul ./play.lat:77:28) (VVal ./play.lat:77:28 (Int ./play.lat:70:1) (ValIdent "%v_t_124")),ISet ./play.lat:77:9 (ValIdent "%v___temp_20") (VVal ./play.lat:77:9 (Int ./play.lat:70:1) (ValIdent "%v_t_125")),ISet ./play.lat:77:9 (ValIdent "%v_return") (VVal ./play.lat:77:9 (Int ./play.lat:70:1) (ValIdent "%v___temp_20")),IJmp ./play.lat:77:9 (LabIdent ".L_exit"),ILabel ./play.lat:70:1 (LabIdent ".L_exit"),IRet ./play.lat:70:1 (VVal ./play.lat:70:1 (Int ./play.lat:70:1) (ValIdent "%v_return")),ILabel ./play.lat:73:9 (LabIdent "_IIF112"),ISet ./play.lat:74:11 (ValIdent "%v___temp_19") (VInt ./play.lat:74:11 1),ISet ./play.lat:74:11 (ValIdent "%v_return") (VVal ./play.lat:74:11 (Int ./play.lat:74:18) (ValIdent "%v___temp_19")),IJmp ./play.lat:74:11 (LabIdent ".L_exit"),ILabel ./play.lat:71:9 (LabIdent "_IIF109"),ISet ./play.lat:72:11 (ValIdent "%v___temp_17") (VVal ./play.lat:72:11 (Int ./play.lat:70:12) (ValIdent "%v_t_107")),ISet ./play.lat:72:11 (ValIdent "%v_return") (VVal ./play.lat:72:11 (Int ./play.lat:70:12) (ValIdent "%v___temp_17")),IJmp ./play.lat:72:11 (LabIdent ".L_exit")])]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> END SSA CODE DUMP 


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> GENERATED INTERMEDIATE STEP Optimising Espresso...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] CFG for ~cl_TopLevel.repStr:
[".L_entry",".L_exit","_WBEG17","_WCOND16","_WEND18"]
".L_entry" -> fromList [LabIdent "_WCOND16"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_WEND18"]
"_WBEG17" -> fromList [LabIdent "_WCOND16"] <- fromList [LabIdent "_WCOND16"]
"_WCOND16" -> fromList [LabIdent "_WBEG17",LabIdent "_WEND18"] <- fromList [LabIdent ".L_entry",LabIdent "_WBEG17"]
"_WEND18" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_WCOND16"]
Code: 
.method String & ~cl_TopLevel.repStr (String & %a_t_9, int %a_t_10): [
.L_entry:
  %v_t_9 := load String & & param 0 %a_t_9;
  %v_t_10 := load int & param 1 %a_t_10;
  %v_t_12 := newstr "";
  %v_t_13 := String & %v_t_12;
  %v_t_15 := 0;
  jump _WCOND16;
  _WCOND16:
  %v___temp_0 := int %v_t_15 < int %v_t_10;
  jump if boolean %v___temp_0 then _WBEG17 else _WEND18;
  _WBEG17:
  %v_t_19 := callvirt String & String.concat (String & %v_t_13, String & %v_t_9);
  %v_t_13 := String & %v_t_19;
  %v_t_21 := int %v_t_15 + 1;
  %v_t_15 := int %v_t_21;
  jump _WCOND16;
  _WEND18:
  %v___temp_1 := String & %v_t_13;
  %v_return := String & %v___temp_1;
  jump .L_exit;
.L_exit:
  return String & %v_return;
]

CFG for ~cl_TopLevel.main:
[".L_entry",".L_exit","_WBEG41","_WCOND40","_WEND42"]
".L_entry" -> fromList [LabIdent "_WCOND40"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_WEND42"]
"_WBEG41" -> fromList [LabIdent "_WCOND40"] <- fromList [LabIdent "_WCOND40"]
"_WCOND40" -> fromList [LabIdent "_WBEG41",LabIdent "_WEND42"] <- fromList [LabIdent ".L_entry",LabIdent "_WBEG41"]
"_WEND42" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_WCOND40"]
Code: 
.method int ~cl_TopLevel.main (): [
.L_entry:
  %v_t_23 := call int ~cl_TopLevel.fac (10);
  call int ~cl_TopLevel.printInt (int %v_t_23);
  %v_t_26 := call int ~cl_TopLevel.rfac (10);
  call int ~cl_TopLevel.printInt (int %v_t_26);
  %v_t_29 := call int ~cl_TopLevel.mfac (10);
  call int ~cl_TopLevel.printInt (int %v_t_29);
  %v_t_32 := call int ~cl_TopLevel.ifac (10);
  call int ~cl_TopLevel.printInt (int %v_t_32);
  %v_t_37 := 10;
  %v_t_39 := 1;
  jump _WCOND40;
  _WCOND40:
  %v___temp_2 := int %v_t_37 > 0;
  jump if boolean %v___temp_2 then _WBEG41 else _WEND42;
  _WBEG41:
  %v_t_43 := int %v_t_39 * int %v_t_37;
  %v_t_39 := int %v_t_43;
  %v_t_45 := int %v_t_37 - 1;
  %v_t_37 := int %v_t_45;
  jump _WCOND40;
  _WEND42:
  call int ~cl_TopLevel.printInt (int %v_t_39);
  %v_t_49 := newstr "=";
  %v_t_51 := call String & ~cl_TopLevel.repStr (String & %v_t_49, 60);
  %v_t_52 := String & %v_t_51;
  call int ~cl_TopLevel.printString (String & %v_t_52);
  %v_t_55 := newstr "hello */";
  call int ~cl_TopLevel.printString (String & %v_t_55);
  %v_t_58 := newstr "/* world";
  call int ~cl_TopLevel.printString (String & %v_t_58);
  %v___temp_3 := 0;
  %v_return := int %v___temp_3;
  jump .L_exit;
.L_exit:
  return int %v_return;
]

CFG for ~cl_TopLevel.fac:
[".L_entry",".L_exit","_WBEG68","_WCOND67","_WEND69"]
".L_entry" -> fromList [LabIdent "_WCOND67"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_WEND69"]
"_WBEG68" -> fromList [LabIdent "_WCOND67"] <- fromList [LabIdent "_WCOND67"]
"_WCOND67" -> fromList [LabIdent "_WBEG68",LabIdent "_WEND69"] <- fromList [LabIdent ".L_entry",LabIdent "_WBEG68"]
"_WEND69" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_WCOND67"]
Code: 
.method int ~cl_TopLevel.fac (int %a_t_61): [
.L_entry:
  %v_t_61 := load int & param 0 %a_t_61;
  %v_t_63 := 0;
  %v_t_65 := 0;
  %v_t_63 := 1;
  %v_t_65 := int %v_t_61;
  jump _WCOND67;
  _WCOND67:
  %v___temp_4 := int %v_t_65 > 0;
  jump if boolean %v___temp_4 then _WBEG68 else _WEND69;
  _WBEG68:
  %v_t_70 := int %v_t_63 * int %v_t_65;
  %v_t_63 := int %v_t_70;
  %v_t_72 := int %v_t_65 + -1;
  %v_t_65 := int %v_t_72;
  jump _WCOND67;
  _WEND69:
  %v___temp_5 := int %v_t_63;
  %v_return := int %v___temp_5;
  jump .L_exit;
.L_exit:
  return int %v_return;
]

CFG for ~cl_TopLevel.rfac:
[".L_entry",".L_exit","_IELSE76","_IIF75"]
".L_entry" -> fromList [LabIdent "_IELSE76",LabIdent "_IIF75"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_IELSE76",LabIdent "_IIF75"]
"_IELSE76" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
"_IIF75" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
Code: 
.method int ~cl_TopLevel.rfac (int %a_t_74): [
.L_entry:
  %v_t_74 := load int & param 0 %a_t_74;
  %v___temp_6 := int %v_t_74 == 0;
  jump if boolean %v___temp_6 then _IIF75 else _IELSE76;
  _IELSE76:
  %v_t_81 := int %v_t_74 + -1;
  %v_t_82 := call int ~cl_TopLevel.rfac (int %v_t_81);
  %v_t_83 := int %v_t_74 * int %v_t_82;
  %v___temp_8 := int %v_t_83;
  %v_return := int %v___temp_8;
  jump .L_exit;
.L_exit:
  return int %v_return;
  _IIF75:
  %v___temp_7 := 1;
  %v_return := int %v___temp_7;
  jump .L_exit;
]

CFG for ~cl_TopLevel.mfac:
[".L_entry",".L_exit","_IELSE86","_IIF85"]
".L_entry" -> fromList [LabIdent "_IELSE86",LabIdent "_IIF85"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_IELSE86",LabIdent "_IIF85"]
"_IELSE86" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
"_IIF85" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
Code: 
.method int ~cl_TopLevel.mfac (int %a_t_84): [
.L_entry:
  %v_t_84 := load int & param 0 %a_t_84;
  %v___temp_9 := int %v_t_84 == 0;
  jump if boolean %v___temp_9 then _IIF85 else _IELSE86;
  _IELSE86:
  %v_t_91 := int %v_t_84 + -1;
  %v_t_92 := call int ~cl_TopLevel.nfac (int %v_t_91);
  %v_t_93 := int %v_t_84 * int %v_t_92;
  %v___temp_11 := int %v_t_93;
  %v_return := int %v___temp_11;
  jump .L_exit;
.L_exit:
  return int %v_return;
  _IIF85:
  %v___temp_10 := 1;
  %v_return := int %v___temp_10;
  jump .L_exit;
]

CFG for ~cl_TopLevel.nfac:
[".L_entry",".L_exit","_IELSE96","_IIF95"]
".L_entry" -> fromList [LabIdent "_IELSE96",LabIdent "_IIF95"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_IELSE96",LabIdent "_IIF95"]
"_IELSE96" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
"_IIF95" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
Code: 
.method int ~cl_TopLevel.nfac (int %a_t_94): [
.L_entry:
  %v_t_94 := load int & param 0 %a_t_94;
  %v___temp_12 := int %v_t_94 != 0;
  jump if boolean %v___temp_12 then _IIF95 else _IELSE96;
  _IELSE96:
  %v___temp_14 := 1;
  %v_return := int %v___temp_14;
  jump .L_exit;
.L_exit:
  return int %v_return;
  _IIF95:
  %v_t_100 := int %v_t_94 + -1;
  %v_t_101 := call int ~cl_TopLevel.mfac (int %v_t_100);
  %v_t_102 := int %v_t_94 * int %v_t_101;
  %v___temp_13 := int %v_t_102;
  %v_return := int %v___temp_13;
  jump .L_exit;
]

CFG for ~cl_TopLevel.ifac:
[".L_entry",".L_exit"]
".L_entry" -> fromList [LabIdent ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_entry"]
Code: 
.method int ~cl_TopLevel.ifac (int %a_t_104): [
.L_entry:
  %v_t_104 := load int & param 0 %a_t_104;
  %v_t_106 := call int ~cl_TopLevel.ifac2f (1, int %v_t_104);
  %v___temp_15 := int %v_t_106;
  %v_return := int %v___temp_15;
  jump .L_exit;
.L_exit:
  return int %v_return;
]

CFG for ~cl_TopLevel.ifac2f:
[".L_entry",".L_exit","_IELSE110","_IELSE113","_IEND111","_IEND114","_IIF109","_IIF112"]
".L_entry" -> fromList [LabIdent "_IELSE110",LabIdent "_IIF109"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_IEND114",LabIdent "_IIF109",LabIdent "_IIF112"]
"_IELSE110" -> fromList [LabIdent "_IEND111"] <- fromList [LabIdent ".L_entry"]
"_IELSE113" -> fromList [LabIdent "_IEND114"] <- fromList [LabIdent "_IEND111"]
"_IEND111" -> fromList [LabIdent "_IELSE113",LabIdent "_IIF112"] <- fromList [LabIdent "_IELSE110"]
"_IEND114" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_IELSE113"]
"_IIF109" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
"_IIF112" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_IEND111"]
Code: 
.method int ~cl_TopLevel.ifac2f (int %a_t_107, int %a_t_108): [
.L_entry:
  %v_t_107 := load int & param 0 %a_t_107;
  %v_t_108 := load int & param 1 %a_t_108;
  %v___temp_16 := int %v_t_107 == int %v_t_108;
  jump if boolean %v___temp_16 then _IIF109 else _IELSE110;
  _IELSE110:
  jump _IEND111;
  _IEND111:
  %v___temp_18 := int %v_t_107 > int %v_t_108;
  jump if boolean %v___temp_18 then _IIF112 else _IELSE113;
  _IELSE113:
  jump _IEND114;
  _IEND114:
  %v_t_117 := 0;
  %v_t_118 := int %v_t_107 + int %v_t_108;
  %v_t_120 := int %v_t_118 / 2;
  %v_t_117 := int %v_t_120;
  %v_t_121 := call int ~cl_TopLevel.ifac2f (int %v_t_107, int %v_t_117);
  %v_t_123 := int %v_t_117 + 1;
  %v_t_124 := call int ~cl_TopLevel.ifac2f (int %v_t_123, int %v_t_108);
  %v_t_125 := int %v_t_121 * int %v_t_124;
  %v___temp_20 := int %v_t_125;
  %v_return := int %v___temp_20;
  jump .L_exit;
.L_exit:
  return int %v_return;
  _IIF112:
  %v___temp_19 := 1;
  %v_return := int %v___temp_19;
  jump .L_exit;
  _IIF109:
  %v___temp_17 := int %v_t_107;
  %v_return := int %v___temp_17;
  jump .L_exit;
]


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> END STEP Optimising Espresso...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> ENTIRE OPTIMIZED CODE DUMP 


[94m[Info]    [0m[Reporting.Logs.logInfo#75] [(SSA [".L_entry",".L_exit","_WBEG17","_WCOND16","_WEND18"]
".L_entry" -> fromList [LabIdent "_WCOND16"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_WEND18"]
"_WBEG17" -> fromList [LabIdent "_WCOND16"] <- fromList [LabIdent "_WCOND16"]
"_WCOND16" -> fromList [LabIdent "_WBEG17",LabIdent "_WEND18"] <- fromList [LabIdent ".L_entry",LabIdent "_WBEG17"]
"_WEND18" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_WCOND16"]
,Mthd ./play.lat:2:1 (Ref ./play.lat:2:1 (Cl ./play.lat:2:1 (SymIdent "String"))) (QIdent ./play.lat:2:8 (SymIdent "~cl_TopLevel") (SymIdent "repStr")) [Param ./play.lat:2:1 (Ref ./play.lat:2:15 (Cl ./play.lat:2:15 (SymIdent "String"))) (ValIdent "%a_t_9"),Param ./play.lat:2:1 (Int ./play.lat:2:25) (ValIdent "%a_t_10")] [ILabel ./play.lat:2:1 (LabIdent ".L_entry"),ILoad ./play.lat:2:1 (ValIdent "%v_t_9") (PParam ./play.lat:2:1 (Ref ./play.lat:2:1 (Ref ./play.lat:2:15 (Cl ./play.lat:2:15 (SymIdent "String")))) 0 (ValIdent "%a_t_9")),ILoad ./play.lat:2:1 (ValIdent "%v_t_10") (PParam ./play.lat:2:1 (Ref ./play.lat:2:1 (Int ./play.lat:2:25)) 1 (ValIdent "%a_t_10")),INewStr ./play.lat:3:14 (ValIdent "%v_t_12") "",ISet ./play.lat:3:10 (ValIdent "%v_t_13") (VVal ./play.lat:3:10 (Ref ./play.lat:3:14 (Cl ./play.lat:3:14 (SymIdent "String"))) (ValIdent "%v_t_12")),ISet ./play.lat:4:7 (ValIdent "%v_t_15") (VInt ./play.lat:4:7 0),IJmp ./play.lat:5:3 (LabIdent "_WCOND16"),ILabel ./play.lat:5:3 (LabIdent "_WCOND16"),IOp ./play.lat:5:9 (ValIdent "%v___temp_0") (VVal ./play.lat:5:9 (Int ./play.lat:4:3) (ValIdent "%v_t_15")) (OpLTH ./play.lat:5:10) (VVal ./play.lat:5:9 (Int ./play.lat:2:25) (ValIdent "%v_t_10")),ICondJmp ./play.lat:5:9 (VVal ./play.lat:5:9 (Bool ./play.lat:5:9) (ValIdent "%v___temp_0")) (LabIdent "_WBEG17") (LabIdent "_WEND18"),ILabel ./play.lat:5:3 (LabIdent "_WBEG17"),ICall ./play.lat:6:9 (ValIdent "%v_t_19") (CallVirt ./play.lat:6:9 (Ref inside standard library (Cl inside standard library (SymIdent "String"))) (QIdent ./play.lat:6:9 (SymIdent "String") (SymIdent "concat")) [VVal ./play.lat:6:9 (Ref ./play.lat:3:3 (Cl ./play.lat:3:3 (SymIdent "String"))) (ValIdent "%v_t_13"),VVal ./play.lat:6:9 (Ref inside standard library (Cl inside standard library (SymIdent "String"))) (ValIdent "%v_t_9")]),ISet ./play.lat:6:5 (ValIdent "%v_t_13") (VVal ./play.lat:6:5 (Ref inside standard library (Cl inside standard library (SymIdent "String"))) (ValIdent "%v_t_19")),IOp ./play.lat:7:5 (ValIdent "%v_t_21") (VVal ./play.lat:7:5 (Int ./play.lat:7:5) (ValIdent "%v_t_15")) (OpAdd ./play.lat:7:5) (VInt ./play.lat:7:5 1),ISet ./play.lat:7:5 (ValIdent "%v_t_15") (VVal ./play.lat:7:5 (Int ./play.lat:7:5) (ValIdent "%v_t_21")),IJmp ./play.lat:5:3 (LabIdent "_WCOND16"),ILabel ./play.lat:5:3 (LabIdent "_WEND18"),ISet ./play.lat:9:2 (ValIdent "%v___temp_1") (VVal ./play.lat:9:2 (Ref ./play.lat:3:3 (Cl ./play.lat:3:3 (SymIdent "String"))) (ValIdent "%v_t_13")),ISet ./play.lat:9:2 (ValIdent "%v_return") (VVal ./play.lat:9:2 (Ref ./play.lat:3:3 (Cl ./play.lat:3:3 (SymIdent "String"))) (ValIdent "%v___temp_1")),IJmp ./play.lat:9:2 (LabIdent ".L_exit"),ILabel ./play.lat:2:1 (LabIdent ".L_exit"),IRet ./play.lat:2:1 (VVal ./play.lat:2:1 (Ref ./play.lat:2:1 (Cl ./play.lat:2:1 (SymIdent "String"))) (ValIdent "%v_return"))]),(SSA [".L_entry",".L_exit","_WBEG41","_WCOND40","_WEND42"]
".L_entry" -> fromList [LabIdent "_WCOND40"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_WEND42"]
"_WBEG41" -> fromList [LabIdent "_WCOND40"] <- fromList [LabIdent "_WCOND40"]
"_WCOND40" -> fromList [LabIdent "_WBEG41",LabIdent "_WEND42"] <- fromList [LabIdent ".L_entry",LabIdent "_WBEG41"]
"_WEND42" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_WCOND40"]
,Mthd ./play.lat:12:1 (Int ./play.lat:12:1) (QIdent ./play.lat:12:5 (SymIdent "~cl_TopLevel") (SymIdent "main")) [] [ILabel ./play.lat:12:1 (LabIdent ".L_entry"),ICall ./play.lat:13:18 (ValIdent "%v_t_23") (Call ./play.lat:13:18 (Int ./play.lat:34:1) (QIdent ./play.lat:13:18 (SymIdent "~cl_TopLevel") (SymIdent "fac")) [VInt ./play.lat:13:18 10] []),IVCall ./play.lat:13:9 (Call ./play.lat:13:9 (Int inside standard library) (QIdent ./play.lat:13:9 (SymIdent "~cl_TopLevel") (SymIdent "printInt")) [VVal ./play.lat:13:9 (Int inside standard library) (ValIdent "%v_t_23")] []),ICall ./play.lat:14:18 (ValIdent "%v_t_26") (Call ./play.lat:14:18 (Int ./play.lat:47:1) (QIdent ./play.lat:14:18 (SymIdent "~cl_TopLevel") (SymIdent "rfac")) [VInt ./play.lat:14:18 10] []),IVCall ./play.lat:14:9 (Call ./play.lat:14:9 (Int inside standard library) (QIdent ./play.lat:14:9 (SymIdent "~cl_TopLevel") (SymIdent "printInt")) [VVal ./play.lat:14:9 (Int inside standard library) (ValIdent "%v_t_26")] []),ICall ./play.lat:15:18 (ValIdent "%v_t_29") (Call ./play.lat:15:18 (Int ./play.lat:54:1) (QIdent ./play.lat:15:18 (SymIdent "~cl_TopLevel") (SymIdent "mfac")) [VInt ./play.lat:15:18 10] []),IVCall ./play.lat:15:9 (Call ./play.lat:15:9 (Int inside standard library) (QIdent ./play.lat:15:9 (SymIdent "~cl_TopLevel") (SymIdent "printInt")) [VVal ./play.lat:15:9 (Int inside standard library) (ValIdent "%v_t_29")] []),ICall ./play.lat:16:18 (ValIdent "%v_t_32") (Call ./play.lat:16:18 (Int ./play.lat:68:1) (QIdent ./play.lat:16:18 (SymIdent "~cl_TopLevel") (SymIdent "ifac")) [VInt ./play.lat:16:18 10] []),IVCall ./play.lat:16:9 (Call ./play.lat:16:9 (Int inside standard library) (QIdent ./play.lat:16:9 (SymIdent "~cl_TopLevel") (SymIdent "printInt")) [VVal ./play.lat:16:9 (Int inside standard library) (ValIdent "%v_t_32")] []),ISet ./play.lat:19:15 (ValIdent "%v_t_37") (VInt ./play.lat:19:15 10),ISet ./play.lat:20:15 (ValIdent "%v_t_39") (VInt ./play.lat:20:15 1),IJmp ./play.lat:21:11 (LabIdent "_WCOND40"),ILabel ./play.lat:21:11 (LabIdent "_WCOND40"),IOp ./play.lat:21:18 (ValIdent "%v___temp_2") (VVal ./play.lat:21:18 (Int ./play.lat:19:11) (ValIdent "%v_t_37")) (OpGTH ./play.lat:21:19) (VInt ./play.lat:21:18 0),ICondJmp ./play.lat:21:18 (VVal ./play.lat:21:18 (Bool ./play.lat:21:18) (ValIdent "%v___temp_2")) (LabIdent "_WBEG41") (LabIdent "_WEND42"),ILabel ./play.lat:21:11 (LabIdent "_WBEG41"),IOp ./play.lat:22:19 (ValIdent "%v_t_43") (VVal ./play.lat:22:19 (Int ./play.lat:20:11) (ValIdent "%v_t_39")) (OpMul ./play.lat:22:19) (VVal ./play.lat:22:19 (Int ./play.lat:20:11) (ValIdent "%v_t_37")),ISet ./play.lat:22:13 (ValIdent "%v_t_39") (VVal ./play.lat:22:13 (Int ./play.lat:20:11) (ValIdent "%v_t_43")),IOp ./play.lat:23:13 (ValIdent "%v_t_45") (VVal ./play.lat:23:13 (Int ./play.lat:19:11) (ValIdent "%v_t_37")) (OpSub ./play.lat:23:13) (VInt ./play.lat:23:13 1),ISet ./play.lat:23:13 (ValIdent "%v_t_37") (VVal ./play.lat:23:13 (Int ./play.lat:19:11) (ValIdent "%v_t_45")),IJmp ./play.lat:21:11 (LabIdent "_WCOND40"),ILabel ./play.lat:21:11 (LabIdent "_WEND42"),IVCall ./play.lat:25:11 (Call ./play.lat:25:11 (Int inside standard library) (QIdent ./play.lat:25:11 (SymIdent "~cl_TopLevel") (SymIdent "printInt")) [VVal ./play.lat:25:11 (Int inside standard library) (ValIdent "%v_t_39")] []),INewStr ./play.lat:27:22 (ValIdent "%v_t_49") "=",ICall ./play.lat:27:15 (ValIdent "%v_t_51") (Call ./play.lat:27:15 (Ref ./play.lat:2:1 (Cl ./play.lat:2:1 (SymIdent "String"))) (QIdent ./play.lat:27:15 (SymIdent "~cl_TopLevel") (SymIdent "repStr")) [VVal ./play.lat:27:15 (Ref ./play.lat:2:15 (Cl ./play.lat:2:15 (SymIdent "String"))) (ValIdent "%v_t_49"),VInt ./play.lat:27:15 60] []),ISet ./play.lat:27:10 (ValIdent "%v_t_52") (VVal ./play.lat:27:10 (Ref ./play.lat:2:1 (Cl ./play.lat:2:1 (SymIdent "String"))) (ValIdent "%v_t_51")),IVCall ./play.lat:28:9 (Call ./play.lat:28:9 (Int inside standard library) (QIdent ./play.lat:28:9 (SymIdent "~cl_TopLevel") (SymIdent "printString")) [VVal ./play.lat:28:9 (Ref inside standard library (Cl inside standard library (SymIdent "String"))) (ValIdent "%v_t_52")] []),INewStr ./play.lat:29:22 (ValIdent "%v_t_55") "hello */",IVCall ./play.lat:29:9 (Call ./play.lat:29:9 (Int inside standard library) (QIdent ./play.lat:29:9 (SymIdent "~cl_TopLevel") (SymIdent "printString")) [VVal ./play.lat:29:9 (Ref inside standard library (Cl inside standard library (SymIdent "String"))) (ValIdent "%v_t_55")] []),INewStr ./play.lat:30:22 (ValIdent "%v_t_58") "/* world",IVCall ./play.lat:30:9 (Call ./play.lat:30:9 (Int inside standard library) (QIdent ./play.lat:30:9 (SymIdent "~cl_TopLevel") (SymIdent "printString")) [VVal ./play.lat:30:9 (Ref inside standard library (Cl inside standard library (SymIdent "String"))) (ValIdent "%v_t_58")] []),ISet ./play.lat:31:9 (ValIdent "%v___temp_3") (VInt ./play.lat:31:9 0),ISet ./play.lat:31:9 (ValIdent "%v_return") (VVal ./play.lat:31:9 (Int ./play.lat:31:16) (ValIdent "%v___temp_3")),IJmp ./play.lat:31:9 (LabIdent ".L_exit"),ILabel ./play.lat:12:1 (LabIdent ".L_exit"),IRet ./play.lat:12:1 (VVal ./play.lat:12:1 (Int ./play.lat:12:1) (ValIdent "%v_return"))]),(SSA [".L_entry",".L_exit","_WBEG68","_WCOND67","_WEND69"]
".L_entry" -> fromList [LabIdent "_WCOND67"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_WEND69"]
"_WBEG68" -> fromList [LabIdent "_WCOND67"] <- fromList [LabIdent "_WCOND67"]
"_WCOND67" -> fromList [LabIdent "_WBEG68",LabIdent "_WEND69"] <- fromList [LabIdent ".L_entry",LabIdent "_WBEG68"]
"_WEND69" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_WCOND67"]
,Mthd ./play.lat:34:1 (Int ./play.lat:34:1) (QIdent ./play.lat:34:5 (SymIdent "~cl_TopLevel") (SymIdent "fac")) [Param ./play.lat:34:1 (Int ./play.lat:34:9) (ValIdent "%a_t_61")] [ILabel ./play.lat:34:1 (LabIdent ".L_entry"),ILoad ./play.lat:34:1 (ValIdent "%v_t_61") (PParam ./play.lat:34:1 (Ref ./play.lat:34:1 (Int ./play.lat:34:9)) 0 (ValIdent "%a_t_61")),ISet ./play.lat:35:13 (ValIdent "%v_t_63") (VInt ./play.lat:35:13 0),ISet ./play.lat:36:13 (ValIdent "%v_t_65") (VInt ./play.lat:36:13 0),ISet ./play.lat:38:9 (ValIdent "%v_t_63") (VInt ./play.lat:38:9 1),ISet ./play.lat:39:9 (ValIdent "%v_t_65") (VVal ./play.lat:39:9 (Int ./play.lat:34:9) (ValIdent "%v_t_61")),IJmp ./play.lat:40:9 (LabIdent "_WCOND67"),ILabel ./play.lat:40:9 (LabIdent "_WCOND67"),IOp ./play.lat:40:16 (ValIdent "%v___temp_4") (VVal ./play.lat:40:16 (Int ./play.lat:36:9) (ValIdent "%v_t_65")) (OpGTH ./play.lat:40:18) (VInt ./play.lat:40:16 0),ICondJmp ./play.lat:40:16 (VVal ./play.lat:40:16 (Bool ./play.lat:40:16) (ValIdent "%v___temp_4")) (LabIdent "_WBEG68") (LabIdent "_WEND69"),ILabel ./play.lat:40:9 (LabIdent "_WBEG68"),IOp ./play.lat:41:17 (ValIdent "%v_t_70") (VVal ./play.lat:41:17 (Int ./play.lat:35:9) (ValIdent "%v_t_63")) (OpMul ./play.lat:41:17) (VVal ./play.lat:41:17 (Int ./play.lat:35:9) (ValIdent "%v_t_65")),ISet ./play.lat:41:11 (ValIdent "%v_t_63") (VVal ./play.lat:41:11 (Int ./play.lat:35:9) (ValIdent "%v_t_70")),IOp ./play.lat:42:17 (ValIdent "%v_t_72") (VVal ./play.lat:42:17 (Int ./play.lat:42:15) (ValIdent "%v_t_65")) (OpAdd ./play.lat:42:17) (VInt ./play.lat:42:17 (-1)),ISet ./play.lat:42:11 (ValIdent "%v_t_65") (VVal ./play.lat:42:11 (Int ./play.lat:42:15) (ValIdent "%v_t_72")),IJmp ./play.lat:40:9 (LabIdent "_WCOND67"),ILabel ./play.lat:40:9 (LabIdent "_WEND69"),ISet ./play.lat:44:9 (ValIdent "%v___temp_5") (VVal ./play.lat:44:9 (Int ./play.lat:35:9) (ValIdent "%v_t_63")),ISet ./play.lat:44:9 (ValIdent "%v_return") (VVal ./play.lat:44:9 (Int ./play.lat:35:9) (ValIdent "%v___temp_5")),IJmp ./play.lat:44:9 (LabIdent ".L_exit"),ILabel ./play.lat:34:1 (LabIdent ".L_exit"),IRet ./play.lat:34:1 (VVal ./play.lat:34:1 (Int ./play.lat:34:1) (ValIdent "%v_return"))]),(SSA [".L_entry",".L_exit","_IELSE76","_IIF75"]
".L_entry" -> fromList [LabIdent "_IELSE76",LabIdent "_IIF75"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_IELSE76",LabIdent "_IIF75"]
"_IELSE76" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
"_IIF75" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
,Mthd ./play.lat:47:1 (Int ./play.lat:47:1) (QIdent ./play.lat:47:5 (SymIdent "~cl_TopLevel") (SymIdent "rfac")) [Param ./play.lat:47:1 (Int ./play.lat:47:10) (ValIdent "%a_t_74")] [ILabel ./play.lat:47:1 (LabIdent ".L_entry"),ILoad ./play.lat:47:1 (ValIdent "%v_t_74") (PParam ./play.lat:47:1 (Ref ./play.lat:47:1 (Int ./play.lat:47:10)) 0 (ValIdent "%a_t_74")),IOp ./play.lat:48:13 (ValIdent "%v___temp_6") (VVal ./play.lat:48:13 (Int ./play.lat:47:10) (ValIdent "%v_t_74")) (OpEQU ./play.lat:48:15) (VInt ./play.lat:48:13 0),ICondJmp ./play.lat:48:13 (VVal ./play.lat:48:13 (Bool ./play.lat:48:13) (ValIdent "%v___temp_6")) (LabIdent "_IIF75") (LabIdent "_IELSE76"),ILabel ./play.lat:48:9 (LabIdent "_IELSE76"),IOp ./play.lat:51:28 (ValIdent "%v_t_81") (VVal ./play.lat:51:28 (Int ./play.lat:51:27) (ValIdent "%v_t_74")) (OpAdd ./play.lat:51:28) (VInt ./play.lat:51:28 (-1)),ICall ./play.lat:51:22 (ValIdent "%v_t_82") (Call ./play.lat:51:22 (Int ./play.lat:47:1) (QIdent ./play.lat:51:22 (SymIdent "~cl_TopLevel") (SymIdent "rfac")) [VVal ./play.lat:51:22 (Int ./play.lat:47:10) (ValIdent "%v_t_81")] []),IOp ./play.lat:51:20 (ValIdent "%v_t_83") (VVal ./play.lat:51:20 (Int ./play.lat:47:10) (ValIdent "%v_t_74")) (OpMul ./play.lat:51:20) (VVal ./play.lat:51:20 (Int ./play.lat:47:10) (ValIdent "%v_t_82")),ISet ./play.lat:51:11 (ValIdent "%v___temp_8") (VVal ./play.lat:51:11 (Int ./play.lat:47:10) (ValIdent "%v_t_83")),ISet ./play.lat:51:11 (ValIdent "%v_return") (VVal ./play.lat:51:11 (Int ./play.lat:47:10) (ValIdent "%v___temp_8")),IJmp ./play.lat:51:11 (LabIdent ".L_exit"),ILabel ./play.lat:47:1 (LabIdent ".L_exit"),IRet ./play.lat:47:1 (VVal ./play.lat:47:1 (Int ./play.lat:47:1) (ValIdent "%v_return")),ILabel ./play.lat:48:9 (LabIdent "_IIF75"),ISet ./play.lat:49:11 (ValIdent "%v___temp_7") (VInt ./play.lat:49:11 1),ISet ./play.lat:49:11 (ValIdent "%v_return") (VVal ./play.lat:49:11 (Int ./play.lat:49:18) (ValIdent "%v___temp_7")),IJmp ./play.lat:49:11 (LabIdent ".L_exit")]),(SSA [".L_entry",".L_exit","_IELSE86","_IIF85"]
".L_entry" -> fromList [LabIdent "_IELSE86",LabIdent "_IIF85"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_IELSE86",LabIdent "_IIF85"]
"_IELSE86" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
"_IIF85" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
,Mthd ./play.lat:54:1 (Int ./play.lat:54:1) (QIdent ./play.lat:54:5 (SymIdent "~cl_TopLevel") (SymIdent "mfac")) [Param ./play.lat:54:1 (Int ./play.lat:54:10) (ValIdent "%a_t_84")] [ILabel ./play.lat:54:1 (LabIdent ".L_entry"),ILoad ./play.lat:54:1 (ValIdent "%v_t_84") (PParam ./play.lat:54:1 (Ref ./play.lat:54:1 (Int ./play.lat:54:10)) 0 (ValIdent "%a_t_84")),IOp ./play.lat:55:13 (ValIdent "%v___temp_9") (VVal ./play.lat:55:13 (Int ./play.lat:54:10) (ValIdent "%v_t_84")) (OpEQU ./play.lat:55:15) (VInt ./play.lat:55:13 0),ICondJmp ./play.lat:55:13 (VVal ./play.lat:55:13 (Bool ./play.lat:55:13) (ValIdent "%v___temp_9")) (LabIdent "_IIF85") (LabIdent "_IELSE86"),ILabel ./play.lat:55:9 (LabIdent "_IELSE86"),IOp ./play.lat:58:28 (ValIdent "%v_t_91") (VVal ./play.lat:58:28 (Int ./play.lat:58:27) (ValIdent "%v_t_84")) (OpAdd ./play.lat:58:28) (VInt ./play.lat:58:28 (-1)),ICall ./play.lat:58:22 (ValIdent "%v_t_92") (Call ./play.lat:58:22 (Int ./play.lat:61:1) (QIdent ./play.lat:58:22 (SymIdent "~cl_TopLevel") (SymIdent "nfac")) [VVal ./play.lat:58:22 (Int ./play.lat:61:10) (ValIdent "%v_t_91")] []),IOp ./play.lat:58:20 (ValIdent "%v_t_93") (VVal ./play.lat:58:20 (Int ./play.lat:54:10) (ValIdent "%v_t_84")) (OpMul ./play.lat:58:20) (VVal ./play.lat:58:20 (Int ./play.lat:54:10) (ValIdent "%v_t_92")),ISet ./play.lat:58:11 (ValIdent "%v___temp_11") (VVal ./play.lat:58:11 (Int ./play.lat:54:10) (ValIdent "%v_t_93")),ISet ./play.lat:58:11 (ValIdent "%v_return") (VVal ./play.lat:58:11 (Int ./play.lat:54:10) (ValIdent "%v___temp_11")),IJmp ./play.lat:58:11 (LabIdent ".L_exit"),ILabel ./play.lat:54:1 (LabIdent ".L_exit"),IRet ./play.lat:54:1 (VVal ./play.lat:54:1 (Int ./play.lat:54:1) (ValIdent "%v_return")),ILabel ./play.lat:55:9 (LabIdent "_IIF85"),ISet ./play.lat:56:11 (ValIdent "%v___temp_10") (VInt ./play.lat:56:11 1),ISet ./play.lat:56:11 (ValIdent "%v_return") (VVal ./play.lat:56:11 (Int ./play.lat:56:18) (ValIdent "%v___temp_10")),IJmp ./play.lat:56:11 (LabIdent ".L_exit")]),(SSA [".L_entry",".L_exit","_IELSE96","_IIF95"]
".L_entry" -> fromList [LabIdent "_IELSE96",LabIdent "_IIF95"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_IELSE96",LabIdent "_IIF95"]
"_IELSE96" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
"_IIF95" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
,Mthd ./play.lat:61:1 (Int ./play.lat:61:1) (QIdent ./play.lat:61:5 (SymIdent "~cl_TopLevel") (SymIdent "nfac")) [Param ./play.lat:61:1 (Int ./play.lat:61:10) (ValIdent "%a_t_94")] [ILabel ./play.lat:61:1 (LabIdent ".L_entry"),ILoad ./play.lat:61:1 (ValIdent "%v_t_94") (PParam ./play.lat:61:1 (Ref ./play.lat:61:1 (Int ./play.lat:61:10)) 0 (ValIdent "%a_t_94")),IOp ./play.lat:62:13 (ValIdent "%v___temp_12") (VVal ./play.lat:62:13 (Int ./play.lat:61:10) (ValIdent "%v_t_94")) (OpNE ./play.lat:62:15) (VInt ./play.lat:62:13 0),ICondJmp ./play.lat:62:13 (VVal ./play.lat:62:13 (Bool ./play.lat:62:13) (ValIdent "%v___temp_12")) (LabIdent "_IIF95") (LabIdent "_IELSE96"),ILabel ./play.lat:62:9 (LabIdent "_IELSE96"),ISet ./play.lat:65:11 (ValIdent "%v___temp_14") (VInt ./play.lat:65:11 1),ISet ./play.lat:65:11 (ValIdent "%v_return") (VVal ./play.lat:65:11 (Int ./play.lat:65:18) (ValIdent "%v___temp_14")),IJmp ./play.lat:65:11 (LabIdent ".L_exit"),ILabel ./play.lat:61:1 (LabIdent ".L_exit"),IRet ./play.lat:61:1 (VVal ./play.lat:61:1 (Int ./play.lat:61:1) (ValIdent "%v_return")),ILabel ./play.lat:62:9 (LabIdent "_IIF95"),IOp ./play.lat:63:24 (ValIdent "%v_t_100") (VVal ./play.lat:63:24 (Int ./play.lat:63:23) (ValIdent "%v_t_94")) (OpAdd ./play.lat:63:24) (VInt ./play.lat:63:24 (-1)),ICall ./play.lat:63:18 (ValIdent "%v_t_101") (Call ./play.lat:63:18 (Int ./play.lat:54:1) (QIdent ./play.lat:63:18 (SymIdent "~cl_TopLevel") (SymIdent "mfac")) [VVal ./play.lat:63:18 (Int ./play.lat:54:10) (ValIdent "%v_t_100")] []),IOp ./play.lat:63:28 (ValIdent "%v_t_102") (VVal ./play.lat:63:28 (Int ./play.lat:61:10) (ValIdent "%v_t_94")) (OpMul ./play.lat:63:28) (VVal ./play.lat:63:28 (Int ./play.lat:61:10) (ValIdent "%v_t_101")),ISet ./play.lat:63:11 (ValIdent "%v___temp_13") (VVal ./play.lat:63:11 (Int ./play.lat:61:10) (ValIdent "%v_t_102")),ISet ./play.lat:63:11 (ValIdent "%v_return") (VVal ./play.lat:63:11 (Int ./play.lat:61:10) (ValIdent "%v___temp_13")),IJmp ./play.lat:63:11 (LabIdent ".L_exit")]),(SSA [".L_entry",".L_exit"]
".L_entry" -> fromList [LabIdent ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_entry"]
,Mthd ./play.lat:68:1 (Int ./play.lat:68:1) (QIdent ./play.lat:68:5 (SymIdent "~cl_TopLevel") (SymIdent "ifac")) [Param ./play.lat:68:1 (Int ./play.lat:68:10) (ValIdent "%a_t_104")] [ILabel ./play.lat:68:1 (LabIdent ".L_entry"),ILoad ./play.lat:68:1 (ValIdent "%v_t_104") (PParam ./play.lat:68:1 (Ref ./play.lat:68:1 (Int ./play.lat:68:10)) 0 (ValIdent "%a_t_104")),ICall ./play.lat:68:26 (ValIdent "%v_t_106") (Call ./play.lat:68:26 (Int ./play.lat:70:1) (QIdent ./play.lat:68:26 (SymIdent "~cl_TopLevel") (SymIdent "ifac2f")) [VInt ./play.lat:68:26 1,VVal ./play.lat:68:26 (Int ./play.lat:70:19) (ValIdent "%v_t_104")] []),ISet ./play.lat:68:19 (ValIdent "%v___temp_15") (VVal ./play.lat:68:19 (Int ./play.lat:70:1) (ValIdent "%v_t_106")),ISet ./play.lat:68:19 (ValIdent "%v_return") (VVal ./play.lat:68:19 (Int ./play.lat:70:1) (ValIdent "%v___temp_15")),IJmp ./play.lat:68:19 (LabIdent ".L_exit"),ILabel ./play.lat:68:1 (LabIdent ".L_exit"),IRet ./play.lat:68:1 (VVal ./play.lat:68:1 (Int ./play.lat:68:1) (ValIdent "%v_return"))]),(SSA [".L_entry",".L_exit","_IELSE110","_IELSE113","_IEND111","_IEND114","_IIF109","_IIF112"]
".L_entry" -> fromList [LabIdent "_IELSE110",LabIdent "_IIF109"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_IEND114",LabIdent "_IIF109",LabIdent "_IIF112"]
"_IELSE110" -> fromList [LabIdent "_IEND111"] <- fromList [LabIdent ".L_entry"]
"_IELSE113" -> fromList [LabIdent "_IEND114"] <- fromList [LabIdent "_IEND111"]
"_IEND111" -> fromList [LabIdent "_IELSE113",LabIdent "_IIF112"] <- fromList [LabIdent "_IELSE110"]
"_IEND114" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_IELSE113"]
"_IIF109" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
"_IIF112" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_IEND111"]
,Mthd ./play.lat:70:1 (Int ./play.lat:70:1) (QIdent ./play.lat:70:5 (SymIdent "~cl_TopLevel") (SymIdent "ifac2f")) [Param ./play.lat:70:1 (Int ./play.lat:70:12) (ValIdent "%a_t_107"),Param ./play.lat:70:1 (Int ./play.lat:70:19) (ValIdent "%a_t_108")] [ILabel ./play.lat:70:1 (LabIdent ".L_entry"),ILoad ./play.lat:70:1 (ValIdent "%v_t_107") (PParam ./play.lat:70:1 (Ref ./play.lat:70:1 (Int ./play.lat:70:12)) 0 (ValIdent "%a_t_107")),ILoad ./play.lat:70:1 (ValIdent "%v_t_108") (PParam ./play.lat:70:1 (Ref ./play.lat:70:1 (Int ./play.lat:70:19)) 1 (ValIdent "%a_t_108")),IOp ./play.lat:71:13 (ValIdent "%v___temp_16") (VVal ./play.lat:71:13 (Int ./play.lat:70:12) (ValIdent "%v_t_107")) (OpEQU ./play.lat:71:15) (VVal ./play.lat:71:13 (Int ./play.lat:70:19) (ValIdent "%v_t_108")),ICondJmp ./play.lat:71:13 (VVal ./play.lat:71:13 (Bool ./play.lat:71:13) (ValIdent "%v___temp_16")) (LabIdent "_IIF109") (LabIdent "_IELSE110"),ILabel ./play.lat:71:9 (LabIdent "_IELSE110"),IJmp ./play.lat:71:9 (LabIdent "_IEND111"),ILabel ./play.lat:71:9 (LabIdent "_IEND111"),IOp ./play.lat:73:13 (ValIdent "%v___temp_18") (VVal ./play.lat:73:13 (Int ./play.lat:70:12) (ValIdent "%v_t_107")) (OpGTH ./play.lat:73:15) (VVal ./play.lat:73:13 (Int ./play.lat:70:19) (ValIdent "%v_t_108")),ICondJmp ./play.lat:73:13 (VVal ./play.lat:73:13 (Bool ./play.lat:73:13) (ValIdent "%v___temp_18")) (LabIdent "_IIF112") (LabIdent "_IELSE113"),ILabel ./play.lat:73:9 (LabIdent "_IELSE113"),IJmp ./play.lat:73:9 (LabIdent "_IEND114"),ILabel ./play.lat:73:9 (LabIdent "_IEND114"),ISet ./play.lat:75:13 (ValIdent "%v_t_117") (VInt ./play.lat:75:13 0),IOp ./play.lat:76:16 (ValIdent "%v_t_118") (VVal ./play.lat:76:16 (Int ./play.lat:70:12) (ValIdent "%v_t_107")) (OpAdd ./play.lat:76:16) (VVal ./play.lat:76:16 (Int ./play.lat:70:12) (ValIdent "%v_t_108")),IOp ./play.lat:76:21 (ValIdent "%v_t_120") (VVal ./play.lat:76:21 (Int ./play.lat:70:12) (ValIdent "%v_t_118")) (OpDiv ./play.lat:76:21) (VInt ./play.lat:76:21 2),ISet ./play.lat:76:9 (ValIdent "%v_t_117") (VVal ./play.lat:76:9 (Int ./play.lat:70:12) (ValIdent "%v_t_120")),ICall ./play.lat:77:16 (ValIdent "%v_t_121") (Call ./play.lat:77:16 (Int ./play.lat:70:1) (QIdent ./play.lat:77:16 (SymIdent "~cl_TopLevel") (SymIdent "ifac2f")) [VVal ./play.lat:77:16 (Int ./play.lat:70:12) (ValIdent "%v_t_107"),VVal ./play.lat:77:16 (Int ./play.lat:70:19) (ValIdent "%v_t_117")] []),IOp ./play.lat:77:38 (ValIdent "%v_t_123") (VVal ./play.lat:77:38 (Int ./play.lat:77:39) (ValIdent "%v_t_117")) (OpAdd ./play.lat:77:38) (VInt ./play.lat:77:38 1),ICall ./play.lat:77:30 (ValIdent "%v_t_124") (Call ./play.lat:77:30 (Int ./play.lat:70:1) (QIdent ./play.lat:77:30 (SymIdent "~cl_TopLevel") (SymIdent "ifac2f")) [VVal ./play.lat:77:30 (Int ./play.lat:70:12) (ValIdent "%v_t_123"),VVal ./play.lat:77:30 (Int ./play.lat:70:19) (ValIdent "%v_t_108")] []),IOp ./play.lat:77:28 (ValIdent "%v_t_125") (VVal ./play.lat:77:28 (Int ./play.lat:70:1) (ValIdent "%v_t_121")) (OpMul ./play.lat:77:28) (VVal ./play.lat:77:28 (Int ./play.lat:70:1) (ValIdent "%v_t_124")),ISet ./play.lat:77:9 (ValIdent "%v___temp_20") (VVal ./play.lat:77:9 (Int ./play.lat:70:1) (ValIdent "%v_t_125")),ISet ./play.lat:77:9 (ValIdent "%v_return") (VVal ./play.lat:77:9 (Int ./play.lat:70:1) (ValIdent "%v___temp_20")),IJmp ./play.lat:77:9 (LabIdent ".L_exit"),ILabel ./play.lat:70:1 (LabIdent ".L_exit"),IRet ./play.lat:70:1 (VVal ./play.lat:70:1 (Int ./play.lat:70:1) (ValIdent "%v_return")),ILabel ./play.lat:73:9 (LabIdent "_IIF112"),ISet ./play.lat:74:11 (ValIdent "%v___temp_19") (VInt ./play.lat:74:11 1),ISet ./play.lat:74:11 (ValIdent "%v_return") (VVal ./play.lat:74:11 (Int ./play.lat:74:18) (ValIdent "%v___temp_19")),IJmp ./play.lat:74:11 (LabIdent ".L_exit"),ILabel ./play.lat:71:9 (LabIdent "_IIF109"),ISet ./play.lat:72:11 (ValIdent "%v___temp_17") (VVal ./play.lat:72:11 (Int ./play.lat:70:12) (ValIdent "%v_t_107")),ISet ./play.lat:72:11 (ValIdent "%v_return") (VVal ./play.lat:72:11 (Int ./play.lat:70:12) (ValIdent "%v___temp_17")),IJmp ./play.lat:72:11 (LabIdent ".L_exit")])]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> END OPTIMIZED CODE DUMP 


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> GENERATED INTERMEDIATE STEP Reanalysing liveness...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] CFG for ~cl_TopLevel.repStr:
[".L_entry",".L_exit","_WBEG17","_WCOND16","_WEND18"]
".L_entry" -> fromList [LabIdent "_WCOND16"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_WEND18"]
"_WBEG17" -> fromList [LabIdent "_WCOND16"] <- fromList [LabIdent "_WCOND16"]
"_WCOND16" -> fromList [LabIdent "_WBEG17",LabIdent "_WEND18"] <- fromList [LabIdent ".L_entry",LabIdent "_WBEG17"]
"_WEND18" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_WCOND16"]
Liveness at start of .L_entry: in = [("%a_t_10",(3,Ref () (Int ()))),("%v_t_21",(8,Int ())),("%v_t_19",(9,Ref () (Cl () (SymIdent "String")))),("%a_t_9",(2,Ref () (Ref () (Cl () (SymIdent "String")))))], out = [("%a_t_10",(2,Ref () (Int ()))),("%v_t_21",(7,Int ())),("%v_t_19",(8,Ref () (Cl () (SymIdent "String")))),("%a_t_9",(1,Ref () (Ref () (Cl () (SymIdent "String")))))], use = [], kill = []
Liveness at end of .L_entry: in = [("%v_t_21",(3,Int ())),("%v_t_19",(4,Ref () (Cl () (SymIdent "String")))),("%v_t_10",(6,Int ())),("%v_t_12",(4,Ref () (Cl () (SymIdent "String")))),("%v_t_9",(11,Ref () (Cl () (SymIdent "String"))))], out = [("%v_t_21",(2,Int ())),("%v_t_19",(3,Ref () (Cl () (SymIdent "String")))),("%v_t_10",(5,Int ())),("%v_t_12",(3,Ref () (Cl () (SymIdent "String")))),("%v_t_9",(10,Ref () (Cl () (SymIdent "String"))))], use = [], kill = []
Liveness at start of .L_exit: in = [("%v_t_13~2",(2,Ref () (Cl () (SymIdent "String"))))], out = [("%v_t_13~2",(1,Ref () (Cl () (SymIdent "String"))))], use = [], kill = []
Liveness at end of .L_exit: in = [("%v_t_13~2",(0,Ref () (Cl () (SymIdent "String"))))], out = [], use = [("%v_t_13~2",Ref () (Cl () (SymIdent "String")))], kill = []
Liveness at start of _WBEG17: in = [("%v_t_15~2",(3,Int ())),("%v_t_13~2",(2,Ref () (Cl () (SymIdent "String")))),("%v_t_10",(10,Int ())),("%v_t_12",(8,Ref () (Cl () (SymIdent "String")))),("%v_t_9",(2,Ref () (Cl () (SymIdent "String"))))], out = [("%v_t_15~2",(2,Int ())),("%v_t_13~2",(1,Ref () (Cl () (SymIdent "String")))),("%v_t_10",(9,Int ())),("%v_t_12",(7,Ref () (Cl () (SymIdent "String")))),("%v_t_9",(1,Ref () (Cl () (SymIdent "String"))))], use = [], kill = []
Liveness at end of _WBEG17: in = [("%v_t_21",(3,Int ())),("%v_t_19",(4,Ref () (Cl () (SymIdent "String")))),("%v_t_10",(6,Int ())),("%v_t_12",(4,Ref () (Cl () (SymIdent "String")))),("%v_t_9",(11,Ref () (Cl () (SymIdent "String"))))], out = [("%v_t_21",(2,Int ())),("%v_t_19",(3,Ref () (Cl () (SymIdent "String")))),("%v_t_10",(5,Int ())),("%v_t_12",(3,Ref () (Cl () (SymIdent "String")))),("%v_t_9",(10,Ref () (Cl () (SymIdent "String"))))], use = [], kill = []
Liveness at start of _WCOND16: in = [("%v_t_21",(1,Int ())),("%v_t_19",(2,Ref () (Cl () (SymIdent "String")))),("%v_t_10",(4,Int ())),("%v_t_12",(2,Ref () (Cl () (SymIdent "String")))),("%v_t_9",(9,Ref () (Cl () (SymIdent "String"))))], out = [("%v_t_21",(0,Int ())),("%v_t_19",(1,Ref () (Cl () (SymIdent "String")))),("%v_t_10",(3,Int ())),("%v_t_12",(1,Ref () (Cl () (SymIdent "String")))),("%v_t_9",(8,Ref () (Cl () (SymIdent "String"))))], use = [], kill = []
Liveness at end of _WCOND16: in = [("%v___temp_0",(0,Bool ())),("%v_t_15~2",(5,Int ())),("%v_t_13~2",(4,Ref () (Cl () (SymIdent "String")))),("%v_t_10",(12,Int ())),("%v_t_12",(10,Ref () (Cl () (SymIdent "String")))),("%v_t_9",(4,Ref () (Cl () (SymIdent "String"))))], out = [("%v_t_15~2",(4,Int ())),("%v_t_13~2",(3,Ref () (Cl () (SymIdent "String")))),("%v_t_10",(11,Int ())),("%v_t_12",(9,Ref () (Cl () (SymIdent "String")))),("%v_t_9",(3,Ref () (Cl () (SymIdent "String"))))], use = [("%v___temp_0",Bool ())], kill = []
Liveness at start of _WEND18: in = [("%v_t_13~2",(6,Ref () (Cl () (SymIdent "String"))))], out = [("%v_t_13~2",(5,Ref () (Cl () (SymIdent "String"))))], use = [], kill = []
Liveness at end of _WEND18: in = [("%v_t_13~2",(4,Ref () (Cl () (SymIdent "String"))))], out = [("%v_t_13~2",(3,Ref () (Cl () (SymIdent "String"))))], use = [], kill = []
Code: 
.method String & ~cl_TopLevel.repStr (String & %a_t_9, int %a_t_10): [
.L_entry:
  %v_t_9 := load String & & param 0 %a_t_9;
  %v_t_10 := load int & param 1 %a_t_10;
  %v_t_12 := newstr "";
  %v_t_13 := String & %v_t_12;
  %v_t_15 := 0;
  jump _WCOND16;
  _WCOND16:
  %v___temp_0 := int %v_t_15 < int %v_t_10;
  jump if boolean %v___temp_0 then _WBEG17 else _WEND18;
  _WBEG17:
  %v_t_19 := callvirt String & String.concat (String & %v_t_13, String & %v_t_9);
  %v_t_13 := String & %v_t_19;
  %v_t_21 := int %v_t_15 + 1;
  %v_t_15 := int %v_t_21;
  jump _WCOND16;
  _WEND18:
  %v___temp_1 := String & %v_t_13;
  %v_return := String & %v___temp_1;
  jump .L_exit;
.L_exit:
  return String & %v_return;
]

CFG for ~cl_TopLevel.main:
[".L_entry",".L_exit","_WBEG41","_WCOND40","_WEND42"]
".L_entry" -> fromList [LabIdent "_WCOND40"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_WEND42"]
"_WBEG41" -> fromList [LabIdent "_WCOND40"] <- fromList [LabIdent "_WCOND40"]
"_WCOND40" -> fromList [LabIdent "_WBEG41",LabIdent "_WEND42"] <- fromList [LabIdent ".L_entry",LabIdent "_WBEG41"]
"_WEND42" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_WCOND40"]
Liveness at start of .L_entry: in = [("%v_t_43",(14,Int ())),("%v_t_45",(13,Int ()))], out = [("%v_t_43",(13,Int ())),("%v_t_45",(12,Int ()))], use = [], kill = []
Liveness at end of .L_entry: in = [("%v_t_43",(4,Int ())),("%v_t_45",(3,Int ()))], out = [("%v_t_43",(3,Int ())),("%v_t_45",(2,Int ()))], use = [], kill = []
Liveness at start of .L_exit: in = [], out = [], use = [], kill = []
Liveness at end of .L_exit: in = [], out = [], use = [], kill = []
Liveness at start of _WBEG41: in = [("%v_t_37~2",(2,Int ())),("%v_t_39~2",(2,Int ()))], out = [("%v_t_37~2",(1,Int ())),("%v_t_39~2",(1,Int ()))], use = [], kill = []
Liveness at end of _WBEG41: in = [("%v_t_43",(4,Int ())),("%v_t_45",(3,Int ()))], out = [("%v_t_43",(3,Int ())),("%v_t_45",(2,Int ()))], use = [], kill = []
Liveness at start of _WCOND40: in = [("%v_t_43",(2,Int ())),("%v_t_45",(1,Int ()))], out = [("%v_t_43",(1,Int ())),("%v_t_45",(0,Int ()))], use = [], kill = []
Liveness at end of _WCOND40: in = [("%v___temp_2",(0,Bool ())),("%v_t_37~2",(4,Int ())),("%v_t_39~2",(4,Int ()))], out = [("%v_t_37~2",(3,Int ())),("%v_t_39~2",(3,Int ()))], use = [("%v___temp_2",Bool ())], kill = []
Liveness at start of _WEND42: in = [("%v_t_39~2",(2,Int ()))], out = [("%v_t_39~2",(1,Int ()))], use = [], kill = []
Liveness at end of _WEND42: in = [], out = [], use = [], kill = []
Code: 
.method int ~cl_TopLevel.main (): [
.L_entry:
  %v_t_23 := call int ~cl_TopLevel.fac (10);
  call int ~cl_TopLevel.printInt (int %v_t_23);
  %v_t_26 := call int ~cl_TopLevel.rfac (10);
  call int ~cl_TopLevel.printInt (int %v_t_26);
  %v_t_29 := call int ~cl_TopLevel.mfac (10);
  call int ~cl_TopLevel.printInt (int %v_t_29);
  %v_t_32 := call int ~cl_TopLevel.ifac (10);
  call int ~cl_TopLevel.printInt (int %v_t_32);
  %v_t_37 := 10;
  %v_t_39 := 1;
  jump _WCOND40;
  _WCOND40:
  %v___temp_2 := int %v_t_37 > 0;
  jump if boolean %v___temp_2 then _WBEG41 else _WEND42;
  _WBEG41:
  %v_t_43 := int %v_t_39 * int %v_t_37;
  %v_t_39 := int %v_t_43;
  %v_t_45 := int %v_t_37 - 1;
  %v_t_37 := int %v_t_45;
  jump _WCOND40;
  _WEND42:
  call int ~cl_TopLevel.printInt (int %v_t_39);
  %v_t_49 := newstr "=";
  %v_t_51 := call String & ~cl_TopLevel.repStr (String & %v_t_49, 60);
  %v_t_52 := String & %v_t_51;
  call int ~cl_TopLevel.printString (String & %v_t_52);
  %v_t_55 := newstr "hello */";
  call int ~cl_TopLevel.printString (String & %v_t_55);
  %v_t_58 := newstr "/* world";
  call int ~cl_TopLevel.printString (String & %v_t_58);
  %v___temp_3 := 0;
  %v_return := int %v___temp_3;
  jump .L_exit;
.L_exit:
  return int %v_return;
]

CFG for ~cl_TopLevel.fac:
[".L_entry",".L_exit","_WBEG68","_WCOND67","_WEND69"]
".L_entry" -> fromList [LabIdent "_WCOND67"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_WEND69"]
"_WBEG68" -> fromList [LabIdent "_WCOND67"] <- fromList [LabIdent "_WCOND67"]
"_WCOND67" -> fromList [LabIdent "_WBEG68",LabIdent "_WEND69"] <- fromList [LabIdent ".L_entry",LabIdent "_WBEG68"]
"_WEND69" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_WCOND67"]
Liveness at start of .L_entry: in = [("%v_t_72",(7,Int ())),("%v_t_70",(6,Int ())),("%a_t_61",(2,Ref () (Int ())))], out = [("%v_t_72",(6,Int ())),("%v_t_70",(5,Int ())),("%a_t_61",(1,Ref () (Int ())))], use = [], kill = []
Liveness at end of .L_entry: in = [("%v_t_61",(4,Int ())),("%v_t_72",(4,Int ())),("%v_t_70",(3,Int ()))], out = [("%v_t_61",(3,Int ())),("%v_t_72",(3,Int ())),("%v_t_70",(2,Int ()))], use = [], kill = []
Liveness at start of .L_exit: in = [("%v_t_63~3",(2,Int ()))], out = [("%v_t_63~3",(1,Int ()))], use = [], kill = []
Liveness at end of .L_exit: in = [("%v_t_63~3",(0,Int ()))], out = [], use = [("%v_t_63~3",Int ())], kill = []
Liveness at start of _WBEG68: in = [("%v_t_61",(8,Int ())),("%v_t_63~3",(2,Int ())),("%v_t_65~3",(2,Int ()))], out = [("%v_t_61",(7,Int ())),("%v_t_63~3",(1,Int ())),("%v_t_65~3",(1,Int ()))], use = [], kill = []
Liveness at end of _WBEG68: in = [("%v_t_61",(4,Int ())),("%v_t_72",(4,Int ())),("%v_t_70",(3,Int ()))], out = [("%v_t_61",(3,Int ())),("%v_t_72",(3,Int ())),("%v_t_70",(2,Int ()))], use = [], kill = []
Liveness at start of _WCOND67: in = [("%v_t_61",(2,Int ())),("%v_t_72",(2,Int ())),("%v_t_70",(1,Int ()))], out = [("%v_t_61",(1,Int ())),("%v_t_72",(1,Int ())),("%v_t_70",(0,Int ()))], use = [], kill = []
Liveness at end of _WCOND67: in = [("%v_t_61",(10,Int ())),("%v___temp_4",(0,Bool ())),("%v_t_63~3",(4,Int ())),("%v_t_65~3",(4,Int ()))], out = [("%v_t_61",(9,Int ())),("%v_t_63~3",(3,Int ())),("%v_t_65~3",(3,Int ()))], use = [("%v___temp_4",Bool ())], kill = []
Liveness at start of _WEND69: in = [("%v_t_63~3",(6,Int ()))], out = [("%v_t_63~3",(5,Int ()))], use = [], kill = []
Liveness at end of _WEND69: in = [("%v_t_63~3",(4,Int ()))], out = [("%v_t_63~3",(3,Int ()))], use = [], kill = []
Code: 
.method int ~cl_TopLevel.fac (int %a_t_61): [
.L_entry:
  %v_t_61 := load int & param 0 %a_t_61;
  %v_t_63 := 0;
  %v_t_65 := 0;
  %v_t_63 := 1;
  %v_t_65 := int %v_t_61;
  jump _WCOND67;
  _WCOND67:
  %v___temp_4 := int %v_t_65 > 0;
  jump if boolean %v___temp_4 then _WBEG68 else _WEND69;
  _WBEG68:
  %v_t_70 := int %v_t_63 * int %v_t_65;
  %v_t_63 := int %v_t_70;
  %v_t_72 := int %v_t_65 + -1;
  %v_t_65 := int %v_t_72;
  jump _WCOND67;
  _WEND69:
  %v___temp_5 := int %v_t_63;
  %v_return := int %v___temp_5;
  jump .L_exit;
.L_exit:
  return int %v_return;
]

CFG for ~cl_TopLevel.rfac:
[".L_entry",".L_exit","_IELSE76","_IIF75"]
".L_entry" -> fromList [LabIdent "_IELSE76",LabIdent "_IIF75"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_IELSE76",LabIdent "_IIF75"]
"_IELSE76" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
"_IIF75" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
Liveness at start of .L_entry: in = [("%a_t_74",(2,Ref () (Int ()))),("%v_t_83",(11,Int ()))], out = [("%a_t_74",(1,Ref () (Int ()))),("%v_t_83",(10,Int ()))], use = [], kill = []
Liveness at end of .L_entry: in = [("%v___temp_6",(0,Bool ())),("%v_t_83",(7,Int ())),("%v_t_74",(4,Int ()))], out = [("%v_t_83",(6,Int ())),("%v_t_74",(3,Int ()))], use = [("%v___temp_6",Bool ())], kill = []
Liveness at start of .L_exit: in = [("%v_t_83",(1,Int ()))], out = [("%v_t_83",(0,Int ()))], use = [], kill = []
Liveness at end of .L_exit: in = [("%v_return~2",(0,Int ()))], out = [], use = [("%v_return~2",Int ())], kill = []
Liveness at start of _IELSE76: in = [("%v_t_74",(2,Int ()))], out = [("%v_t_74",(1,Int ()))], use = [], kill = []
Liveness at end of _IELSE76: in = [("%v_t_83",(3,Int ()))], out = [("%v_t_83",(2,Int ()))], use = [], kill = []
Liveness at start of _IIF75: in = [("%v_t_83",(5,Int ()))], out = [("%v_t_83",(4,Int ()))], use = [], kill = []
Liveness at end of _IIF75: in = [("%v_t_83",(3,Int ()))], out = [("%v_t_83",(2,Int ()))], use = [], kill = []
Code: 
.method int ~cl_TopLevel.rfac (int %a_t_74): [
.L_entry:
  %v_t_74 := load int & param 0 %a_t_74;
  %v___temp_6 := int %v_t_74 == 0;
  jump if boolean %v___temp_6 then _IIF75 else _IELSE76;
  _IELSE76:
  %v_t_81 := int %v_t_74 + -1;
  %v_t_82 := call int ~cl_TopLevel.rfac (int %v_t_81);
  %v_t_83 := int %v_t_74 * int %v_t_82;
  %v___temp_8 := int %v_t_83;
  %v_return := int %v___temp_8;
  jump .L_exit;
.L_exit:
  return int %v_return;
  _IIF75:
  %v___temp_7 := 1;
  %v_return := int %v___temp_7;
  jump .L_exit;
]

CFG for ~cl_TopLevel.mfac:
[".L_entry",".L_exit","_IELSE86","_IIF85"]
".L_entry" -> fromList [LabIdent "_IELSE86",LabIdent "_IIF85"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_IELSE86",LabIdent "_IIF85"]
"_IELSE86" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
"_IIF85" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
Liveness at start of .L_entry: in = [("%a_t_84",(2,Ref () (Int ()))),("%v_t_93",(11,Int ()))], out = [("%a_t_84",(1,Ref () (Int ()))),("%v_t_93",(10,Int ()))], use = [], kill = []
Liveness at end of .L_entry: in = [("%v_t_93",(7,Int ())),("%v___temp_9",(0,Bool ())),("%v_t_84",(4,Int ()))], out = [("%v_t_93",(6,Int ())),("%v_t_84",(3,Int ()))], use = [("%v___temp_9",Bool ())], kill = []
Liveness at start of .L_exit: in = [("%v_t_93",(1,Int ()))], out = [("%v_t_93",(0,Int ()))], use = [], kill = []
Liveness at end of .L_exit: in = [("%v_return~2",(0,Int ()))], out = [], use = [("%v_return~2",Int ())], kill = []
Liveness at start of _IELSE86: in = [("%v_t_84",(2,Int ()))], out = [("%v_t_84",(1,Int ()))], use = [], kill = []
Liveness at end of _IELSE86: in = [("%v_t_93",(3,Int ()))], out = [("%v_t_93",(2,Int ()))], use = [], kill = []
Liveness at start of _IIF85: in = [("%v_t_93",(5,Int ()))], out = [("%v_t_93",(4,Int ()))], use = [], kill = []
Liveness at end of _IIF85: in = [("%v_t_93",(3,Int ()))], out = [("%v_t_93",(2,Int ()))], use = [], kill = []
Code: 
.method int ~cl_TopLevel.mfac (int %a_t_84): [
.L_entry:
  %v_t_84 := load int & param 0 %a_t_84;
  %v___temp_9 := int %v_t_84 == 0;
  jump if boolean %v___temp_9 then _IIF85 else _IELSE86;
  _IELSE86:
  %v_t_91 := int %v_t_84 + -1;
  %v_t_92 := call int ~cl_TopLevel.nfac (int %v_t_91);
  %v_t_93 := int %v_t_84 * int %v_t_92;
  %v___temp_11 := int %v_t_93;
  %v_return := int %v___temp_11;
  jump .L_exit;
.L_exit:
  return int %v_return;
  _IIF85:
  %v___temp_10 := 1;
  %v_return := int %v___temp_10;
  jump .L_exit;
]

CFG for ~cl_TopLevel.nfac:
[".L_entry",".L_exit","_IELSE96","_IIF95"]
".L_entry" -> fromList [LabIdent "_IELSE96",LabIdent "_IIF95"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_IELSE96",LabIdent "_IIF95"]
"_IELSE96" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
"_IIF95" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
Liveness at start of .L_entry: in = [("%a_t_94",(2,Ref () (Int ()))),("%v_t_102",(11,Int ()))], out = [("%a_t_94",(1,Ref () (Int ()))),("%v_t_102",(10,Int ()))], use = [], kill = []
Liveness at end of .L_entry: in = [("%v___temp_12",(0,Bool ())),("%v_t_94",(4,Int ())),("%v_t_102",(7,Int ()))], out = [("%v_t_94",(3,Int ())),("%v_t_102",(6,Int ()))], use = [("%v___temp_12",Bool ())], kill = []
Liveness at start of .L_exit: in = [("%v_t_102",(1,Int ()))], out = [("%v_t_102",(0,Int ()))], use = [], kill = []
Liveness at end of .L_exit: in = [("%v_return~2",(0,Int ()))], out = [], use = [("%v_return~2",Int ())], kill = []
Liveness at start of _IELSE96: in = [("%v_t_102",(5,Int ()))], out = [("%v_t_102",(4,Int ()))], use = [], kill = []
Liveness at end of _IELSE96: in = [("%v_t_102",(3,Int ()))], out = [("%v_t_102",(2,Int ()))], use = [], kill = []
Liveness at start of _IIF95: in = [("%v_t_94",(2,Int ()))], out = [("%v_t_94",(1,Int ()))], use = [], kill = []
Liveness at end of _IIF95: in = [("%v_t_102",(3,Int ()))], out = [("%v_t_102",(2,Int ()))], use = [], kill = []
Code: 
.method int ~cl_TopLevel.nfac (int %a_t_94): [
.L_entry:
  %v_t_94 := load int & param 0 %a_t_94;
  %v___temp_12 := int %v_t_94 != 0;
  jump if boolean %v___temp_12 then _IIF95 else _IELSE96;
  _IELSE96:
  %v___temp_14 := 1;
  %v_return := int %v___temp_14;
  jump .L_exit;
.L_exit:
  return int %v_return;
  _IIF95:
  %v_t_100 := int %v_t_94 + -1;
  %v_t_101 := call int ~cl_TopLevel.mfac (int %v_t_100);
  %v_t_102 := int %v_t_94 * int %v_t_101;
  %v___temp_13 := int %v_t_102;
  %v_return := int %v___temp_13;
  jump .L_exit;
]

CFG for ~cl_TopLevel.ifac:
[".L_entry",".L_exit"]
".L_entry" -> fromList [LabIdent ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_entry"]
Liveness at start of .L_entry: in = [("%a_t_104",(2,Ref () (Int ())))], out = [("%a_t_104",(1,Ref () (Int ())))], use = [], kill = []
Liveness at end of .L_entry: in = [("%v_t_106",(4,Int ()))], out = [("%v_t_106",(3,Int ()))], use = [], kill = []
Liveness at start of .L_exit: in = [("%v_t_106",(2,Int ()))], out = [("%v_t_106",(1,Int ()))], use = [], kill = []
Liveness at end of .L_exit: in = [("%v_t_106",(0,Int ()))], out = [], use = [("%v_t_106",Int ())], kill = []
Code: 
.method int ~cl_TopLevel.ifac (int %a_t_104): [
.L_entry:
  %v_t_104 := load int & param 0 %a_t_104;
  %v_t_106 := call int ~cl_TopLevel.ifac2f (1, int %v_t_104);
  %v___temp_15 := int %v_t_106;
  %v_return := int %v___temp_15;
  jump .L_exit;
.L_exit:
  return int %v_return;
]

CFG for ~cl_TopLevel.ifac2f:
[".L_entry",".L_exit","_IELSE110","_IELSE113","_IEND111","_IEND114","_IIF109","_IIF112"]
".L_entry" -> fromList [LabIdent "_IELSE110",LabIdent "_IIF109"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_IEND114",LabIdent "_IIF109",LabIdent "_IIF112"]
"_IELSE110" -> fromList [LabIdent "_IEND111"] <- fromList [LabIdent ".L_entry"]
"_IELSE113" -> fromList [LabIdent "_IEND114"] <- fromList [LabIdent "_IEND111"]
"_IEND111" -> fromList [LabIdent "_IELSE113",LabIdent "_IIF112"] <- fromList [LabIdent "_IELSE110"]
"_IEND114" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_IELSE113"]
"_IIF109" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
"_IIF112" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_IEND111"]
Liveness at start of .L_entry: in = [("%a_t_107",(2,Ref () (Int ()))),("%v_t_125",(12,Int ())),("%a_t_108",(3,Ref () (Int ())))], out = [("%a_t_107",(1,Ref () (Int ()))),("%v_t_125",(11,Int ())),("%a_t_108",(2,Ref () (Int ())))], use = [], kill = []
Liveness at end of .L_entry: in = [("%v_t_107",(7,Int ())),("%v_t_125",(7,Int ())),("%v___temp_16",(0,Bool ())),("%v_t_108",(8,Int ()))], out = [("%v_t_107",(6,Int ())),("%v_t_125",(6,Int ())),("%v_t_108",(7,Int ()))], use = [("%v___temp_16",Bool ())], kill = []
Liveness at start of .L_exit: in = [("%v_t_107",(1,Int ())),("%v_t_125",(1,Int ()))], out = [("%v_t_107",(0,Int ())),("%v_t_125",(0,Int ()))], use = [], kill = []
Liveness at end of .L_exit: in = [("%v_return~2",(0,Int ()))], out = [], use = [("%v_return~2",Int ())], kill = []
Liveness at start of _IELSE110: in = [("%v_t_107",(6,Int ())),("%v_t_125",(14,Int ())),("%v_t_108",(6,Int ()))], out = [("%v_t_107",(5,Int ())),("%v_t_125",(13,Int ())),("%v_t_108",(5,Int ()))], use = [], kill = []
Liveness at end of _IELSE110: in = [("%v_t_107",(4,Int ())),("%v_t_125",(12,Int ())),("%v_t_108",(4,Int ()))], out = [("%v_t_107",(3,Int ())),("%v_t_125",(11,Int ())),("%v_t_108",(3,Int ()))], use = [], kill = []
Liveness at start of _IELSE113: in = [("%v_t_107",(6,Int ())),("%v_t_108",(6,Int ()))], out = [("%v_t_107",(5,Int ())),("%v_t_108",(5,Int ()))], use = [], kill = []
Liveness at end of _IELSE113: in = [("%v_t_107",(4,Int ())),("%v_t_108",(4,Int ()))], out = [("%v_t_107",(3,Int ())),("%v_t_108",(3,Int ()))], use = [], kill = []
Liveness at start of _IEND111: in = [("%v_t_107",(2,Int ())),("%v_t_125",(10,Int ())),("%v_t_108",(2,Int ()))], out = [("%v_t_107",(1,Int ())),("%v_t_125",(9,Int ())),("%v_t_108",(1,Int ()))], use = [], kill = []
Liveness at end of _IEND111: in = [("%v_t_107",(7,Int ())),("%v_t_125",(7,Int ())),("%v_t_108",(8,Int ())),("%v___temp_18",(0,Bool ()))], out = [("%v_t_107",(6,Int ())),("%v_t_125",(6,Int ())),("%v_t_108",(7,Int ()))], use = [("%v___temp_18",Bool ())], kill = []
Liveness at start of _IEND114: in = [("%v_t_107",(2,Int ())),("%v_t_108",(2,Int ()))], out = [("%v_t_107",(1,Int ())),("%v_t_108",(1,Int ()))], use = [], kill = []
Liveness at end of _IEND114: in = [("%v_t_107",(3,Int ())),("%v_t_125",(3,Int ()))], out = [("%v_t_107",(2,Int ())),("%v_t_125",(2,Int ()))], use = [], kill = []
Liveness at start of _IIF109: in = [("%v_t_107",(5,Int ())),("%v_t_125",(5,Int ()))], out = [("%v_t_107",(4,Int ())),("%v_t_125",(4,Int ()))], use = [], kill = []
Liveness at end of _IIF109: in = [("%v_t_107",(3,Int ())),("%v_t_125",(3,Int ()))], out = [("%v_t_107",(2,Int ())),("%v_t_125",(2,Int ()))], use = [], kill = []
Liveness at start of _IIF112: in = [("%v_t_107",(5,Int ())),("%v_t_125",(5,Int ()))], out = [("%v_t_107",(4,Int ())),("%v_t_125",(4,Int ()))], use = [], kill = []
Liveness at end of _IIF112: in = [("%v_t_107",(3,Int ())),("%v_t_125",(3,Int ()))], out = [("%v_t_107",(2,Int ())),("%v_t_125",(2,Int ()))], use = [], kill = []
Code: 
.method int ~cl_TopLevel.ifac2f (int %a_t_107, int %a_t_108): [
.L_entry:
  %v_t_107 := load int & param 0 %a_t_107;
  %v_t_108 := load int & param 1 %a_t_108;
  %v___temp_16 := int %v_t_107 == int %v_t_108;
  jump if boolean %v___temp_16 then _IIF109 else _IELSE110;
  _IELSE110:
  jump _IEND111;
  _IEND111:
  %v___temp_18 := int %v_t_107 > int %v_t_108;
  jump if boolean %v___temp_18 then _IIF112 else _IELSE113;
  _IELSE113:
  jump _IEND114;
  _IEND114:
  %v_t_117 := 0;
  %v_t_118 := int %v_t_107 + int %v_t_108;
  %v_t_120 := int %v_t_118 / 2;
  %v_t_117 := int %v_t_120;
  %v_t_121 := call int ~cl_TopLevel.ifac2f (int %v_t_107, int %v_t_117);
  %v_t_123 := int %v_t_117 + 1;
  %v_t_124 := call int ~cl_TopLevel.ifac2f (int %v_t_123, int %v_t_108);
  %v_t_125 := int %v_t_121 * int %v_t_124;
  %v___temp_20 := int %v_t_125;
  %v_return := int %v___temp_20;
  jump .L_exit;
.L_exit:
  return int %v_return;
  _IIF112:
  %v___temp_19 := 1;
  %v_return := int %v___temp_19;
  jump .L_exit;
  _IIF109:
  %v___temp_17 := int %v_t_107;
  %v_return := int %v___temp_17;
  jump .L_exit;
]


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> END STEP Reanalysing liveness...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> GENERATED INTERMEDIATE STEP Allocating registers...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] CFG for ~cl_TopLevel.repStr:
[".L_entry",".L_exit","_WBEG17","_WCOND16","_WEND18"]
".L_entry" -> fromList [LabIdent "_WCOND16"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_WEND18"]
"_WBEG17" -> fromList [LabIdent "_WCOND16"] <- fromList [LabIdent "_WCOND16"]
"_WCOND16" -> fromList [LabIdent "_WBEG17",LabIdent "_WEND18"] <- fromList [LabIdent ".L_entry",LabIdent "_WBEG17"]
"_WEND18" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_WCOND16"]
Liveness at start of .L_entry: in = [("%a_t_10",(3,Ref () (Int ()))),("%v_t_21",(8,Int ())),("%v_t_19",(9,Ref () (Cl () (SymIdent "String")))),("%a_t_9",(2,Ref () (Ref () (Cl () (SymIdent "String")))))], out = [("%a_t_10",(2,Ref () (Int ()))),("%v_t_21",(7,Int ())),("%v_t_19",(8,Ref () (Cl () (SymIdent "String")))),("%a_t_9",(1,Ref () (Ref () (Cl () (SymIdent "String")))))], use = [], kill = []
Liveness at end of .L_entry: in = [("%v_t_21",(3,Int ())),("%v_t_19",(4,Ref () (Cl () (SymIdent "String")))),("%v_t_10",(6,Int ())),("%v_t_12",(4,Ref () (Cl () (SymIdent "String")))),("%v_t_9",(11,Ref () (Cl () (SymIdent "String"))))], out = [("%v_t_21",(2,Int ())),("%v_t_19",(3,Ref () (Cl () (SymIdent "String")))),("%v_t_10",(5,Int ())),("%v_t_12",(3,Ref () (Cl () (SymIdent "String")))),("%v_t_9",(10,Ref () (Cl () (SymIdent "String"))))], use = [], kill = []
Liveness at start of .L_exit: in = [("%v_t_13~2",(2,Ref () (Cl () (SymIdent "String"))))], out = [("%v_t_13~2",(1,Ref () (Cl () (SymIdent "String"))))], use = [], kill = []
Liveness at end of .L_exit: in = [("%v_t_13~2",(0,Ref () (Cl () (SymIdent "String"))))], out = [], use = [("%v_t_13~2",Ref () (Cl () (SymIdent "String")))], kill = []
Liveness at start of _WBEG17: in = [("%v_t_15~2",(3,Int ())),("%v_t_13~2",(2,Ref () (Cl () (SymIdent "String")))),("%v_t_10",(10,Int ())),("%v_t_12",(8,Ref () (Cl () (SymIdent "String")))),("%v_t_9",(2,Ref () (Cl () (SymIdent "String"))))], out = [("%v_t_15~2",(2,Int ())),("%v_t_13~2",(1,Ref () (Cl () (SymIdent "String")))),("%v_t_10",(9,Int ())),("%v_t_12",(7,Ref () (Cl () (SymIdent "String")))),("%v_t_9",(1,Ref () (Cl () (SymIdent "String"))))], use = [], kill = []
Liveness at end of _WBEG17: in = [("%v_t_21",(3,Int ())),("%v_t_19",(4,Ref () (Cl () (SymIdent "String")))),("%v_t_10",(6,Int ())),("%v_t_12",(4,Ref () (Cl () (SymIdent "String")))),("%v_t_9",(11,Ref () (Cl () (SymIdent "String"))))], out = [("%v_t_21",(2,Int ())),("%v_t_19",(3,Ref () (Cl () (SymIdent "String")))),("%v_t_10",(5,Int ())),("%v_t_12",(3,Ref () (Cl () (SymIdent "String")))),("%v_t_9",(10,Ref () (Cl () (SymIdent "String"))))], use = [], kill = []
Liveness at start of _WCOND16: in = [("%v_t_21",(1,Int ())),("%v_t_19",(2,Ref () (Cl () (SymIdent "String")))),("%v_t_10",(4,Int ())),("%v_t_12",(2,Ref () (Cl () (SymIdent "String")))),("%v_t_9",(9,Ref () (Cl () (SymIdent "String"))))], out = [("%v_t_21",(0,Int ())),("%v_t_19",(1,Ref () (Cl () (SymIdent "String")))),("%v_t_10",(3,Int ())),("%v_t_12",(1,Ref () (Cl () (SymIdent "String")))),("%v_t_9",(8,Ref () (Cl () (SymIdent "String"))))], use = [], kill = []
Liveness at end of _WCOND16: in = [("%v___temp_0",(0,Bool ())),("%v_t_15~2",(5,Int ())),("%v_t_13~2",(4,Ref () (Cl () (SymIdent "String")))),("%v_t_10",(12,Int ())),("%v_t_12",(10,Ref () (Cl () (SymIdent "String")))),("%v_t_9",(4,Ref () (Cl () (SymIdent "String"))))], out = [("%v_t_15~2",(4,Int ())),("%v_t_13~2",(3,Ref () (Cl () (SymIdent "String")))),("%v_t_10",(11,Int ())),("%v_t_12",(9,Ref () (Cl () (SymIdent "String")))),("%v_t_9",(3,Ref () (Cl () (SymIdent "String"))))], use = [("%v___temp_0",Bool ())], kill = []
Liveness at start of _WEND18: in = [("%v_t_13~2",(6,Ref () (Cl () (SymIdent "String"))))], out = [("%v_t_13~2",(5,Ref () (Cl () (SymIdent "String"))))], use = [], kill = []
Liveness at end of _WEND18: in = [("%v_t_13~2",(4,Ref () (Cl () (SymIdent "String"))))], out = [("%v_t_13~2",(3,Ref () (Cl () (SymIdent "String"))))], use = [], kill = []
Code: 
.method String & ~cl_TopLevel.repStr (String & %a_t_9, int %a_t_10): [
.L_entry:
  %v_t_9 := load String & & param 0 %a_t_9;
  %v_t_10 := load int & param 1 %a_t_10;
  %v_t_12 := newstr "";
  %v_t_13 := String & %v_t_12;
  %v_t_15 := 0;
  jump _WCOND16;
  _WCOND16:
  %v___temp_0 := int %v_t_15 < int %v_t_10;
  jump if boolean %v___temp_0 then _WBEG17 else _WEND18;
  _WBEG17:
  %v_t_19 := callvirt String & String.concat (String & %v_t_13, String & %v_t_9);
  %v_t_13 := String & %v_t_19;
  %v_t_21 := int %v_t_15 + 1;
  %v_t_15 := int %v_t_21;
  jump _WCOND16;
  _WEND18:
  %v___temp_1 := String & %v_t_13;
  %v_return := String & %v___temp_1;
  jump .L_exit;
.L_exit:
  return String & %v_return;
]

CFG for ~cl_TopLevel.main:
[".L_entry",".L_exit","_WBEG41","_WCOND40","_WEND42"]
".L_entry" -> fromList [LabIdent "_WCOND40"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_WEND42"]
"_WBEG41" -> fromList [LabIdent "_WCOND40"] <- fromList [LabIdent "_WCOND40"]
"_WCOND40" -> fromList [LabIdent "_WBEG41",LabIdent "_WEND42"] <- fromList [LabIdent ".L_entry",LabIdent "_WBEG41"]
"_WEND42" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_WCOND40"]
Liveness at start of .L_entry: in = [("%v_t_43",(14,Int ())),("%v_t_45",(13,Int ()))], out = [("%v_t_43",(13,Int ())),("%v_t_45",(12,Int ()))], use = [], kill = []
Liveness at end of .L_entry: in = [("%v_t_43",(4,Int ())),("%v_t_45",(3,Int ()))], out = [("%v_t_43",(3,Int ())),("%v_t_45",(2,Int ()))], use = [], kill = []
Liveness at start of .L_exit: in = [], out = [], use = [], kill = []
Liveness at end of .L_exit: in = [], out = [], use = [], kill = []
Liveness at start of _WBEG41: in = [("%v_t_37~2",(2,Int ())),("%v_t_39~2",(2,Int ()))], out = [("%v_t_37~2",(1,Int ())),("%v_t_39~2",(1,Int ()))], use = [], kill = []
Liveness at end of _WBEG41: in = [("%v_t_43",(4,Int ())),("%v_t_45",(3,Int ()))], out = [("%v_t_43",(3,Int ())),("%v_t_45",(2,Int ()))], use = [], kill = []
Liveness at start of _WCOND40: in = [("%v_t_43",(2,Int ())),("%v_t_45",(1,Int ()))], out = [("%v_t_43",(1,Int ())),("%v_t_45",(0,Int ()))], use = [], kill = []
Liveness at end of _WCOND40: in = [("%v___temp_2",(0,Bool ())),("%v_t_37~2",(4,Int ())),("%v_t_39~2",(4,Int ()))], out = [("%v_t_37~2",(3,Int ())),("%v_t_39~2",(3,Int ()))], use = [("%v___temp_2",Bool ())], kill = []
Liveness at start of _WEND42: in = [("%v_t_39~2",(2,Int ()))], out = [("%v_t_39~2",(1,Int ()))], use = [], kill = []
Liveness at end of _WEND42: in = [], out = [], use = [], kill = []
Code: 
.method int ~cl_TopLevel.main (): [
.L_entry:
  %v_t_23 := call int ~cl_TopLevel.fac (10);
  call int ~cl_TopLevel.printInt (int %v_t_23);
  %v_t_26 := call int ~cl_TopLevel.rfac (10);
  call int ~cl_TopLevel.printInt (int %v_t_26);
  %v_t_29 := call int ~cl_TopLevel.mfac (10);
  call int ~cl_TopLevel.printInt (int %v_t_29);
  %v_t_32 := call int ~cl_TopLevel.ifac (10);
  call int ~cl_TopLevel.printInt (int %v_t_32);
  %v_t_37 := 10;
  %v_t_39 := 1;
  jump _WCOND40;
  _WCOND40:
  %v___temp_2 := int %v_t_37 > 0;
  jump if boolean %v___temp_2 then _WBEG41 else _WEND42;
  _WBEG41:
  %v_t_43 := int %v_t_39 * int %v_t_37;
  %v_t_39 := int %v_t_43;
  %v_t_45 := int %v_t_37 - 1;
  %v_t_37 := int %v_t_45;
  jump _WCOND40;
  _WEND42:
  call int ~cl_TopLevel.printInt (int %v_t_39);
  %v_t_49 := newstr "=";
  %v_t_51 := call String & ~cl_TopLevel.repStr (String & %v_t_49, 60);
  %v_t_52 := String & %v_t_51;
  call int ~cl_TopLevel.printString (String & %v_t_52);
  %v_t_55 := newstr "hello */";
  call int ~cl_TopLevel.printString (String & %v_t_55);
  %v_t_58 := newstr "/* world";
  call int ~cl_TopLevel.printString (String & %v_t_58);
  %v___temp_3 := 0;
  %v_return := int %v___temp_3;
  jump .L_exit;
.L_exit:
  return int %v_return;
]

CFG for ~cl_TopLevel.fac:
[".L_entry",".L_exit","_WBEG68","_WCOND67","_WEND69"]
".L_entry" -> fromList [LabIdent "_WCOND67"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_WEND69"]
"_WBEG68" -> fromList [LabIdent "_WCOND67"] <- fromList [LabIdent "_WCOND67"]
"_WCOND67" -> fromList [LabIdent "_WBEG68",LabIdent "_WEND69"] <- fromList [LabIdent ".L_entry",LabIdent "_WBEG68"]
"_WEND69" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_WCOND67"]
Liveness at start of .L_entry: in = [("%v_t_72",(7,Int ())),("%v_t_70",(6,Int ())),("%a_t_61",(2,Ref () (Int ())))], out = [("%v_t_72",(6,Int ())),("%v_t_70",(5,Int ())),("%a_t_61",(1,Ref () (Int ())))], use = [], kill = []
Liveness at end of .L_entry: in = [("%v_t_61",(4,Int ())),("%v_t_72",(4,Int ())),("%v_t_70",(3,Int ()))], out = [("%v_t_61",(3,Int ())),("%v_t_72",(3,Int ())),("%v_t_70",(2,Int ()))], use = [], kill = []
Liveness at start of .L_exit: in = [("%v_t_63~3",(2,Int ()))], out = [("%v_t_63~3",(1,Int ()))], use = [], kill = []
Liveness at end of .L_exit: in = [("%v_t_63~3",(0,Int ()))], out = [], use = [("%v_t_63~3",Int ())], kill = []
Liveness at start of _WBEG68: in = [("%v_t_61",(8,Int ())),("%v_t_63~3",(2,Int ())),("%v_t_65~3",(2,Int ()))], out = [("%v_t_61",(7,Int ())),("%v_t_63~3",(1,Int ())),("%v_t_65~3",(1,Int ()))], use = [], kill = []
Liveness at end of _WBEG68: in = [("%v_t_61",(4,Int ())),("%v_t_72",(4,Int ())),("%v_t_70",(3,Int ()))], out = [("%v_t_61",(3,Int ())),("%v_t_72",(3,Int ())),("%v_t_70",(2,Int ()))], use = [], kill = []
Liveness at start of _WCOND67: in = [("%v_t_61",(2,Int ())),("%v_t_72",(2,Int ())),("%v_t_70",(1,Int ()))], out = [("%v_t_61",(1,Int ())),("%v_t_72",(1,Int ())),("%v_t_70",(0,Int ()))], use = [], kill = []
Liveness at end of _WCOND67: in = [("%v_t_61",(10,Int ())),("%v___temp_4",(0,Bool ())),("%v_t_63~3",(4,Int ())),("%v_t_65~3",(4,Int ()))], out = [("%v_t_61",(9,Int ())),("%v_t_63~3",(3,Int ())),("%v_t_65~3",(3,Int ()))], use = [("%v___temp_4",Bool ())], kill = []
Liveness at start of _WEND69: in = [("%v_t_63~3",(6,Int ()))], out = [("%v_t_63~3",(5,Int ()))], use = [], kill = []
Liveness at end of _WEND69: in = [("%v_t_63~3",(4,Int ()))], out = [("%v_t_63~3",(3,Int ()))], use = [], kill = []
Code: 
.method int ~cl_TopLevel.fac (int %a_t_61): [
.L_entry:
  %v_t_61 := load int & param 0 %a_t_61;
  %v_t_63 := 0;
  %v_t_65 := 0;
  %v_t_63 := 1;
  %v_t_65 := int %v_t_61;
  jump _WCOND67;
  _WCOND67:
  %v___temp_4 := int %v_t_65 > 0;
  jump if boolean %v___temp_4 then _WBEG68 else _WEND69;
  _WBEG68:
  %v_t_70 := int %v_t_63 * int %v_t_65;
  %v_t_63 := int %v_t_70;
  %v_t_72 := int %v_t_65 + -1;
  %v_t_65 := int %v_t_72;
  jump _WCOND67;
  _WEND69:
  %v___temp_5 := int %v_t_63;
  %v_return := int %v___temp_5;
  jump .L_exit;
.L_exit:
  return int %v_return;
]

CFG for ~cl_TopLevel.rfac:
[".L_entry",".L_exit","_IELSE76","_IIF75"]
".L_entry" -> fromList [LabIdent "_IELSE76",LabIdent "_IIF75"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_IELSE76",LabIdent "_IIF75"]
"_IELSE76" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
"_IIF75" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
Liveness at start of .L_entry: in = [("%a_t_74",(2,Ref () (Int ()))),("%v_t_83",(11,Int ()))], out = [("%a_t_74",(1,Ref () (Int ()))),("%v_t_83",(10,Int ()))], use = [], kill = []
Liveness at end of .L_entry: in = [("%v___temp_6",(0,Bool ())),("%v_t_83",(7,Int ())),("%v_t_74",(4,Int ()))], out = [("%v_t_83",(6,Int ())),("%v_t_74",(3,Int ()))], use = [("%v___temp_6",Bool ())], kill = []
Liveness at start of .L_exit: in = [("%v_t_83",(1,Int ()))], out = [("%v_t_83",(0,Int ()))], use = [], kill = []
Liveness at end of .L_exit: in = [("%v_return~2",(0,Int ()))], out = [], use = [("%v_return~2",Int ())], kill = []
Liveness at start of _IELSE76: in = [("%v_t_74",(2,Int ()))], out = [("%v_t_74",(1,Int ()))], use = [], kill = []
Liveness at end of _IELSE76: in = [("%v_t_83",(3,Int ()))], out = [("%v_t_83",(2,Int ()))], use = [], kill = []
Liveness at start of _IIF75: in = [("%v_t_83",(5,Int ()))], out = [("%v_t_83",(4,Int ()))], use = [], kill = []
Liveness at end of _IIF75: in = [("%v_t_83",(3,Int ()))], out = [("%v_t_83",(2,Int ()))], use = [], kill = []
Code: 
.method int ~cl_TopLevel.rfac (int %a_t_74): [
.L_entry:
  %v_t_74 := load int & param 0 %a_t_74;
  %v___temp_6 := int %v_t_74 == 0;
  jump if boolean %v___temp_6 then _IIF75 else _IELSE76;
  _IELSE76:
  %v_t_81 := int %v_t_74 + -1;
  %v_t_82 := call int ~cl_TopLevel.rfac (int %v_t_81);
  %v_t_83 := int %v_t_74 * int %v_t_82;
  %v___temp_8 := int %v_t_83;
  %v_return := int %v___temp_8;
  jump .L_exit;
.L_exit:
  return int %v_return;
  _IIF75:
  %v___temp_7 := 1;
  %v_return := int %v___temp_7;
  jump .L_exit;
]

CFG for ~cl_TopLevel.mfac:
[".L_entry",".L_exit","_IELSE86","_IIF85"]
".L_entry" -> fromList [LabIdent "_IELSE86",LabIdent "_IIF85"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_IELSE86",LabIdent "_IIF85"]
"_IELSE86" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
"_IIF85" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
Liveness at start of .L_entry: in = [("%a_t_84",(2,Ref () (Int ()))),("%v_t_93",(11,Int ()))], out = [("%a_t_84",(1,Ref () (Int ()))),("%v_t_93",(10,Int ()))], use = [], kill = []
Liveness at end of .L_entry: in = [("%v_t_93",(7,Int ())),("%v___temp_9",(0,Bool ())),("%v_t_84",(4,Int ()))], out = [("%v_t_93",(6,Int ())),("%v_t_84",(3,Int ()))], use = [("%v___temp_9",Bool ())], kill = []
Liveness at start of .L_exit: in = [("%v_t_93",(1,Int ()))], out = [("%v_t_93",(0,Int ()))], use = [], kill = []
Liveness at end of .L_exit: in = [("%v_return~2",(0,Int ()))], out = [], use = [("%v_return~2",Int ())], kill = []
Liveness at start of _IELSE86: in = [("%v_t_84",(2,Int ()))], out = [("%v_t_84",(1,Int ()))], use = [], kill = []
Liveness at end of _IELSE86: in = [("%v_t_93",(3,Int ()))], out = [("%v_t_93",(2,Int ()))], use = [], kill = []
Liveness at start of _IIF85: in = [("%v_t_93",(5,Int ()))], out = [("%v_t_93",(4,Int ()))], use = [], kill = []
Liveness at end of _IIF85: in = [("%v_t_93",(3,Int ()))], out = [("%v_t_93",(2,Int ()))], use = [], kill = []
Code: 
.method int ~cl_TopLevel.mfac (int %a_t_84): [
.L_entry:
  %v_t_84 := load int & param 0 %a_t_84;
  %v___temp_9 := int %v_t_84 == 0;
  jump if boolean %v___temp_9 then _IIF85 else _IELSE86;
  _IELSE86:
  %v_t_91 := int %v_t_84 + -1;
  %v_t_92 := call int ~cl_TopLevel.nfac (int %v_t_91);
  %v_t_93 := int %v_t_84 * int %v_t_92;
  %v___temp_11 := int %v_t_93;
  %v_return := int %v___temp_11;
  jump .L_exit;
.L_exit:
  return int %v_return;
  _IIF85:
  %v___temp_10 := 1;
  %v_return := int %v___temp_10;
  jump .L_exit;
]

CFG for ~cl_TopLevel.nfac:
[".L_entry",".L_exit","_IELSE96","_IIF95"]
".L_entry" -> fromList [LabIdent "_IELSE96",LabIdent "_IIF95"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_IELSE96",LabIdent "_IIF95"]
"_IELSE96" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
"_IIF95" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
Liveness at start of .L_entry: in = [("%a_t_94",(2,Ref () (Int ()))),("%v_t_102",(11,Int ()))], out = [("%a_t_94",(1,Ref () (Int ()))),("%v_t_102",(10,Int ()))], use = [], kill = []
Liveness at end of .L_entry: in = [("%v___temp_12",(0,Bool ())),("%v_t_94",(4,Int ())),("%v_t_102",(7,Int ()))], out = [("%v_t_94",(3,Int ())),("%v_t_102",(6,Int ()))], use = [("%v___temp_12",Bool ())], kill = []
Liveness at start of .L_exit: in = [("%v_t_102",(1,Int ()))], out = [("%v_t_102",(0,Int ()))], use = [], kill = []
Liveness at end of .L_exit: in = [("%v_return~2",(0,Int ()))], out = [], use = [("%v_return~2",Int ())], kill = []
Liveness at start of _IELSE96: in = [("%v_t_102",(5,Int ()))], out = [("%v_t_102",(4,Int ()))], use = [], kill = []
Liveness at end of _IELSE96: in = [("%v_t_102",(3,Int ()))], out = [("%v_t_102",(2,Int ()))], use = [], kill = []
Liveness at start of _IIF95: in = [("%v_t_94",(2,Int ()))], out = [("%v_t_94",(1,Int ()))], use = [], kill = []
Liveness at end of _IIF95: in = [("%v_t_102",(3,Int ()))], out = [("%v_t_102",(2,Int ()))], use = [], kill = []
Code: 
.method int ~cl_TopLevel.nfac (int %a_t_94): [
.L_entry:
  %v_t_94 := load int & param 0 %a_t_94;
  %v___temp_12 := int %v_t_94 != 0;
  jump if boolean %v___temp_12 then _IIF95 else _IELSE96;
  _IELSE96:
  %v___temp_14 := 1;
  %v_return := int %v___temp_14;
  jump .L_exit;
.L_exit:
  return int %v_return;
  _IIF95:
  %v_t_100 := int %v_t_94 + -1;
  %v_t_101 := call int ~cl_TopLevel.mfac (int %v_t_100);
  %v_t_102 := int %v_t_94 * int %v_t_101;
  %v___temp_13 := int %v_t_102;
  %v_return := int %v___temp_13;
  jump .L_exit;
]

CFG for ~cl_TopLevel.ifac:
[".L_entry",".L_exit"]
".L_entry" -> fromList [LabIdent ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_entry"]
Liveness at start of .L_entry: in = [("%a_t_104",(2,Ref () (Int ())))], out = [("%a_t_104",(1,Ref () (Int ())))], use = [], kill = []
Liveness at end of .L_entry: in = [("%v_t_106",(4,Int ()))], out = [("%v_t_106",(3,Int ()))], use = [], kill = []
Liveness at start of .L_exit: in = [("%v_t_106",(2,Int ()))], out = [("%v_t_106",(1,Int ()))], use = [], kill = []
Liveness at end of .L_exit: in = [("%v_t_106",(0,Int ()))], out = [], use = [("%v_t_106",Int ())], kill = []
Code: 
.method int ~cl_TopLevel.ifac (int %a_t_104): [
.L_entry:
  %v_t_104 := load int & param 0 %a_t_104;
  %v_t_106 := call int ~cl_TopLevel.ifac2f (1, int %v_t_104);
  %v___temp_15 := int %v_t_106;
  %v_return := int %v___temp_15;
  jump .L_exit;
.L_exit:
  return int %v_return;
]

CFG for ~cl_TopLevel.ifac2f:
[".L_entry",".L_exit","_IELSE110","_IELSE113","_IEND111","_IEND114","_IIF109","_IIF112"]
".L_entry" -> fromList [LabIdent "_IELSE110",LabIdent "_IIF109"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_IEND114",LabIdent "_IIF109",LabIdent "_IIF112"]
"_IELSE110" -> fromList [LabIdent "_IEND111"] <- fromList [LabIdent ".L_entry"]
"_IELSE113" -> fromList [LabIdent "_IEND114"] <- fromList [LabIdent "_IEND111"]
"_IEND111" -> fromList [LabIdent "_IELSE113",LabIdent "_IIF112"] <- fromList [LabIdent "_IELSE110"]
"_IEND114" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_IELSE113"]
"_IIF109" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
"_IIF112" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_IEND111"]
Liveness at start of .L_entry: in = [("%a_t_107",(2,Ref () (Int ()))),("%v_t_125",(12,Int ())),("%a_t_108",(3,Ref () (Int ())))], out = [("%a_t_107",(1,Ref () (Int ()))),("%v_t_125",(11,Int ())),("%a_t_108",(2,Ref () (Int ())))], use = [], kill = []
Liveness at end of .L_entry: in = [("%v_t_107",(7,Int ())),("%v_t_125",(7,Int ())),("%v___temp_16",(0,Bool ())),("%v_t_108",(8,Int ()))], out = [("%v_t_107",(6,Int ())),("%v_t_125",(6,Int ())),("%v_t_108",(7,Int ()))], use = [("%v___temp_16",Bool ())], kill = []
Liveness at start of .L_exit: in = [("%v_t_107",(1,Int ())),("%v_t_125",(1,Int ()))], out = [("%v_t_107",(0,Int ())),("%v_t_125",(0,Int ()))], use = [], kill = []
Liveness at end of .L_exit: in = [("%v_return~2",(0,Int ()))], out = [], use = [("%v_return~2",Int ())], kill = []
Liveness at start of _IELSE110: in = [("%v_t_107",(6,Int ())),("%v_t_125",(14,Int ())),("%v_t_108",(6,Int ()))], out = [("%v_t_107",(5,Int ())),("%v_t_125",(13,Int ())),("%v_t_108",(5,Int ()))], use = [], kill = []
Liveness at end of _IELSE110: in = [("%v_t_107",(4,Int ())),("%v_t_125",(12,Int ())),("%v_t_108",(4,Int ()))], out = [("%v_t_107",(3,Int ())),("%v_t_125",(11,Int ())),("%v_t_108",(3,Int ()))], use = [], kill = []
Liveness at start of _IELSE113: in = [("%v_t_107",(6,Int ())),("%v_t_108",(6,Int ()))], out = [("%v_t_107",(5,Int ())),("%v_t_108",(5,Int ()))], use = [], kill = []
Liveness at end of _IELSE113: in = [("%v_t_107",(4,Int ())),("%v_t_108",(4,Int ()))], out = [("%v_t_107",(3,Int ())),("%v_t_108",(3,Int ()))], use = [], kill = []
Liveness at start of _IEND111: in = [("%v_t_107",(2,Int ())),("%v_t_125",(10,Int ())),("%v_t_108",(2,Int ()))], out = [("%v_t_107",(1,Int ())),("%v_t_125",(9,Int ())),("%v_t_108",(1,Int ()))], use = [], kill = []
Liveness at end of _IEND111: in = [("%v_t_107",(7,Int ())),("%v_t_125",(7,Int ())),("%v_t_108",(8,Int ())),("%v___temp_18",(0,Bool ()))], out = [("%v_t_107",(6,Int ())),("%v_t_125",(6,Int ())),("%v_t_108",(7,Int ()))], use = [("%v___temp_18",Bool ())], kill = []
Liveness at start of _IEND114: in = [("%v_t_107",(2,Int ())),("%v_t_108",(2,Int ()))], out = [("%v_t_107",(1,Int ())),("%v_t_108",(1,Int ()))], use = [], kill = []
Liveness at end of _IEND114: in = [("%v_t_107",(3,Int ())),("%v_t_125",(3,Int ()))], out = [("%v_t_107",(2,Int ())),("%v_t_125",(2,Int ()))], use = [], kill = []
Liveness at start of _IIF109: in = [("%v_t_107",(5,Int ())),("%v_t_125",(5,Int ()))], out = [("%v_t_107",(4,Int ())),("%v_t_125",(4,Int ()))], use = [], kill = []
Liveness at end of _IIF109: in = [("%v_t_107",(3,Int ())),("%v_t_125",(3,Int ()))], out = [("%v_t_107",(2,Int ())),("%v_t_125",(2,Int ()))], use = [], kill = []
Liveness at start of _IIF112: in = [("%v_t_107",(5,Int ())),("%v_t_125",(5,Int ()))], out = [("%v_t_107",(4,Int ())),("%v_t_125",(4,Int ()))], use = [], kill = []
Liveness at end of _IIF112: in = [("%v_t_107",(3,Int ())),("%v_t_125",(3,Int ()))], out = [("%v_t_107",(2,Int ())),("%v_t_125",(2,Int ()))], use = [], kill = []
Code: 
.method int ~cl_TopLevel.ifac2f (int %a_t_107, int %a_t_108): [
.L_entry:
  %v_t_107 := load int & param 0 %a_t_107;
  %v_t_108 := load int & param 1 %a_t_108;
  %v___temp_16 := int %v_t_107 == int %v_t_108;
  jump if boolean %v___temp_16 then _IIF109 else _IELSE110;
  _IELSE110:
  jump _IEND111;
  _IEND111:
  %v___temp_18 := int %v_t_107 > int %v_t_108;
  jump if boolean %v___temp_18 then _IIF112 else _IELSE113;
  _IELSE113:
  jump _IEND114;
  _IEND114:
  %v_t_117 := 0;
  %v_t_118 := int %v_t_107 + int %v_t_108;
  %v_t_120 := int %v_t_118 / 2;
  %v_t_117 := int %v_t_120;
  %v_t_121 := call int ~cl_TopLevel.ifac2f (int %v_t_107, int %v_t_117);
  %v_t_123 := int %v_t_117 + 1;
  %v_t_124 := call int ~cl_TopLevel.ifac2f (int %v_t_123, int %v_t_108);
  %v_t_125 := int %v_t_121 * int %v_t_124;
  %v___temp_20 := int %v_t_125;
  %v_return := int %v___temp_20;
  jump .L_exit;
.L_exit:
  return int %v_return;
  _IIF112:
  %v___temp_19 := 1;
  %v_return := int %v___temp_19;
  jump .L_exit;
  _IIF109:
  %v___temp_17 := int %v_t_107;
  %v_return := int %v___temp_17;
  jump .L_exit;
]


[94m[Info]    [0m[Reporting.Logs.logInfo#75] [%a_t_10 (reg preference: CallerSaved) (RSI): ["%a_t_9","%v_t_19","%v_t_21","%v_t_9"]
%a_t_9 (reg preference: CallerSaved) (RDI): ["%a_t_10","%v_t_19","%v_t_21"]
%v___temp_0 (reg preference: CallerSaved) (RCX): ["%v_t_10","%v_t_12","%v_t_13~2","%v_t_15~2","%v_t_9"]
%v_t_10 (reg preference: CalleeSaved) (R14): ["%v___temp_0","%v_t_12","%v_t_13~2","%v_t_15~2","%v_t_19","%v_t_21","%v_t_9"]
%v_t_12 (reg preference: CalleeSaved) (R13): ["%v___temp_0","%v_t_10","%v_t_13~2","%v_t_15~2","%v_t_19","%v_t_21","%v_t_9"]
%v_t_13~2 (reg preference: CallerSaved) (RAX): ["%v___temp_0","%v_t_10","%v_t_12","%v_t_15~2","%v_t_9","~arg_1_RSI"]
%v_t_15~2 (reg preference: CalleeSaved) (R12): ["%v___temp_0","%v_t_10","%v_t_12","%v_t_13~2","%v_t_19","%v_t_9"]
%v_t_19 (reg preference: CallerSaved) (RCX): ["%a_t_10","%a_t_9","%v_t_10","%v_t_12","%v_t_15~2","%v_t_21","%v_t_9"]
%v_t_21 (reg preference: CallerSaved) (RAX): ["%a_t_10","%a_t_9","%v_t_10","%v_t_12","%v_t_19","%v_t_9"]
%v_t_9 (reg preference: CalleeSaved) (RBX): ["%a_t_10","%v___temp_0","%v_t_10","%v_t_12","%v_t_13~2","%v_t_15~2","%v_t_19","%v_t_21","~arg_0_RDI"]
~arg_0_RDI (reg preference: CallerSaved) (RDI): ["%v_t_9"]
~arg_1_RSI (reg preference: CallerSaved) (RSI): ["%v_t_13~2"]
,%v___temp_2 (reg preference: CallerSaved) (RDX): ["%v_t_37~2","%v_t_39~2"]
%v_t_23 (reg preference: CallerSaved) (RAX): ["%v_t_43","%v_t_45"]
%v_t_26 (reg preference: CallerSaved) (RAX): ["%v_t_43","%v_t_45"]
%v_t_29 (reg preference: CallerSaved) (RAX): ["%v_t_43","%v_t_45"]
%v_t_32 (reg preference: CallerSaved) (RAX): ["%v_t_43","%v_t_45"]
%v_t_37~2 (reg preference: CallerSaved) (RCX): ["%v___temp_2","%v_t_39~2","%v_t_43"]
%v_t_39~2 (reg preference: CallerSaved) (RAX): ["%v___temp_2","%v_t_37~2"]
%v_t_43 (reg preference: CalleeSaved) (R12): ["%v_t_23","%v_t_26","%v_t_29","%v_t_32","%v_t_37~2","%v_t_45"]
%v_t_45 (reg preference: CalleeSaved) (RBX): ["%v_t_23","%v_t_26","%v_t_29","%v_t_32","%v_t_43"]
%v_t_49 (reg preference: CallerSaved) (RAX): ["~arg_10_RSI"]
%v_t_51 (reg preference: CallerSaved) (RAX): []
%v_t_55 (reg preference: CallerSaved) (RAX): []
%v_t_58 (reg preference: CallerSaved) (RAX): []
~arg_0_RDI (reg preference: CallerSaved) (RDI): []
~arg_10_RSI (reg preference: CallerSaved) (RSI): ["%v_t_49"]
~arg_11_RDI (reg preference: CallerSaved) (RDI): []
~arg_12_RDI (reg preference: CallerSaved) (RDI): []
~arg_13_RDI (reg preference: CallerSaved) (RDI): []
~arg_1_RDI (reg preference: CallerSaved) (RDI): []
~arg_2_RDI (reg preference: CallerSaved) (RDI): []
~arg_3_RDI (reg preference: CallerSaved) (RDI): []
~arg_4_RDI (reg preference: CallerSaved) (RDI): []
~arg_5_RDI (reg preference: CallerSaved) (RDI): []
~arg_6_RDI (reg preference: CallerSaved) (RDI): []
~arg_7_RDI (reg preference: CallerSaved) (RDI): []
~arg_8_RDI (reg preference: CallerSaved) (RDI): []
~arg_9_RDI (reg preference: CallerSaved) (RDI): []
,%a_t_61 (reg preference: CallerSaved) (RDI): ["%v_t_70","%v_t_72"]
%v___temp_4 (reg preference: CallerSaved) (RDI): ["%v_t_61","%v_t_63~3","%v_t_65~3"]
%v_t_61 (reg preference: CallerSaved) (RDX): ["%v___temp_4","%v_t_63~3","%v_t_65~3","%v_t_70","%v_t_72"]
%v_t_63~3 (reg preference: CallerSaved) (RCX): ["%v___temp_4","%v_t_61","%v_t_65~3","%v_t_72"]
%v_t_65~3 (reg preference: CallerSaved) (RAX): ["%v___temp_4","%v_t_61","%v_t_63~3","%v_t_70"]
%v_t_70 (reg preference: CallerSaved) (RCX): ["%a_t_61","%v_t_61","%v_t_65~3","%v_t_72"]
%v_t_72 (reg preference: CallerSaved) (RAX): ["%a_t_61","%v_t_61","%v_t_63~3","%v_t_70"]
,%a_t_74 (reg preference: CallerSaved) (RDI): ["%v_t_83"]
%v___temp_6 (reg preference: CallerSaved) (RCX): ["%v_t_74","%v_t_83"]
%v_return~2 (reg preference: CallerSaved) (RAX): []
%v_t_74 (reg preference: CalleeSaved) (RBX): ["%v___temp_6","%v_t_81","%v_t_82","%v_t_83"]
%v_t_81 (reg preference: CallerSaved) (RAX): ["%v_t_74"]
%v_t_82 (reg preference: CallerSaved) (RAX): ["%v_t_74"]
%v_t_83 (reg preference: CallerSaved) (RAX): ["%a_t_74","%v___temp_6","%v_t_74"]
~arg_0_RDI (reg preference: CallerSaved) (RDI): []
,%a_t_84 (reg preference: CallerSaved) (RDI): ["%v_t_93"]
%v___temp_9 (reg preference: CallerSaved) (RCX): ["%v_t_84","%v_t_93"]
%v_return~2 (reg preference: CallerSaved) (RAX): []
%v_t_84 (reg preference: CalleeSaved) (RBX): ["%v___temp_9","%v_t_91","%v_t_92","%v_t_93"]
%v_t_91 (reg preference: CallerSaved) (RAX): ["%v_t_84"]
%v_t_92 (reg preference: CallerSaved) (RAX): ["%v_t_84"]
%v_t_93 (reg preference: CallerSaved) (RAX): ["%a_t_84","%v___temp_9","%v_t_84"]
~arg_0_RDI (reg preference: CallerSaved) (RDI): []
,%a_t_94 (reg preference: CallerSaved) (RDI): ["%v_t_102"]
%v___temp_12 (reg preference: CallerSaved) (RCX): ["%v_t_102","%v_t_94"]
%v_return~2 (reg preference: CallerSaved) (RAX): []
%v_t_100 (reg preference: CallerSaved) (RAX): ["%v_t_94"]
%v_t_101 (reg preference: CallerSaved) (RAX): ["%v_t_94"]
%v_t_102 (reg preference: CallerSaved) (RAX): ["%a_t_94","%v___temp_12","%v_t_94"]
%v_t_94 (reg preference: CalleeSaved) (RBX): ["%v___temp_12","%v_t_100","%v_t_101","%v_t_102"]
~arg_0_RDI (reg preference: CallerSaved) (RDI): []
,%a_t_104 (reg preference: CallerSaved) (RDI): []
%v_t_104 (reg preference: CallerSaved) (RAX): ["~arg_0_RDI"]
%v_t_106 (reg preference: CallerSaved) (RAX): []
~arg_0_RDI (reg preference: CallerSaved) (RDI): ["%v_t_104"]
~arg_1_RSI (reg preference: CallerSaved) (RSI): []
,%a_t_107 (reg preference: CallerSaved) (RDI): ["%a_t_108","%v_t_125"]
%a_t_108 (reg preference: CallerSaved) (RSI): ["%a_t_107","%v_t_107","%v_t_125"]
%v___temp_16 (reg preference: CallerSaved) (RCX): ["%v_t_107","%v_t_108","%v_t_125"]
%v___temp_18 (reg preference: CallerSaved) (RCX): ["%v_t_107","%v_t_108","%v_t_125"]
%v_return~2 (reg preference: CallerSaved) (RAX): []
%v_t_107 (reg preference: CalleeSaved) (R13): ["%a_t_108","%v___temp_16","%v___temp_18","%v_t_108","%v_t_118","%v_t_120","%v_t_121","%v_t_123","%v_t_124","%v_t_125","~arg_1_RSI"]
%v_t_108 (reg preference: CalleeSaved) (R12): ["%v___temp_16","%v___temp_18","%v_t_107","%v_t_118","%v_t_120","%v_t_121","%v_t_123","%v_t_125","~arg_2_RDI"]
%v_t_118 (reg preference: CallerSaved) (RAX): ["%v_t_107","%v_t_108"]
%v_t_120 (reg preference: CalleeSaved) (R14): ["%v_t_107","%v_t_108","%v_t_121","~arg_0_RDI"]
%v_t_121 (reg preference: CalleeSaved) (RBX): ["%v_t_107","%v_t_108","%v_t_120","%v_t_123","%v_t_124"]
%v_t_123 (reg preference: CallerSaved) (RAX): ["%v_t_107","%v_t_108","%v_t_121","~arg_3_RSI"]
%v_t_124 (reg preference: CallerSaved) (RAX): ["%v_t_107","%v_t_121"]
%v_t_125 (reg preference: CallerSaved) (RAX): ["%a_t_107","%a_t_108","%v___temp_16","%v___temp_18","%v_t_107","%v_t_108"]
~arg_0_RDI (reg preference: CallerSaved) (RDI): ["%v_t_120"]
~arg_1_RSI (reg preference: CallerSaved) (RSI): ["%v_t_107"]
~arg_2_RDI (reg preference: CallerSaved) (RDI): ["%v_t_108"]
~arg_3_RSI (reg preference: CallerSaved) (RSI): ["%v_t_123"]
]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> END STEP Allocating registers...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> GENERATED INTERMEDIATE STEP Unfolding phis...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] CFG for ~cl_TopLevel.repStr:
[".L_entry",".L_exit","_WBEG17","_WCOND16","_WCOND16__from__WBEG17","_WCOND16__from_entry","_WEND18"]
".L_entry" -> fromList [LabIdent "_WCOND16__from_entry"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_WEND18"]
"_WBEG17" -> fromList [LabIdent "_WCOND16__from__WBEG17"] <- fromList [LabIdent "_WCOND16"]
"_WCOND16" -> fromList [LabIdent "_WBEG17",LabIdent "_WEND18"] <- fromList [LabIdent "_WCOND16__from__WBEG17",LabIdent "_WCOND16__from_entry"]
"_WCOND16__from__WBEG17" -> fromList [LabIdent "_WCOND16"] <- fromList [LabIdent "_WBEG17"]
"_WCOND16__from_entry" -> fromList [LabIdent "_WCOND16"] <- fromList [LabIdent ".L_entry"]
"_WEND18" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_WCOND16"]
Code: 
.method String & ~cl_TopLevel.repStr (String & %a_t_9, int %a_t_10): [
.L_entry:
  %v_t_9 := load String & & param 0 %a_t_9;
  %v_t_10 := load int & param 1 %a_t_10;
  %v_t_12 := newstr "";
  %v_t_13 := String & %v_t_12;
  %v_t_15 := 0;
  jump _WCOND16;
  _WCOND16:
  %v___temp_0 := int %v_t_15 < int %v_t_10;
  jump if boolean %v___temp_0 then _WBEG17 else _WEND18;
  _WBEG17:
  %v_t_19 := callvirt String & String.concat (String & %v_t_13, String & %v_t_9);
  %v_t_13 := String & %v_t_19;
  %v_t_21 := int %v_t_15 + 1;
  %v_t_15 := int %v_t_21;
  jump _WCOND16;
  _WEND18:
  %v___temp_1 := String & %v_t_13;
  %v_return := String & %v___temp_1;
  jump .L_exit;
.L_exit:
  return String & %v_return;
]

CFG for ~cl_TopLevel.main:
[".L_entry",".L_exit","_WBEG41","_WCOND40","_WCOND40__from__WBEG41","_WCOND40__from_entry","_WEND42"]
".L_entry" -> fromList [LabIdent "_WCOND40__from_entry"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_WEND42"]
"_WBEG41" -> fromList [LabIdent "_WCOND40__from__WBEG41"] <- fromList [LabIdent "_WCOND40"]
"_WCOND40" -> fromList [LabIdent "_WBEG41",LabIdent "_WEND42"] <- fromList [LabIdent "_WCOND40__from__WBEG41",LabIdent "_WCOND40__from_entry"]
"_WCOND40__from__WBEG41" -> fromList [LabIdent "_WCOND40"] <- fromList [LabIdent "_WBEG41"]
"_WCOND40__from_entry" -> fromList [LabIdent "_WCOND40"] <- fromList [LabIdent ".L_entry"]
"_WEND42" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_WCOND40"]
Code: 
.method int ~cl_TopLevel.main (): [
.L_entry:
  %v_t_23 := call int ~cl_TopLevel.fac (10);
  call int ~cl_TopLevel.printInt (int %v_t_23);
  %v_t_26 := call int ~cl_TopLevel.rfac (10);
  call int ~cl_TopLevel.printInt (int %v_t_26);
  %v_t_29 := call int ~cl_TopLevel.mfac (10);
  call int ~cl_TopLevel.printInt (int %v_t_29);
  %v_t_32 := call int ~cl_TopLevel.ifac (10);
  call int ~cl_TopLevel.printInt (int %v_t_32);
  %v_t_37 := 10;
  %v_t_39 := 1;
  jump _WCOND40;
  _WCOND40:
  %v___temp_2 := int %v_t_37 > 0;
  jump if boolean %v___temp_2 then _WBEG41 else _WEND42;
  _WBEG41:
  %v_t_43 := int %v_t_39 * int %v_t_37;
  %v_t_39 := int %v_t_43;
  %v_t_45 := int %v_t_37 - 1;
  %v_t_37 := int %v_t_45;
  jump _WCOND40;
  _WEND42:
  call int ~cl_TopLevel.printInt (int %v_t_39);
  %v_t_49 := newstr "=";
  %v_t_51 := call String & ~cl_TopLevel.repStr (String & %v_t_49, 60);
  %v_t_52 := String & %v_t_51;
  call int ~cl_TopLevel.printString (String & %v_t_52);
  %v_t_55 := newstr "hello */";
  call int ~cl_TopLevel.printString (String & %v_t_55);
  %v_t_58 := newstr "/* world";
  call int ~cl_TopLevel.printString (String & %v_t_58);
  %v___temp_3 := 0;
  %v_return := int %v___temp_3;
  jump .L_exit;
.L_exit:
  return int %v_return;
]

CFG for ~cl_TopLevel.fac:
[".L_entry",".L_exit","_WBEG68","_WCOND67","_WCOND67__from__WBEG68","_WCOND67__from_entry","_WEND69"]
".L_entry" -> fromList [LabIdent "_WCOND67__from_entry"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_WEND69"]
"_WBEG68" -> fromList [LabIdent "_WCOND67__from__WBEG68"] <- fromList [LabIdent "_WCOND67"]
"_WCOND67" -> fromList [LabIdent "_WBEG68",LabIdent "_WEND69"] <- fromList [LabIdent "_WCOND67__from__WBEG68",LabIdent "_WCOND67__from_entry"]
"_WCOND67__from__WBEG68" -> fromList [LabIdent "_WCOND67"] <- fromList [LabIdent "_WBEG68"]
"_WCOND67__from_entry" -> fromList [LabIdent "_WCOND67"] <- fromList [LabIdent ".L_entry"]
"_WEND69" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_WCOND67"]
Code: 
.method int ~cl_TopLevel.fac (int %a_t_61): [
.L_entry:
  %v_t_61 := load int & param 0 %a_t_61;
  %v_t_63 := 0;
  %v_t_65 := 0;
  %v_t_63 := 1;
  %v_t_65 := int %v_t_61;
  jump _WCOND67;
  _WCOND67:
  %v___temp_4 := int %v_t_65 > 0;
  jump if boolean %v___temp_4 then _WBEG68 else _WEND69;
  _WBEG68:
  %v_t_70 := int %v_t_63 * int %v_t_65;
  %v_t_63 := int %v_t_70;
  %v_t_72 := int %v_t_65 + -1;
  %v_t_65 := int %v_t_72;
  jump _WCOND67;
  _WEND69:
  %v___temp_5 := int %v_t_63;
  %v_return := int %v___temp_5;
  jump .L_exit;
.L_exit:
  return int %v_return;
]

CFG for ~cl_TopLevel.rfac:
[".L_entry",".L_exit",".L_exit__from__IELSE76",".L_exit__from__IIF75","_IELSE76","_IIF75"]
".L_entry" -> fromList [LabIdent "_IELSE76",LabIdent "_IIF75"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_exit__from__IELSE76",LabIdent ".L_exit__from__IIF75"]
".L_exit__from__IELSE76" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_IELSE76"]
".L_exit__from__IIF75" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_IIF75"]
"_IELSE76" -> fromList [LabIdent ".L_exit__from__IELSE76"] <- fromList [LabIdent ".L_entry"]
"_IIF75" -> fromList [LabIdent ".L_exit__from__IIF75"] <- fromList [LabIdent ".L_entry"]
Code: 
.method int ~cl_TopLevel.rfac (int %a_t_74): [
.L_entry:
  %v_t_74 := load int & param 0 %a_t_74;
  %v___temp_6 := int %v_t_74 == 0;
  jump if boolean %v___temp_6 then _IIF75 else _IELSE76;
  _IELSE76:
  %v_t_81 := int %v_t_74 + -1;
  %v_t_82 := call int ~cl_TopLevel.rfac (int %v_t_81);
  %v_t_83 := int %v_t_74 * int %v_t_82;
  %v___temp_8 := int %v_t_83;
  %v_return := int %v___temp_8;
  jump .L_exit;
.L_exit:
  return int %v_return;
  _IIF75:
  %v___temp_7 := 1;
  %v_return := int %v___temp_7;
  jump .L_exit;
]

CFG for ~cl_TopLevel.mfac:
[".L_entry",".L_exit",".L_exit__from__IELSE86",".L_exit__from__IIF85","_IELSE86","_IIF85"]
".L_entry" -> fromList [LabIdent "_IELSE86",LabIdent "_IIF85"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_exit__from__IELSE86",LabIdent ".L_exit__from__IIF85"]
".L_exit__from__IELSE86" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_IELSE86"]
".L_exit__from__IIF85" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_IIF85"]
"_IELSE86" -> fromList [LabIdent ".L_exit__from__IELSE86"] <- fromList [LabIdent ".L_entry"]
"_IIF85" -> fromList [LabIdent ".L_exit__from__IIF85"] <- fromList [LabIdent ".L_entry"]
Code: 
.method int ~cl_TopLevel.mfac (int %a_t_84): [
.L_entry:
  %v_t_84 := load int & param 0 %a_t_84;
  %v___temp_9 := int %v_t_84 == 0;
  jump if boolean %v___temp_9 then _IIF85 else _IELSE86;
  _IELSE86:
  %v_t_91 := int %v_t_84 + -1;
  %v_t_92 := call int ~cl_TopLevel.nfac (int %v_t_91);
  %v_t_93 := int %v_t_84 * int %v_t_92;
  %v___temp_11 := int %v_t_93;
  %v_return := int %v___temp_11;
  jump .L_exit;
.L_exit:
  return int %v_return;
  _IIF85:
  %v___temp_10 := 1;
  %v_return := int %v___temp_10;
  jump .L_exit;
]

CFG for ~cl_TopLevel.nfac:
[".L_entry",".L_exit",".L_exit__from__IELSE96",".L_exit__from__IIF95","_IELSE96","_IIF95"]
".L_entry" -> fromList [LabIdent "_IELSE96",LabIdent "_IIF95"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_exit__from__IELSE96",LabIdent ".L_exit__from__IIF95"]
".L_exit__from__IELSE96" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_IELSE96"]
".L_exit__from__IIF95" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_IIF95"]
"_IELSE96" -> fromList [LabIdent ".L_exit__from__IELSE96"] <- fromList [LabIdent ".L_entry"]
"_IIF95" -> fromList [LabIdent ".L_exit__from__IIF95"] <- fromList [LabIdent ".L_entry"]
Code: 
.method int ~cl_TopLevel.nfac (int %a_t_94): [
.L_entry:
  %v_t_94 := load int & param 0 %a_t_94;
  %v___temp_12 := int %v_t_94 != 0;
  jump if boolean %v___temp_12 then _IIF95 else _IELSE96;
  _IELSE96:
  %v___temp_14 := 1;
  %v_return := int %v___temp_14;
  jump .L_exit;
.L_exit:
  return int %v_return;
  _IIF95:
  %v_t_100 := int %v_t_94 + -1;
  %v_t_101 := call int ~cl_TopLevel.mfac (int %v_t_100);
  %v_t_102 := int %v_t_94 * int %v_t_101;
  %v___temp_13 := int %v_t_102;
  %v_return := int %v___temp_13;
  jump .L_exit;
]

CFG for ~cl_TopLevel.ifac:
[".L_entry",".L_exit"]
".L_entry" -> fromList [LabIdent ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_entry"]
Code: 
.method int ~cl_TopLevel.ifac (int %a_t_104): [
.L_entry:
  %v_t_104 := load int & param 0 %a_t_104;
  %v_t_106 := call int ~cl_TopLevel.ifac2f (1, int %v_t_104);
  %v___temp_15 := int %v_t_106;
  %v_return := int %v___temp_15;
  jump .L_exit;
.L_exit:
  return int %v_return;
]

CFG for ~cl_TopLevel.ifac2f:
[".L_entry",".L_exit",".L_exit__from__IEND114",".L_exit__from__IIF109",".L_exit__from__IIF112","_IELSE110","_IELSE113","_IEND111","_IEND114","_IIF109","_IIF112"]
".L_entry" -> fromList [LabIdent "_IELSE110",LabIdent "_IIF109"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_exit__from__IEND114",LabIdent ".L_exit__from__IIF109",LabIdent ".L_exit__from__IIF112"]
".L_exit__from__IEND114" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_IEND114"]
".L_exit__from__IIF109" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_IIF109"]
".L_exit__from__IIF112" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_IIF112"]
"_IELSE110" -> fromList [LabIdent "_IEND111"] <- fromList [LabIdent ".L_entry"]
"_IELSE113" -> fromList [LabIdent "_IEND114"] <- fromList [LabIdent "_IEND111"]
"_IEND111" -> fromList [LabIdent "_IELSE113",LabIdent "_IIF112"] <- fromList [LabIdent "_IELSE110"]
"_IEND114" -> fromList [LabIdent ".L_exit__from__IEND114"] <- fromList [LabIdent "_IELSE113"]
"_IIF109" -> fromList [LabIdent ".L_exit__from__IIF109"] <- fromList [LabIdent ".L_entry"]
"_IIF112" -> fromList [LabIdent ".L_exit__from__IIF112"] <- fromList [LabIdent "_IEND111"]
Code: 
.method int ~cl_TopLevel.ifac2f (int %a_t_107, int %a_t_108): [
.L_entry:
  %v_t_107 := load int & param 0 %a_t_107;
  %v_t_108 := load int & param 1 %a_t_108;
  %v___temp_16 := int %v_t_107 == int %v_t_108;
  jump if boolean %v___temp_16 then _IIF109 else _IELSE110;
  _IELSE110:
  jump _IEND111;
  _IEND111:
  %v___temp_18 := int %v_t_107 > int %v_t_108;
  jump if boolean %v___temp_18 then _IIF112 else _IELSE113;
  _IELSE113:
  jump _IEND114;
  _IEND114:
  %v_t_117 := 0;
  %v_t_118 := int %v_t_107 + int %v_t_108;
  %v_t_120 := int %v_t_118 / 2;
  %v_t_117 := int %v_t_120;
  %v_t_121 := call int ~cl_TopLevel.ifac2f (int %v_t_107, int %v_t_117);
  %v_t_123 := int %v_t_117 + 1;
  %v_t_124 := call int ~cl_TopLevel.ifac2f (int %v_t_123, int %v_t_108);
  %v_t_125 := int %v_t_121 * int %v_t_124;
  %v___temp_20 := int %v_t_125;
  %v_return := int %v___temp_20;
  jump .L_exit;
.L_exit:
  return int %v_return;
  _IIF112:
  %v___temp_19 := 1;
  %v_return := int %v___temp_19;
  jump .L_exit;
  _IIF109:
  %v___temp_17 := int %v_t_107;
  %v_return := int %v___temp_17;
  jump .L_exit;
]


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> END STEP Unfolding phis...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> GENERATED INTERMEDIATE STEP Inlining trivial jumps...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] CFG for ~cl_TopLevel.repStr:
[".L_entry","_WBEG17","_WCOND16","_WEND18"]
".L_entry" -> fromList [LabIdent "_WCOND16"] <- fromList []
"_WBEG17" -> fromList [LabIdent "_WCOND16"] <- fromList [LabIdent "_WCOND16"]
"_WCOND16" -> fromList [LabIdent "_WBEG17",LabIdent "_WEND18"] <- fromList [LabIdent ".L_entry",LabIdent "_WBEG17"]
"_WEND18" -> fromList [] <- fromList [LabIdent "_WCOND16"]
Code: 
.method String & ~cl_TopLevel.repStr (String & %a_t_9, int %a_t_10): [
.L_entry:
  endphi;
  %v_t_9 := load String & & param 0 %a_t_9;
  %v_t_10 := load int & param 1 %a_t_10;
  %v_t_12 := newstr "";
  swap String & %v_t_13~2 %v_t_12;
  %v_t_15~2 := 0;
  jump _WCOND16;
  _WCOND16:
  endphi;
  %v___temp_0 := int %v_t_15~2 < int %v_t_10;
  jump if boolean %v___temp_0 then _WBEG17 else _WEND18;
  _WBEG17:
  endphi;
  %v_t_19 := callvirt String & String.concat (String & %v_t_13~2, String & %v_t_9);
  %v_t_21 := int %v_t_15~2 + 1;
  swap int %v_t_15~2 %v_t_21;
  swap String & %v_t_13~2 %v_t_19;
  jump _WCOND16;
  _WEND18:
  endphi;
  endphi;
  return String & %v_t_13~2;
]

CFG for ~cl_TopLevel.main:
[".L_entry","_WBEG41","_WCOND40","_WEND42"]
".L_entry" -> fromList [LabIdent "_WCOND40"] <- fromList []
"_WBEG41" -> fromList [LabIdent "_WCOND40"] <- fromList [LabIdent "_WCOND40"]
"_WCOND40" -> fromList [LabIdent "_WBEG41",LabIdent "_WEND42"] <- fromList [LabIdent ".L_entry",LabIdent "_WBEG41"]
"_WEND42" -> fromList [] <- fromList [LabIdent "_WCOND40"]
Code: 
.method int ~cl_TopLevel.main (): [
.L_entry:
  endphi;
  %v_t_23 := call int ~cl_TopLevel.fac (10);
  call int ~cl_TopLevel.printInt (int %v_t_23);
  %v_t_26 := call int ~cl_TopLevel.rfac (10);
  call int ~cl_TopLevel.printInt (int %v_t_26);
  %v_t_29 := call int ~cl_TopLevel.mfac (10);
  call int ~cl_TopLevel.printInt (int %v_t_29);
  %v_t_32 := call int ~cl_TopLevel.ifac (10);
  call int ~cl_TopLevel.printInt (int %v_t_32);
  %v_t_39~2 := 1;
  %v_t_37~2 := 10;
  jump _WCOND40;
  _WCOND40:
  endphi;
  %v___temp_2 := int %v_t_37~2 > 0;
  jump if boolean %v___temp_2 then _WBEG41 else _WEND42;
  _WBEG41:
  endphi;
  %v_t_43 := int %v_t_39~2 * int %v_t_37~2;
  %v_t_45 := int %v_t_37~2 - 1;
  swap int %v_t_37~2 %v_t_45;
  swap int %v_t_39~2 %v_t_43;
  jump _WCOND40;
  _WEND42:
  endphi;
  call int ~cl_TopLevel.printInt (int %v_t_39~2);
  %v_t_49 := newstr "=";
  %v_t_51 := call String & ~cl_TopLevel.repStr (String & %v_t_49, 60);
  call int ~cl_TopLevel.printString (String & %v_t_51);
  %v_t_55 := newstr "hello */";
  call int ~cl_TopLevel.printString (String & %v_t_55);
  %v_t_58 := newstr "/* world";
  call int ~cl_TopLevel.printString (String & %v_t_58);
  endphi;
  return 0;
]

CFG for ~cl_TopLevel.fac:
[".L_entry","_WBEG68","_WCOND67","_WEND69"]
".L_entry" -> fromList [LabIdent "_WCOND67"] <- fromList []
"_WBEG68" -> fromList [LabIdent "_WCOND67"] <- fromList [LabIdent "_WCOND67"]
"_WCOND67" -> fromList [LabIdent "_WBEG68",LabIdent "_WEND69"] <- fromList [LabIdent ".L_entry",LabIdent "_WBEG68"]
"_WEND69" -> fromList [] <- fromList [LabIdent "_WCOND67"]
Code: 
.method int ~cl_TopLevel.fac (int %a_t_61): [
.L_entry:
  endphi;
  %v_t_61 := load int & param 0 %a_t_61;
  swap int %v_t_65~3 %v_t_61;
  %v_t_63~3 := 1;
  jump _WCOND67;
  _WCOND67:
  endphi;
  %v___temp_4 := int %v_t_65~3 > 0;
  jump if boolean %v___temp_4 then _WBEG68 else _WEND69;
  _WBEG68:
  endphi;
  %v_t_70 := int %v_t_63~3 * int %v_t_65~3;
  %v_t_72 := int %v_t_65~3 + -1;
  swap int %v_t_63~3 %v_t_70;
  swap int %v_t_65~3 %v_t_72;
  jump _WCOND67;
  _WEND69:
  endphi;
  endphi;
  return int %v_t_63~3;
]

CFG for ~cl_TopLevel.rfac:
[".L_entry",".L_exit","_IELSE76","_IIF75"]
".L_entry" -> fromList [LabIdent "_IELSE76",LabIdent "_IIF75"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_IELSE76",LabIdent "_IIF75"]
"_IELSE76" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
"_IIF75" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
Code: 
.method int ~cl_TopLevel.rfac (int %a_t_74): [
.L_entry:
  endphi;
  %v_t_74 := load int & param 0 %a_t_74;
  %v___temp_6 := int %v_t_74 == 0;
  jump if boolean %v___temp_6 then _IIF75 else _IELSE76;
  _IELSE76:
  endphi;
  %v_t_81 := int %v_t_74 + -1;
  %v_t_82 := call int ~cl_TopLevel.rfac (int %v_t_81);
  %v_t_83 := int %v_t_74 * int %v_t_82;
  swap int %v_return~2 %v_t_83;
  jump .L_exit;
.L_exit:
  endphi;
  return int %v_return~2;
  _IIF75:
  endphi;
  %v_return~2 := 1;
  jump .L_exit;
]

CFG for ~cl_TopLevel.mfac:
[".L_entry",".L_exit","_IELSE86","_IIF85"]
".L_entry" -> fromList [LabIdent "_IELSE86",LabIdent "_IIF85"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_IELSE86",LabIdent "_IIF85"]
"_IELSE86" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
"_IIF85" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
Code: 
.method int ~cl_TopLevel.mfac (int %a_t_84): [
.L_entry:
  endphi;
  %v_t_84 := load int & param 0 %a_t_84;
  %v___temp_9 := int %v_t_84 == 0;
  jump if boolean %v___temp_9 then _IIF85 else _IELSE86;
  _IELSE86:
  endphi;
  %v_t_91 := int %v_t_84 + -1;
  %v_t_92 := call int ~cl_TopLevel.nfac (int %v_t_91);
  %v_t_93 := int %v_t_84 * int %v_t_92;
  swap int %v_return~2 %v_t_93;
  jump .L_exit;
.L_exit:
  endphi;
  return int %v_return~2;
  _IIF85:
  endphi;
  %v_return~2 := 1;
  jump .L_exit;
]

CFG for ~cl_TopLevel.nfac:
[".L_entry",".L_exit","_IELSE96","_IIF95"]
".L_entry" -> fromList [LabIdent "_IELSE96",LabIdent "_IIF95"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_IELSE96",LabIdent "_IIF95"]
"_IELSE96" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
"_IIF95" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
Code: 
.method int ~cl_TopLevel.nfac (int %a_t_94): [
.L_entry:
  endphi;
  %v_t_94 := load int & param 0 %a_t_94;
  %v___temp_12 := int %v_t_94 != 0;
  jump if boolean %v___temp_12 then _IIF95 else _IELSE96;
  _IELSE96:
  endphi;
  %v_return~2 := 1;
  jump .L_exit;
.L_exit:
  endphi;
  return int %v_return~2;
  _IIF95:
  endphi;
  %v_t_100 := int %v_t_94 + -1;
  %v_t_101 := call int ~cl_TopLevel.mfac (int %v_t_100);
  %v_t_102 := int %v_t_94 * int %v_t_101;
  swap int %v_return~2 %v_t_102;
  jump .L_exit;
]

CFG for ~cl_TopLevel.ifac:
[".L_entry"]
".L_entry" -> fromList [] <- fromList []
Code: 
.method int ~cl_TopLevel.ifac (int %a_t_104): [
.L_entry:
  endphi;
  %v_t_104 := load int & param 0 %a_t_104;
  %v_t_106 := call int ~cl_TopLevel.ifac2f (1, int %v_t_104);
  endphi;
  return int %v_t_106;
]

CFG for ~cl_TopLevel.ifac2f:
[".L_entry",".L_exit","_IELSE110","_IELSE113","_IIF109","_IIF112"]
".L_entry" -> fromList [LabIdent "_IELSE110",LabIdent "_IIF109"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_IELSE113",LabIdent "_IIF109",LabIdent "_IIF112"]
"_IELSE110" -> fromList [LabIdent "_IELSE113",LabIdent "_IIF112"] <- fromList [LabIdent ".L_entry"]
"_IELSE113" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_IELSE110"]
"_IIF109" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
"_IIF112" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_IELSE110"]
Code: 
.method int ~cl_TopLevel.ifac2f (int %a_t_107, int %a_t_108): [
.L_entry:
  endphi;
  %v_t_107 := load int & param 0 %a_t_107;
  %v_t_108 := load int & param 1 %a_t_108;
  %v___temp_16 := int %v_t_107 == int %v_t_108;
  jump if boolean %v___temp_16 then _IIF109 else _IELSE110;
  _IELSE110:
  endphi;
  endphi;
  %v___temp_18 := int %v_t_107 > int %v_t_108;
  jump if boolean %v___temp_18 then _IIF112 else _IELSE113;
  _IELSE113:
  endphi;
  endphi;
  %v_t_118 := int %v_t_107 + int %v_t_108;
  %v_t_120 := int %v_t_118 / 2;
  %v_t_121 := call int ~cl_TopLevel.ifac2f (int %v_t_107, int %v_t_120);
  %v_t_123 := int %v_t_120 + 1;
  %v_t_124 := call int ~cl_TopLevel.ifac2f (int %v_t_123, int %v_t_108);
  %v_t_125 := int %v_t_121 * int %v_t_124;
  swap int %v_return~2 %v_t_125;
  jump .L_exit;
.L_exit:
  endphi;
  return int %v_return~2;
  _IIF112:
  endphi;
  %v_return~2 := 1;
  jump .L_exit;
  _IIF109:
  endphi;
  swap int %v_return~2 %v_t_107;
  jump .L_exit;
]


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> END STEP Inlining trivial jumps...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> GENERATED INTERMEDIATE STEP Final liveness analysis...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] CFG for ~cl_TopLevel.repStr:
[".L_entry","_WBEG17","_WCOND16","_WEND18"]
".L_entry" -> fromList [LabIdent "_WCOND16"] <- fromList []
"_WBEG17" -> fromList [LabIdent "_WCOND16"] <- fromList [LabIdent "_WCOND16"]
"_WCOND16" -> fromList [LabIdent "_WBEG17",LabIdent "_WEND18"] <- fromList [LabIdent ".L_entry",LabIdent "_WBEG17"]
"_WEND18" -> fromList [] <- fromList [LabIdent "_WCOND16"]
Liveness at start of .L_entry: in = [("%a_t_10",(3,Ref () (Int ()))),("%a_t_9",(2,Ref () (Ref () (Cl () (SymIdent "String")))))], out = [("%a_t_10",(2,Ref () (Int ()))),("%a_t_9",(1,Ref () (Ref () (Cl () (SymIdent "String")))))], use = [], kill = []
Liveness at end of .L_entry: in = [("%v_t_15~2",(4,Int ())),("%v_t_13~2",(9,Ref () (Cl () (SymIdent "String")))),("%v_t_10",(4,Int ())),("%v_t_9",(9,Ref () (Cl () (SymIdent "String"))))], out = [("%v_t_15~2",(3,Int ())),("%v_t_13~2",(8,Ref () (Cl () (SymIdent "String")))),("%v_t_10",(3,Int ())),("%v_t_9",(8,Ref () (Cl () (SymIdent "String"))))], use = [], kill = []
Liveness at start of _WBEG17: in = [("%v_t_15~2",(3,Int ())),("%v_t_13~2",(2,Ref () (Cl () (SymIdent "String")))),("%v_t_10",(10,Int ())),("%v_t_9",(2,Ref () (Cl () (SymIdent "String"))))], out = [("%v_t_15~2",(2,Int ())),("%v_t_13~2",(1,Ref () (Cl () (SymIdent "String")))),("%v_t_10",(9,Int ())),("%v_t_9",(1,Ref () (Cl () (SymIdent "String"))))], use = [], kill = []
Liveness at end of _WBEG17: in = [("%v_t_15~2",(4,Int ())),("%v_t_13~2",(9,Ref () (Cl () (SymIdent "String")))),("%v_t_10",(4,Int ())),("%v_t_9",(9,Ref () (Cl () (SymIdent "String"))))], out = [("%v_t_15~2",(3,Int ())),("%v_t_13~2",(8,Ref () (Cl () (SymIdent "String")))),("%v_t_10",(3,Int ())),("%v_t_9",(8,Ref () (Cl () (SymIdent "String"))))], use = [], kill = []
Liveness at start of _WCOND16: in = [("%v_t_15~2",(2,Int ())),("%v_t_13~2",(7,Ref () (Cl () (SymIdent "String")))),("%v_t_10",(2,Int ())),("%v_t_9",(7,Ref () (Cl () (SymIdent "String"))))], out = [("%v_t_15~2",(1,Int ())),("%v_t_13~2",(6,Ref () (Cl () (SymIdent "String")))),("%v_t_10",(1,Int ())),("%v_t_9",(6,Ref () (Cl () (SymIdent "String"))))], use = [], kill = []
Liveness at end of _WCOND16: in = [("%v___temp_0",(0,Bool ())),("%v_t_15~2",(5,Int ())),("%v_t_13~2",(4,Ref () (Cl () (SymIdent "String")))),("%v_t_10",(12,Int ())),("%v_t_9",(4,Ref () (Cl () (SymIdent "String"))))], out = [("%v_t_15~2",(4,Int ())),("%v_t_13~2",(3,Ref () (Cl () (SymIdent "String")))),("%v_t_10",(11,Int ())),("%v_t_9",(3,Ref () (Cl () (SymIdent "String"))))], use = [("%v___temp_0",Bool ())], kill = []
Liveness at start of _WEND18: in = [("%v_t_13~2",(3,Ref () (Cl () (SymIdent "String"))))], out = [("%v_t_13~2",(2,Ref () (Cl () (SymIdent "String"))))], use = [], kill = []
Liveness at end of _WEND18: in = [("%v_t_13~2",(0,Ref () (Cl () (SymIdent "String"))))], out = [], use = [("%v_t_13~2",Ref () (Cl () (SymIdent "String")))], kill = []
Code: 
.method String & ~cl_TopLevel.repStr (String & %a_t_9, int %a_t_10): [
.L_entry:
  endphi;
  %v_t_9 := load String & & param 0 %a_t_9;
  %v_t_10 := load int & param 1 %a_t_10;
  %v_t_12 := newstr "";
  swap String & %v_t_13~2 %v_t_12;
  %v_t_15~2 := 0;
  jump _WCOND16;
  _WCOND16:
  endphi;
  %v___temp_0 := int %v_t_15~2 < int %v_t_10;
  jump if boolean %v___temp_0 then _WBEG17 else _WEND18;
  _WBEG17:
  endphi;
  %v_t_19 := callvirt String & String.concat (String & %v_t_13~2, String & %v_t_9);
  %v_t_21 := int %v_t_15~2 + 1;
  swap int %v_t_15~2 %v_t_21;
  swap String & %v_t_13~2 %v_t_19;
  jump _WCOND16;
  _WEND18:
  endphi;
  endphi;
  return String & %v_t_13~2;
]

CFG for ~cl_TopLevel.main:
[".L_entry","_WBEG41","_WCOND40","_WEND42"]
".L_entry" -> fromList [LabIdent "_WCOND40"] <- fromList []
"_WBEG41" -> fromList [LabIdent "_WCOND40"] <- fromList [LabIdent "_WCOND40"]
"_WCOND40" -> fromList [LabIdent "_WBEG41",LabIdent "_WEND42"] <- fromList [LabIdent ".L_entry",LabIdent "_WBEG41"]
"_WEND42" -> fromList [] <- fromList [LabIdent "_WCOND40"]
Liveness at start of .L_entry: in = [], out = [], use = [], kill = []
Liveness at end of .L_entry: in = [("%v_t_37~2",(4,Int ())),("%v_t_39~2",(9,Int ()))], out = [("%v_t_37~2",(3,Int ())),("%v_t_39~2",(8,Int ()))], use = [], kill = []
Liveness at start of _WBEG41: in = [("%v_t_37~2",(2,Int ())),("%v_t_39~2",(2,Int ()))], out = [("%v_t_37~2",(1,Int ())),("%v_t_39~2",(1,Int ()))], use = [], kill = []
Liveness at end of _WBEG41: in = [("%v_t_37~2",(4,Int ())),("%v_t_39~2",(9,Int ()))], out = [("%v_t_37~2",(3,Int ())),("%v_t_39~2",(8,Int ()))], use = [], kill = []
Liveness at start of _WCOND40: in = [("%v_t_37~2",(2,Int ())),("%v_t_39~2",(7,Int ()))], out = [("%v_t_37~2",(1,Int ())),("%v_t_39~2",(6,Int ()))], use = [], kill = []
Liveness at end of _WCOND40: in = [("%v___temp_2",(0,Bool ())),("%v_t_37~2",(4,Int ())),("%v_t_39~2",(4,Int ()))], out = [("%v_t_37~2",(3,Int ())),("%v_t_39~2",(3,Int ()))], use = [("%v___temp_2",Bool ())], kill = []
Liveness at start of _WEND42: in = [("%v_t_39~2",(2,Int ()))], out = [("%v_t_39~2",(1,Int ()))], use = [], kill = []
Liveness at end of _WEND42: in = [], out = [], use = [], kill = []
Code: 
.method int ~cl_TopLevel.main (): [
.L_entry:
  endphi;
  %v_t_23 := call int ~cl_TopLevel.fac (10);
  call int ~cl_TopLevel.printInt (int %v_t_23);
  %v_t_26 := call int ~cl_TopLevel.rfac (10);
  call int ~cl_TopLevel.printInt (int %v_t_26);
  %v_t_29 := call int ~cl_TopLevel.mfac (10);
  call int ~cl_TopLevel.printInt (int %v_t_29);
  %v_t_32 := call int ~cl_TopLevel.ifac (10);
  call int ~cl_TopLevel.printInt (int %v_t_32);
  %v_t_39~2 := 1;
  %v_t_37~2 := 10;
  jump _WCOND40;
  _WCOND40:
  endphi;
  %v___temp_2 := int %v_t_37~2 > 0;
  jump if boolean %v___temp_2 then _WBEG41 else _WEND42;
  _WBEG41:
  endphi;
  %v_t_43 := int %v_t_39~2 * int %v_t_37~2;
  %v_t_45 := int %v_t_37~2 - 1;
  swap int %v_t_37~2 %v_t_45;
  swap int %v_t_39~2 %v_t_43;
  jump _WCOND40;
  _WEND42:
  endphi;
  call int ~cl_TopLevel.printInt (int %v_t_39~2);
  %v_t_49 := newstr "=";
  %v_t_51 := call String & ~cl_TopLevel.repStr (String & %v_t_49, 60);
  call int ~cl_TopLevel.printString (String & %v_t_51);
  %v_t_55 := newstr "hello */";
  call int ~cl_TopLevel.printString (String & %v_t_55);
  %v_t_58 := newstr "/* world";
  call int ~cl_TopLevel.printString (String & %v_t_58);
  endphi;
  return 0;
]

CFG for ~cl_TopLevel.fac:
[".L_entry","_WBEG68","_WCOND67","_WEND69"]
".L_entry" -> fromList [LabIdent "_WCOND67"] <- fromList []
"_WBEG68" -> fromList [LabIdent "_WCOND67"] <- fromList [LabIdent "_WCOND67"]
"_WCOND67" -> fromList [LabIdent "_WBEG68",LabIdent "_WEND69"] <- fromList [LabIdent ".L_entry",LabIdent "_WBEG68"]
"_WEND69" -> fromList [] <- fromList [LabIdent "_WCOND67"]
Liveness at start of .L_entry: in = [("%a_t_61",(2,Ref () (Int ())))], out = [("%a_t_61",(1,Ref () (Int ())))], use = [], kill = []
Liveness at end of .L_entry: in = [("%v_t_63~3",(9,Int ())),("%v_t_65~3",(4,Int ()))], out = [("%v_t_63~3",(8,Int ())),("%v_t_65~3",(3,Int ()))], use = [], kill = []
Liveness at start of _WBEG68: in = [("%v_t_63~3",(2,Int ())),("%v_t_65~3",(2,Int ()))], out = [("%v_t_63~3",(1,Int ())),("%v_t_65~3",(1,Int ()))], use = [], kill = []
Liveness at end of _WBEG68: in = [("%v_t_63~3",(9,Int ())),("%v_t_65~3",(4,Int ()))], out = [("%v_t_63~3",(8,Int ())),("%v_t_65~3",(3,Int ()))], use = [], kill = []
Liveness at start of _WCOND67: in = [("%v_t_63~3",(7,Int ())),("%v_t_65~3",(2,Int ()))], out = [("%v_t_63~3",(6,Int ())),("%v_t_65~3",(1,Int ()))], use = [], kill = []
Liveness at end of _WCOND67: in = [("%v___temp_4",(0,Bool ())),("%v_t_63~3",(4,Int ())),("%v_t_65~3",(4,Int ()))], out = [("%v_t_63~3",(3,Int ())),("%v_t_65~3",(3,Int ()))], use = [("%v___temp_4",Bool ())], kill = []
Liveness at start of _WEND69: in = [("%v_t_63~3",(3,Int ()))], out = [("%v_t_63~3",(2,Int ()))], use = [], kill = []
Liveness at end of _WEND69: in = [("%v_t_63~3",(0,Int ()))], out = [], use = [("%v_t_63~3",Int ())], kill = []
Code: 
.method int ~cl_TopLevel.fac (int %a_t_61): [
.L_entry:
  endphi;
  %v_t_61 := load int & param 0 %a_t_61;
  swap int %v_t_65~3 %v_t_61;
  %v_t_63~3 := 1;
  jump _WCOND67;
  _WCOND67:
  endphi;
  %v___temp_4 := int %v_t_65~3 > 0;
  jump if boolean %v___temp_4 then _WBEG68 else _WEND69;
  _WBEG68:
  endphi;
  %v_t_70 := int %v_t_63~3 * int %v_t_65~3;
  %v_t_72 := int %v_t_65~3 + -1;
  swap int %v_t_63~3 %v_t_70;
  swap int %v_t_65~3 %v_t_72;
  jump _WCOND67;
  _WEND69:
  endphi;
  endphi;
  return int %v_t_63~3;
]

CFG for ~cl_TopLevel.rfac:
[".L_entry",".L_exit","_IELSE76","_IIF75"]
".L_entry" -> fromList [LabIdent "_IELSE76",LabIdent "_IIF75"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_IELSE76",LabIdent "_IIF75"]
"_IELSE76" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
"_IIF75" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
Liveness at start of .L_entry: in = [("%a_t_74",(2,Ref () (Int ())))], out = [("%a_t_74",(1,Ref () (Int ())))], use = [], kill = []
Liveness at end of .L_entry: in = [("%v___temp_6",(0,Bool ())),("%v_t_74",(4,Int ()))], out = [("%v_t_74",(3,Int ()))], use = [("%v___temp_6",Bool ())], kill = []
Liveness at start of .L_exit: in = [("%v_return~2",(2,Int ()))], out = [("%v_return~2",(1,Int ()))], use = [], kill = []
Liveness at end of .L_exit: in = [("%v_return~2",(0,Int ()))], out = [], use = [("%v_return~2",Int ())], kill = []
Liveness at start of _IELSE76: in = [("%v_t_74",(2,Int ()))], out = [("%v_t_74",(1,Int ()))], use = [], kill = []
Liveness at end of _IELSE76: in = [("%v_return~2",(4,Int ()))], out = [("%v_return~2",(3,Int ()))], use = [], kill = []
Liveness at start of _IIF75: in = [], out = [], use = [], kill = []
Liveness at end of _IIF75: in = [("%v_return~2",(4,Int ()))], out = [("%v_return~2",(3,Int ()))], use = [], kill = []
Code: 
.method int ~cl_TopLevel.rfac (int %a_t_74): [
.L_entry:
  endphi;
  %v_t_74 := load int & param 0 %a_t_74;
  %v___temp_6 := int %v_t_74 == 0;
  jump if boolean %v___temp_6 then _IIF75 else _IELSE76;
  _IELSE76:
  endphi;
  %v_t_81 := int %v_t_74 + -1;
  %v_t_82 := call int ~cl_TopLevel.rfac (int %v_t_81);
  %v_t_83 := int %v_t_74 * int %v_t_82;
  swap int %v_return~2 %v_t_83;
  jump .L_exit;
.L_exit:
  endphi;
  return int %v_return~2;
  _IIF75:
  endphi;
  %v_return~2 := 1;
  jump .L_exit;
]

CFG for ~cl_TopLevel.mfac:
[".L_entry",".L_exit","_IELSE86","_IIF85"]
".L_entry" -> fromList [LabIdent "_IELSE86",LabIdent "_IIF85"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_IELSE86",LabIdent "_IIF85"]
"_IELSE86" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
"_IIF85" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
Liveness at start of .L_entry: in = [("%a_t_84",(2,Ref () (Int ())))], out = [("%a_t_84",(1,Ref () (Int ())))], use = [], kill = []
Liveness at end of .L_entry: in = [("%v___temp_9",(0,Bool ())),("%v_t_84",(4,Int ()))], out = [("%v_t_84",(3,Int ()))], use = [("%v___temp_9",Bool ())], kill = []
Liveness at start of .L_exit: in = [("%v_return~2",(2,Int ()))], out = [("%v_return~2",(1,Int ()))], use = [], kill = []
Liveness at end of .L_exit: in = [("%v_return~2",(0,Int ()))], out = [], use = [("%v_return~2",Int ())], kill = []
Liveness at start of _IELSE86: in = [("%v_t_84",(2,Int ()))], out = [("%v_t_84",(1,Int ()))], use = [], kill = []
Liveness at end of _IELSE86: in = [("%v_return~2",(4,Int ()))], out = [("%v_return~2",(3,Int ()))], use = [], kill = []
Liveness at start of _IIF85: in = [], out = [], use = [], kill = []
Liveness at end of _IIF85: in = [("%v_return~2",(4,Int ()))], out = [("%v_return~2",(3,Int ()))], use = [], kill = []
Code: 
.method int ~cl_TopLevel.mfac (int %a_t_84): [
.L_entry:
  endphi;
  %v_t_84 := load int & param 0 %a_t_84;
  %v___temp_9 := int %v_t_84 == 0;
  jump if boolean %v___temp_9 then _IIF85 else _IELSE86;
  _IELSE86:
  endphi;
  %v_t_91 := int %v_t_84 + -1;
  %v_t_92 := call int ~cl_TopLevel.nfac (int %v_t_91);
  %v_t_93 := int %v_t_84 * int %v_t_92;
  swap int %v_return~2 %v_t_93;
  jump .L_exit;
.L_exit:
  endphi;
  return int %v_return~2;
  _IIF85:
  endphi;
  %v_return~2 := 1;
  jump .L_exit;
]

CFG for ~cl_TopLevel.nfac:
[".L_entry",".L_exit","_IELSE96","_IIF95"]
".L_entry" -> fromList [LabIdent "_IELSE96",LabIdent "_IIF95"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_IELSE96",LabIdent "_IIF95"]
"_IELSE96" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
"_IIF95" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
Liveness at start of .L_entry: in = [("%a_t_94",(2,Ref () (Int ())))], out = [("%a_t_94",(1,Ref () (Int ())))], use = [], kill = []
Liveness at end of .L_entry: in = [("%v___temp_12",(0,Bool ())),("%v_t_94",(4,Int ()))], out = [("%v_t_94",(3,Int ()))], use = [("%v___temp_12",Bool ())], kill = []
Liveness at start of .L_exit: in = [("%v_return~2",(2,Int ()))], out = [("%v_return~2",(1,Int ()))], use = [], kill = []
Liveness at end of .L_exit: in = [("%v_return~2",(0,Int ()))], out = [], use = [("%v_return~2",Int ())], kill = []
Liveness at start of _IELSE96: in = [], out = [], use = [], kill = []
Liveness at end of _IELSE96: in = [("%v_return~2",(4,Int ()))], out = [("%v_return~2",(3,Int ()))], use = [], kill = []
Liveness at start of _IIF95: in = [("%v_t_94",(2,Int ()))], out = [("%v_t_94",(1,Int ()))], use = [], kill = []
Liveness at end of _IIF95: in = [("%v_return~2",(4,Int ()))], out = [("%v_return~2",(3,Int ()))], use = [], kill = []
Code: 
.method int ~cl_TopLevel.nfac (int %a_t_94): [
.L_entry:
  endphi;
  %v_t_94 := load int & param 0 %a_t_94;
  %v___temp_12 := int %v_t_94 != 0;
  jump if boolean %v___temp_12 then _IIF95 else _IELSE96;
  _IELSE96:
  endphi;
  %v_return~2 := 1;
  jump .L_exit;
.L_exit:
  endphi;
  return int %v_return~2;
  _IIF95:
  endphi;
  %v_t_100 := int %v_t_94 + -1;
  %v_t_101 := call int ~cl_TopLevel.mfac (int %v_t_100);
  %v_t_102 := int %v_t_94 * int %v_t_101;
  swap int %v_return~2 %v_t_102;
  jump .L_exit;
]

CFG for ~cl_TopLevel.ifac:
[".L_entry"]
".L_entry" -> fromList [] <- fromList []
Liveness at start of .L_entry: in = [("%a_t_104",(2,Ref () (Int ())))], out = [("%a_t_104",(1,Ref () (Int ())))], use = [], kill = []
Liveness at end of .L_entry: in = [("%v_t_106",(0,Int ()))], out = [], use = [("%v_t_106",Int ())], kill = []
Code: 
.method int ~cl_TopLevel.ifac (int %a_t_104): [
.L_entry:
  endphi;
  %v_t_104 := load int & param 0 %a_t_104;
  %v_t_106 := call int ~cl_TopLevel.ifac2f (1, int %v_t_104);
  endphi;
  return int %v_t_106;
]

CFG for ~cl_TopLevel.ifac2f:
[".L_entry",".L_exit","_IELSE110","_IELSE113","_IIF109","_IIF112"]
".L_entry" -> fromList [LabIdent "_IELSE110",LabIdent "_IIF109"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_IELSE113",LabIdent "_IIF109",LabIdent "_IIF112"]
"_IELSE110" -> fromList [LabIdent "_IELSE113",LabIdent "_IIF112"] <- fromList [LabIdent ".L_entry"]
"_IELSE113" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_IELSE110"]
"_IIF109" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
"_IIF112" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_IELSE110"]
Liveness at start of .L_entry: in = [("%a_t_107",(2,Ref () (Int ()))),("%a_t_108",(3,Ref () (Int ())))], out = [("%a_t_107",(1,Ref () (Int ()))),("%a_t_108",(2,Ref () (Int ())))], use = [], kill = []
Liveness at end of .L_entry: in = [("%v_t_107",(4,Int ())),("%v___temp_16",(0,Bool ())),("%v_t_108",(5,Int ()))], out = [("%v_t_107",(3,Int ())),("%v_t_108",(4,Int ()))], use = [("%v___temp_16",Bool ())], kill = []
Liveness at start of .L_exit: in = [("%v_return~2",(2,Int ()))], out = [("%v_return~2",(1,Int ()))], use = [], kill = []
Liveness at end of .L_exit: in = [("%v_return~2",(0,Int ()))], out = [], use = [("%v_return~2",Int ())], kill = []
Liveness at start of _IELSE110: in = [("%v_t_107",(3,Int ())),("%v_t_108",(3,Int ()))], out = [("%v_t_107",(2,Int ())),("%v_t_108",(2,Int ()))], use = [], kill = []
Liveness at end of _IELSE110: in = [("%v_t_107",(5,Int ())),("%v_t_108",(5,Int ())),("%v___temp_18",(0,Bool ()))], out = [("%v_t_107",(4,Int ())),("%v_t_108",(4,Int ()))], use = [("%v___temp_18",Bool ())], kill = []
Liveness at start of _IELSE113: in = [("%v_t_107",(3,Int ())),("%v_t_108",(3,Int ()))], out = [("%v_t_107",(2,Int ())),("%v_t_108",(2,Int ()))], use = [], kill = []
Liveness at end of _IELSE113: in = [("%v_return~2",(4,Int ()))], out = [("%v_return~2",(3,Int ()))], use = [], kill = []
Liveness at start of _IIF109: in = [("%v_t_107",(2,Int ()))], out = [("%v_t_107",(1,Int ()))], use = [], kill = []
Liveness at end of _IIF109: in = [("%v_return~2",(4,Int ()))], out = [("%v_return~2",(3,Int ()))], use = [], kill = []
Liveness at start of _IIF112: in = [], out = [], use = [], kill = []
Liveness at end of _IIF112: in = [("%v_return~2",(4,Int ()))], out = [("%v_return~2",(3,Int ()))], use = [], kill = []
Code: 
.method int ~cl_TopLevel.ifac2f (int %a_t_107, int %a_t_108): [
.L_entry:
  endphi;
  %v_t_107 := load int & param 0 %a_t_107;
  %v_t_108 := load int & param 1 %a_t_108;
  %v___temp_16 := int %v_t_107 == int %v_t_108;
  jump if boolean %v___temp_16 then _IIF109 else _IELSE110;
  _IELSE110:
  endphi;
  endphi;
  %v___temp_18 := int %v_t_107 > int %v_t_108;
  jump if boolean %v___temp_18 then _IIF112 else _IELSE113;
  _IELSE113:
  endphi;
  endphi;
  %v_t_118 := int %v_t_107 + int %v_t_108;
  %v_t_120 := int %v_t_118 / 2;
  %v_t_121 := call int ~cl_TopLevel.ifac2f (int %v_t_107, int %v_t_120);
  %v_t_123 := int %v_t_120 + 1;
  %v_t_124 := call int ~cl_TopLevel.ifac2f (int %v_t_123, int %v_t_108);
  %v_t_125 := int %v_t_121 * int %v_t_124;
  swap int %v_return~2 %v_t_125;
  jump .L_exit;
.L_exit:
  endphi;
  return int %v_return~2;
  _IIF112:
  endphi;
  %v_return~2 := 1;
  jump .L_exit;
  _IIF109:
  endphi;
  swap int %v_return~2 %v_t_107;
  jump .L_exit;
]


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> END STEP Final liveness analysis...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] COMPL_ DONE./play.lat

CompiledProg ./play.lat:2:1 (Meta ./play.lat:2:1 [ClDef inside standard library (SymIdent "Array") [SymIdent "Array",SymIdent "Object"] [FldDef inside standard library (Ref inside standard library (Cl inside standard library (SymIdent "Object"))) (SymIdent "elements"),FldDef inside standard library (Int inside standard library) (SymIdent "length"),FldDef inside standard library (Int inside standard library) (SymIdent "elementSize")] [MthdDef inside standard library (FType inside standard library (Int inside standard library) [Ref inside standard library (Cl inside standard library (SymIdent "Object"))]) (QIdent inside standard library (SymIdent "Object") (SymIdent "equals")),MthdDef inside standard library (FType inside standard library (Int inside standard library) []) (QIdent inside standard library (SymIdent "Object") (SymIdent "getHashCode")),MthdDef inside standard library (FType inside standard library (Ref inside standard library (Cl inside standard library (SymIdent "String"))) []) (QIdent inside standard library (SymIdent "Array") (SymIdent "toString"))],ClDef inside standard library (SymIdent "Object") [SymIdent "Object"] [] [MthdDef inside standard library (FType inside standard library (Int inside standard library) [Ref inside standard library (Cl inside standard library (SymIdent "Object"))]) (QIdent inside standard library (SymIdent "Object") (SymIdent "equals")),MthdDef inside standard library (FType inside standard library (Int inside standard library) []) (QIdent inside standard library (SymIdent "Object") (SymIdent "getHashCode")),MthdDef inside standard library (FType inside standard library (Ref inside standard library (Cl inside standard library (SymIdent "String"))) []) (QIdent inside standard library (SymIdent "Object") (SymIdent "toString"))],ClDef inside standard library (SymIdent "String") [SymIdent "String",SymIdent "Object"] [] [MthdDef inside standard library (FType inside standard library (Int inside standard library) [Int inside standard library]) (QIdent inside standard library (SymIdent "String") (SymIdent "charAt")),MthdDef inside standard library (FType inside standard library (Int inside standard library) [Ref inside standard library (Cl inside standard library (SymIdent "Object"))]) (QIdent inside standard library (SymIdent "String") (SymIdent "equals")),MthdDef inside standard library (FType inside standard library (Ref inside standard library (Cl inside standard library (SymIdent "String"))) [Ref inside standard library (Cl inside standard library (SymIdent "String"))]) (QIdent inside standard library (SymIdent "String") (SymIdent "concat")),MthdDef inside standard library (FType inside standard library (Int inside standard library) [Ref inside standard library (Cl inside standard library (SymIdent "String"))]) (QIdent inside standard library (SymIdent "String") (SymIdent "startsWith")),MthdDef inside standard library (FType inside standard library (Int inside standard library) [Ref inside standard library (Cl inside standard library (SymIdent "String"))]) (QIdent inside standard library (SymIdent "String") (SymIdent "endsWith")),MthdDef inside standard library (FType inside standard library (Ref inside standard library (Arr inside standard library (Int inside standard library))) []) (QIdent inside standard library (SymIdent "String") (SymIdent "getBytes")),MthdDef inside standard library (FType inside standard library (Int inside standard library) [Ref inside standard library (Cl inside standard library (SymIdent "String")),Int inside standard library]) (QIdent inside standard library (SymIdent "String") (SymIdent "indexOf")),MthdDef inside standard library (FType inside standard library (Int inside standard library) []) (QIdent inside standard library (SymIdent "String") (SymIdent "length")),MthdDef inside standard library (FType inside standard library (Ref inside standard library (Cl inside standard library (SymIdent "String"))) [Int inside standard library,Int inside standard library]) (QIdent inside standard library (SymIdent "String") (SymIdent "substring")),MthdDef inside standard library (FType inside standard library (Ref inside standard library (Cl inside standard library (SymIdent "String"))) []) (QIdent inside standard library (SymIdent "String") (SymIdent "toString")),MthdDef inside standard library (FType inside standard library (Int inside standard library) []) (QIdent inside standard library (SymIdent "String") (SymIdent "getHashCode"))],ClDef ./play.lat:2:1 (SymIdent "~cl_TopLevel") [] [] [MthdDef ./play.lat:2:1 (FType ./play.lat:2:1 (Ref ./play.lat:2:1 (Cl ./play.lat:2:1 (SymIdent "Array"))) []) (QIdent ./play.lat:2:1 (SymIdent "Array") (SymIdent "toString")),MthdDef ./play.lat:2:1 (FType ./play.lat:2:1 (Ref ./play.lat:2:1 (Cl ./play.lat:2:1 (SymIdent "Object"))) []) (QIdent ./play.lat:2:1 (SymIdent "Object") (SymIdent "toString")),MthdDef ./play.lat:2:1 (FType ./play.lat:2:1 (Int ./play.lat:2:1) []) (QIdent ./play.lat:2:1 (SymIdent "Object") (SymIdent "getHashCode")),MthdDef ./play.lat:2:1 (FType ./play.lat:2:1 (Int ./play.lat:2:1) [Ref ./play.lat:2:1 (Cl ./play.lat:2:1 (SymIdent "Object"))]) (QIdent ./play.lat:2:1 (SymIdent "Object") (SymIdent "equals")),MthdDef ./play.lat:2:1 (FType ./play.lat:2:1 (Int ./play.lat:2:1) [Ref ./play.lat:2:1 (Cl ./play.lat:2:1 (SymIdent "Object"))]) (QIdent ./play.lat:2:1 (SymIdent "String") (SymIdent "equals")),MthdDef ./play.lat:2:1 (FType ./play.lat:2:1 (Int ./play.lat:2:1) []) (QIdent ./play.lat:2:1 (SymIdent "String") (SymIdent "getHashCode")),MthdDef ./play.lat:2:1 (FType ./play.lat:2:1 (Ref ./play.lat:2:1 (Cl ./play.lat:2:1 (SymIdent "String"))) []) (QIdent ./play.lat:2:1 (SymIdent "String") (SymIdent "toString")),MthdDef ./play.lat:2:1 (FType ./play.lat:2:1 (Ref ./play.lat:2:1 (Cl ./play.lat:2:1 (SymIdent "String"))) []) (QIdent ./play.lat:2:1 (SymIdent "String") (SymIdent "substring")),MthdDef ./play.lat:2:1 (FType ./play.lat:2:1 (Int ./play.lat:2:1) []) (QIdent ./play.lat:2:1 (SymIdent "String") (SymIdent "length")),MthdDef ./play.lat:2:1 (FType ./play.lat:2:1 (Int ./play.lat:2:1) [Ref ./play.lat:2:1 (Cl ./play.lat:2:1 (SymIdent "String")),Int ./play.lat:2:1]) (QIdent ./play.lat:2:1 (SymIdent "String") (SymIdent "indexOf")),MthdDef ./play.lat:2:1 (FType ./play.lat:2:1 (Ref ./play.lat:2:1 (Cl ./play.lat:2:1 (SymIdent "String"))) []) (QIdent ./play.lat:2:1 (SymIdent "String") (SymIdent "getBytes")),MthdDef ./play.lat:2:1 (FType ./play.lat:2:1 (Int ./play.lat:2:1) [Ref ./play.lat:2:1 (Cl ./play.lat:2:1 (SymIdent "String"))]) (QIdent ./play.lat:2:1 (SymIdent "String") (SymIdent "endsWith")),MthdDef ./play.lat:2:1 (FType ./play.lat:2:1 (Int ./play.lat:2:1) [Ref ./play.lat:2:1 (Cl ./play.lat:2:1 (SymIdent "String"))]) (QIdent ./play.lat:2:1 (SymIdent "String") (SymIdent "startsWith")),MthdDef ./play.lat:2:1 (FType ./play.lat:2:1 (Ref ./play.lat:2:1 (Cl ./play.lat:2:1 (SymIdent "String"))) [Ref ./play.lat:2:1 (Cl ./play.lat:2:1 (SymIdent "String")),Ref ./play.lat:2:1 (Cl ./play.lat:2:1 (SymIdent "String"))]) (QIdent ./play.lat:2:1 (SymIdent "String") (SymIdent "concat")),MthdDef ./play.lat:2:1 (FType ./play.lat:2:1 (Int ./play.lat:2:1) [Int ./play.lat:2:1]) (QIdent ./play.lat:2:1 (SymIdent "String") (SymIdent "charAt")),MthdDef ./play.lat:2:1 (FType ./play.lat:2:1 (Int ./play.lat:2:1) [Ref ./play.lat:2:1 (Cl ./play.lat:2:1 (SymIdent "String"))]) (QIdent ./play.lat:2:1 (SymIdent "~cl_TopLevel") (SymIdent "printString")),MthdDef ./play.lat:2:1 (FType ./play.lat:2:1 (Int ./play.lat:2:1) [Int ./play.lat:2:1]) (QIdent ./play.lat:2:1 (SymIdent "~cl_TopLevel") (SymIdent "printInt")),MthdDef ./play.lat:2:1 (FType ./play.lat:2:1 (Int ./play.lat:2:1) [Int ./play.lat:2:1]) (QIdent ./play.lat:2:1 (SymIdent "~cl_TopLevel") (SymIdent "printByte")),MthdDef ./play.lat:2:1 (FType ./play.lat:2:1 (Int ./play.lat:2:1) [Int ./play.lat:2:1]) (QIdent ./play.lat:2:1 (SymIdent "~cl_TopLevel") (SymIdent "printBoolean")),MthdDef ./play.lat:2:1 (FType ./play.lat:2:1 (Int ./play.lat:2:1) [Ref ./play.lat:2:1 (Cl ./play.lat:2:1 (SymIdent "Array"))]) (QIdent ./play.lat:2:1 (SymIdent "~cl_TopLevel") (SymIdent "printBinArray")),MthdDef ./play.lat:2:1 (FType ./play.lat:2:1 (Ref ./play.lat:2:1 (Cl ./play.lat:2:1 (SymIdent "String"))) [Int ./play.lat:2:1]) (QIdent ./play.lat:2:1 (SymIdent "~cl_TopLevel") (SymIdent "byteToString")),MthdDef ./play.lat:2:1 (FType ./play.lat:2:1 (Ref ./play.lat:2:1 (Cl ./play.lat:2:1 (SymIdent "String"))) [Int ./play.lat:2:1]) (QIdent ./play.lat:2:1 (SymIdent "~cl_TopLevel") (SymIdent "boolToString")),MthdDef ./play.lat:2:1 (FType ./play.lat:2:1 (Ref ./play.lat:2:1 (Cl ./play.lat:2:1 (SymIdent "String"))) [Int ./play.lat:2:1]) (QIdent ./play.lat:2:1 (SymIdent "~cl_TopLevel") (SymIdent "intToString")),MthdDef ./play.lat:2:1 (FType ./play.lat:2:1 (Int ./play.lat:2:1) [Ref ./play.lat:2:1 (Cl ./play.lat:2:1 (SymIdent "Object"))]) (QIdent ./play.lat:2:1 (SymIdent "~cl_TopLevel") (SymIdent "print")),MthdDef ./play.lat:2:1 (FType ./play.lat:2:1 (Int ./play.lat:2:1) []) (QIdent ./play.lat:2:1 (SymIdent "~cl_TopLevel") (SymIdent "error")),MthdDef ./play.lat:2:1 (FType ./play.lat:2:1 (Int ./play.lat:2:1) []) (QIdent ./play.lat:2:1 (SymIdent "~cl_TopLevel") (SymIdent "readInt")),MthdDef ./play.lat:2:1 (FType ./play.lat:2:1 (Ref ./play.lat:2:1 (Cl ./play.lat:2:1 (SymIdent "String"))) []) (QIdent ./play.lat:2:1 (SymIdent "~cl_TopLevel") (SymIdent "readString")),MthdDef ./play.lat:2:1 (FType ./play.lat:2:1 (Ref ./play.lat:2:1 (Cl ./play.lat:2:1 (SymIdent "Object"))) [Ref ./play.lat:2:1 (Cl ./play.lat:2:1 (SymIdent "Object")),Ref ./play.lat:2:1 (Cl ./play.lat:2:1 (SymIdent "Object"))]) (QIdent ./play.lat:2:1 (SymIdent "~cl_TopLevel") (SymIdent "__cast")),MthdDef ./play.lat:2:1 (FType ./play.lat:2:1 (Ref ./play.lat:2:1 (Cl ./play.lat:2:1 (SymIdent "String"))) [Ref ./play.lat:2:15 (Cl ./play.lat:2:15 (SymIdent "String")),Int ./play.lat:2:25]) (QIdent ./play.lat:2:8 (SymIdent "~cl_TopLevel") (SymIdent "repStr")),MthdDef ./play.lat:12:1 (FType ./play.lat:12:1 (Int ./play.lat:12:1) []) (QIdent ./play.lat:12:5 (SymIdent "~cl_TopLevel") (SymIdent "main")),MthdDef ./play.lat:34:1 (FType ./play.lat:34:1 (Int ./play.lat:34:1) [Int ./play.lat:34:9]) (QIdent ./play.lat:34:5 (SymIdent "~cl_TopLevel") (SymIdent "fac")),MthdDef ./play.lat:47:1 (FType ./play.lat:47:1 (Int ./play.lat:47:1) [Int ./play.lat:47:10]) (QIdent ./play.lat:47:5 (SymIdent "~cl_TopLevel") (SymIdent "rfac")),MthdDef ./play.lat:54:1 (FType ./play.lat:54:1 (Int ./play.lat:54:1) [Int ./play.lat:54:10]) (QIdent ./play.lat:54:5 (SymIdent "~cl_TopLevel") (SymIdent "mfac")),MthdDef ./play.lat:61:1 (FType ./play.lat:61:1 (Int ./play.lat:61:1) [Int ./play.lat:61:10]) (QIdent ./play.lat:61:5 (SymIdent "~cl_TopLevel") (SymIdent "nfac")),MthdDef ./play.lat:68:1 (FType ./play.lat:68:1 (Int ./play.lat:68:1) [Int ./play.lat:68:10]) (QIdent ./play.lat:68:5 (SymIdent "~cl_TopLevel") (SymIdent "ifac")),MthdDef ./play.lat:70:1 (FType ./play.lat:70:1 (Int ./play.lat:70:1) [Int ./play.lat:70:12,Int ./play.lat:70:19]) (QIdent ./play.lat:70:5 (SymIdent "~cl_TopLevel") (SymIdent "ifac2f"))]]) [([".L_entry","_WBEG17","_WCOND16","_WEND18"]
".L_entry" -> fromList [LabIdent "_WCOND16"] <- fromList []
"_WBEG17" -> fromList [LabIdent "_WCOND16"] <- fromList [LabIdent "_WCOND16"]
"_WCOND16" -> fromList [LabIdent "_WBEG17",LabIdent "_WEND18"] <- fromList [LabIdent ".L_entry",LabIdent "_WBEG17"]
"_WEND18" -> fromList [] <- fromList [LabIdent "_WCOND16"]
,Mthd ./play.lat:2:1 (Ref ./play.lat:2:1 (Cl ./play.lat:2:1 (SymIdent "String"))) (QIdent ./play.lat:2:8 (SymIdent "~cl_TopLevel") (SymIdent "repStr")) [Param ./play.lat:2:1 (Ref ./play.lat:2:15 (Cl ./play.lat:2:15 (SymIdent "String"))) (ValIdent "%a_t_9"),Param ./play.lat:2:1 (Int ./play.lat:2:25) (ValIdent "%a_t_10")] [ILabel ./play.lat:2:1 (LabIdent ".L_entry"),IEndPhi ./play.lat:2:1,ILoad ./play.lat:2:1 (ValIdent "%v_t_9") (PParam ./play.lat:2:1 (Ref ./play.lat:2:1 (Ref ./play.lat:2:15 (Cl ./play.lat:2:15 (SymIdent "String")))) 0 (ValIdent "%a_t_9")),ILoad ./play.lat:2:1 (ValIdent "%v_t_10") (PParam ./play.lat:2:1 (Ref ./play.lat:2:1 (Int ./play.lat:2:25)) 1 (ValIdent "%a_t_10")),INewStr ./play.lat:3:14 (ValIdent "%v_t_12") "",ISwap ./play.lat:5:3 (Ref ./play.lat:5:3 (Cl ./play.lat:5:3 (SymIdent "String"))) (ValIdent "%v_t_13~2") (ValIdent "%v_t_12"),ISet ./play.lat:5:3 (ValIdent "%v_t_15~2") (VInt ./play.lat:5:3 0),IJmp ./play.lat:5:3 (LabIdent "_WCOND16"),ILabel ./play.lat:5:3 (LabIdent "_WCOND16"),IEndPhi ./play.lat:5:3,IOp ./play.lat:5:9 (ValIdent "%v___temp_0") (VVal ./play.lat:5:9 (Int ./play.lat:4:3) (ValIdent "%v_t_15~2")) (OpLTH ./play.lat:5:10) (VVal ./play.lat:5:9 (Int ./play.lat:5:9) (ValIdent "%v_t_10")),ICondJmp ./play.lat:5:9 (VVal ./play.lat:5:9 (Bool ./play.lat:5:9) (ValIdent "%v___temp_0")) (LabIdent "_WBEG17") (LabIdent "_WEND18"),ILabel ./play.lat:5:3 (LabIdent "_WBEG17"),IEndPhi ./play.lat:5:3,ICall ./play.lat:6:9 (ValIdent "%v_t_19") (CallVirt ./play.lat:6:9 (Ref inside standard library (Cl inside standard library (SymIdent "String"))) (QIdent ./play.lat:6:9 (SymIdent "String") (SymIdent "concat")) [VVal ./play.lat:6:9 (Ref ./play.lat:6:9 (Cl ./play.lat:6:9 (SymIdent "String"))) (ValIdent "%v_t_13~2"),VVal ./play.lat:6:9 (Ref ./play.lat:6:9 (Cl ./play.lat:6:9 (SymIdent "String"))) (ValIdent "%v_t_9")]),IOp ./play.lat:7:5 (ValIdent "%v_t_21") (VVal ./play.lat:7:5 (Int ./play.lat:7:5) (ValIdent "%v_t_15~2")) (OpAdd ./play.lat:7:5) (VInt ./play.lat:7:5 1),ISwap ./play.lat:5:3 (Int ./play.lat:5:3) (ValIdent "%v_t_15~2") (ValIdent "%v_t_21"),ISwap ./play.lat:5:3 (Ref ./play.lat:5:3 (Cl ./play.lat:5:3 (SymIdent "String"))) (ValIdent "%v_t_13~2") (ValIdent "%v_t_19"),IJmp ./play.lat:5:3 (LabIdent "_WCOND16"),ILabel ./play.lat:5:3 (LabIdent "_WEND18"),IEndPhi ./play.lat:5:3,IEndPhi ./play.lat:2:1,IRet ./play.lat:2:1 (VVal ./play.lat:2:1 (Ref ./play.lat:2:1 (Cl ./play.lat:2:1 (SymIdent "String"))) (ValIdent "%v_t_13~2"))],RegAlloc {regAlloc = fromList [(ValIdent "%a_t_10",RSI),(ValIdent "%a_t_9",RDI),(ValIdent "%v___temp_0",RCX),(ValIdent "%v_t_10",R14),(ValIdent "%v_t_12",R13),(ValIdent "%v_t_13~2",RAX),(ValIdent "%v_t_15~2",R12),(ValIdent "%v_t_19",RCX),(ValIdent "%v_t_21",RAX),(ValIdent "%v_t_9",RBX),(ValIdent "~arg_0_RDI",RDI),(ValIdent "~arg_1_RSI",RSI)], numLocals = 0}),([".L_entry","_WBEG41","_WCOND40","_WEND42"]
".L_entry" -> fromList [LabIdent "_WCOND40"] <- fromList []
"_WBEG41" -> fromList [LabIdent "_WCOND40"] <- fromList [LabIdent "_WCOND40"]
"_WCOND40" -> fromList [LabIdent "_WBEG41",LabIdent "_WEND42"] <- fromList [LabIdent ".L_entry",LabIdent "_WBEG41"]
"_WEND42" -> fromList [] <- fromList [LabIdent "_WCOND40"]
,Mthd ./play.lat:12:1 (Int ./play.lat:12:1) (QIdent ./play.lat:12:5 (SymIdent "~cl_TopLevel") (SymIdent "main")) [] [ILabel ./play.lat:12:1 (LabIdent ".L_entry"),IEndPhi ./play.lat:12:1,ICall ./play.lat:13:18 (ValIdent "%v_t_23") (Call ./play.lat:13:18 (Int ./play.lat:34:1) (QIdent ./play.lat:13:18 (SymIdent "~cl_TopLevel") (SymIdent "fac")) [VInt ./play.lat:13:18 10] []),IVCall ./play.lat:13:9 (Call ./play.lat:13:9 (Int inside standard library) (QIdent ./play.lat:13:9 (SymIdent "~cl_TopLevel") (SymIdent "printInt")) [VVal ./play.lat:13:9 (Int inside standard library) (ValIdent "%v_t_23")] []),ICall ./play.lat:14:18 (ValIdent "%v_t_26") (Call ./play.lat:14:18 (Int ./play.lat:47:1) (QIdent ./play.lat:14:18 (SymIdent "~cl_TopLevel") (SymIdent "rfac")) [VInt ./play.lat:14:18 10] []),IVCall ./play.lat:14:9 (Call ./play.lat:14:9 (Int inside standard library) (QIdent ./play.lat:14:9 (SymIdent "~cl_TopLevel") (SymIdent "printInt")) [VVal ./play.lat:14:9 (Int inside standard library) (ValIdent "%v_t_26")] []),ICall ./play.lat:15:18 (ValIdent "%v_t_29") (Call ./play.lat:15:18 (Int ./play.lat:54:1) (QIdent ./play.lat:15:18 (SymIdent "~cl_TopLevel") (SymIdent "mfac")) [VInt ./play.lat:15:18 10] []),IVCall ./play.lat:15:9 (Call ./play.lat:15:9 (Int inside standard library) (QIdent ./play.lat:15:9 (SymIdent "~cl_TopLevel") (SymIdent "printInt")) [VVal ./play.lat:15:9 (Int inside standard library) (ValIdent "%v_t_29")] []),ICall ./play.lat:16:18 (ValIdent "%v_t_32") (Call ./play.lat:16:18 (Int ./play.lat:68:1) (QIdent ./play.lat:16:18 (SymIdent "~cl_TopLevel") (SymIdent "ifac")) [VInt ./play.lat:16:18 10] []),IVCall ./play.lat:16:9 (Call ./play.lat:16:9 (Int inside standard library) (QIdent ./play.lat:16:9 (SymIdent "~cl_TopLevel") (SymIdent "printInt")) [VVal ./play.lat:16:9 (Int inside standard library) (ValIdent "%v_t_32")] []),ISet ./play.lat:21:11 (ValIdent "%v_t_39~2") (VInt ./play.lat:21:11 1),ISet ./play.lat:21:11 (ValIdent "%v_t_37~2") (VInt ./play.lat:21:11 10),IJmp ./play.lat:21:11 (LabIdent "_WCOND40"),ILabel ./play.lat:21:11 (LabIdent "_WCOND40"),IEndPhi ./play.lat:21:11,IOp ./play.lat:21:18 (ValIdent "%v___temp_2") (VVal ./play.lat:21:18 (Int ./play.lat:19:11) (ValIdent "%v_t_37~2")) (OpGTH ./play.lat:21:19) (VInt ./play.lat:21:18 0),ICondJmp ./play.lat:21:18 (VVal ./play.lat:21:18 (Bool ./play.lat:21:18) (ValIdent "%v___temp_2")) (LabIdent "_WBEG41") (LabIdent "_WEND42"),ILabel ./play.lat:21:11 (LabIdent "_WBEG41"),IEndPhi ./play.lat:21:11,IOp ./play.lat:22:19 (ValIdent "%v_t_43") (VVal ./play.lat:22:19 (Int ./play.lat:22:19) (ValIdent "%v_t_39~2")) (OpMul ./play.lat:22:19) (VVal ./play.lat:22:19 (Int ./play.lat:22:19) (ValIdent "%v_t_37~2")),IOp ./play.lat:23:13 (ValIdent "%v_t_45") (VVal ./play.lat:23:13 (Int ./play.lat:23:13) (ValIdent "%v_t_37~2")) (OpSub ./play.lat:23:13) (VInt ./play.lat:23:13 1),ISwap ./play.lat:21:11 (Int ./play.lat:21:11) (ValIdent "%v_t_37~2") (ValIdent "%v_t_45"),ISwap ./play.lat:21:11 (Int ./play.lat:21:11) (ValIdent "%v_t_39~2") (ValIdent "%v_t_43"),IJmp ./play.lat:21:11 (LabIdent "_WCOND40"),ILabel ./play.lat:21:11 (LabIdent "_WEND42"),IEndPhi ./play.lat:21:11,IVCall ./play.lat:25:11 (Call ./play.lat:25:11 (Int inside standard library) (QIdent ./play.lat:25:11 (SymIdent "~cl_TopLevel") (SymIdent "printInt")) [VVal ./play.lat:25:11 (Int ./play.lat:25:11) (ValIdent "%v_t_39~2")] []),INewStr ./play.lat:27:22 (ValIdent "%v_t_49") "=",ICall ./play.lat:27:15 (ValIdent "%v_t_51") (Call ./play.lat:27:15 (Ref ./play.lat:2:1 (Cl ./play.lat:2:1 (SymIdent "String"))) (QIdent ./play.lat:27:15 (SymIdent "~cl_TopLevel") (SymIdent "repStr")) [VVal ./play.lat:27:15 (Ref ./play.lat:2:15 (Cl ./play.lat:2:15 (SymIdent "String"))) (ValIdent "%v_t_49"),VInt ./play.lat:27:15 60] []),IVCall ./play.lat:28:9 (Call ./play.lat:28:9 (Int inside standard library) (QIdent ./play.lat:28:9 (SymIdent "~cl_TopLevel") (SymIdent "printString")) [VVal ./play.lat:28:9 (Ref ./play.lat:28:9 (Cl ./play.lat:28:9 (SymIdent "String"))) (ValIdent "%v_t_51")] []),INewStr ./play.lat:29:22 (ValIdent "%v_t_55") "hello */",IVCall ./play.lat:29:9 (Call ./play.lat:29:9 (Int inside standard library) (QIdent ./play.lat:29:9 (SymIdent "~cl_TopLevel") (SymIdent "printString")) [VVal ./play.lat:29:9 (Ref inside standard library (Cl inside standard library (SymIdent "String"))) (ValIdent "%v_t_55")] []),INewStr ./play.lat:30:22 (ValIdent "%v_t_58") "/* world",IVCall ./play.lat:30:9 (Call ./play.lat:30:9 (Int inside standard library) (QIdent ./play.lat:30:9 (SymIdent "~cl_TopLevel") (SymIdent "printString")) [VVal ./play.lat:30:9 (Ref inside standard library (Cl inside standard library (SymIdent "String"))) (ValIdent "%v_t_58")] []),IEndPhi ./play.lat:12:1,IRet ./play.lat:12:1 (VInt ./play.lat:12:1 0)],RegAlloc {regAlloc = fromList [(ValIdent "%v___temp_2",RDX),(ValIdent "%v_t_23",RAX),(ValIdent "%v_t_26",RAX),(ValIdent "%v_t_29",RAX),(ValIdent "%v_t_32",RAX),(ValIdent "%v_t_37~2",RCX),(ValIdent "%v_t_39~2",RAX),(ValIdent "%v_t_43",R12),(ValIdent "%v_t_45",RBX),(ValIdent "%v_t_49",RAX),(ValIdent "%v_t_51",RAX),(ValIdent "%v_t_55",RAX),(ValIdent "%v_t_58",RAX),(ValIdent "~arg_0_RDI",RDI),(ValIdent "~arg_10_RSI",RSI),(ValIdent "~arg_11_RDI",RDI),(ValIdent "~arg_12_RDI",RDI),(ValIdent "~arg_13_RDI",RDI),(ValIdent "~arg_1_RDI",RDI),(ValIdent "~arg_2_RDI",RDI),(ValIdent "~arg_3_RDI",RDI),(ValIdent "~arg_4_RDI",RDI),(ValIdent "~arg_5_RDI",RDI),(ValIdent "~arg_6_RDI",RDI),(ValIdent "~arg_7_RDI",RDI),(ValIdent "~arg_8_RDI",RDI),(ValIdent "~arg_9_RDI",RDI)], numLocals = 0}),([".L_entry","_WBEG68","_WCOND67","_WEND69"]
".L_entry" -> fromList [LabIdent "_WCOND67"] <- fromList []
"_WBEG68" -> fromList [LabIdent "_WCOND67"] <- fromList [LabIdent "_WCOND67"]
"_WCOND67" -> fromList [LabIdent "_WBEG68",LabIdent "_WEND69"] <- fromList [LabIdent ".L_entry",LabIdent "_WBEG68"]
"_WEND69" -> fromList [] <- fromList [LabIdent "_WCOND67"]
,Mthd ./play.lat:34:1 (Int ./play.lat:34:1) (QIdent ./play.lat:34:5 (SymIdent "~cl_TopLevel") (SymIdent "fac")) [Param ./play.lat:34:1 (Int ./play.lat:34:9) (ValIdent "%a_t_61")] [ILabel ./play.lat:34:1 (LabIdent ".L_entry"),IEndPhi ./play.lat:34:1,ILoad ./play.lat:34:1 (ValIdent "%v_t_61") (PParam ./play.lat:34:1 (Ref ./play.lat:34:1 (Int ./play.lat:34:9)) 0 (ValIdent "%a_t_61")),ISwap ./play.lat:40:9 (Int ./play.lat:40:9) (ValIdent "%v_t_65~3") (ValIdent "%v_t_61"),ISet ./play.lat:40:9 (ValIdent "%v_t_63~3") (VInt ./play.lat:40:9 1),IJmp ./play.lat:40:9 (LabIdent "_WCOND67"),ILabel ./play.lat:40:9 (LabIdent "_WCOND67"),IEndPhi ./play.lat:40:9,IOp ./play.lat:40:16 (ValIdent "%v___temp_4") (VVal ./play.lat:40:16 (Int ./play.lat:36:9) (ValIdent "%v_t_65~3")) (OpGTH ./play.lat:40:18) (VInt ./play.lat:40:16 0),ICondJmp ./play.lat:40:16 (VVal ./play.lat:40:16 (Bool ./play.lat:40:16) (ValIdent "%v___temp_4")) (LabIdent "_WBEG68") (LabIdent "_WEND69"),ILabel ./play.lat:40:9 (LabIdent "_WBEG68"),IEndPhi ./play.lat:40:9,IOp ./play.lat:41:17 (ValIdent "%v_t_70") (VVal ./play.lat:41:17 (Int ./play.lat:41:17) (ValIdent "%v_t_63~3")) (OpMul ./play.lat:41:17) (VVal ./play.lat:41:17 (Int ./play.lat:41:17) (ValIdent "%v_t_65~3")),IOp ./play.lat:42:17 (ValIdent "%v_t_72") (VVal ./play.lat:42:17 (Int ./play.lat:42:17) (ValIdent "%v_t_65~3")) (OpAdd ./play.lat:42:17) (VInt ./play.lat:42:17 (-1)),ISwap ./play.lat:40:9 (Int ./play.lat:40:9) (ValIdent "%v_t_63~3") (ValIdent "%v_t_70"),ISwap ./play.lat:40:9 (Int ./play.lat:40:9) (ValIdent "%v_t_65~3") (ValIdent "%v_t_72"),IJmp ./play.lat:40:9 (LabIdent "_WCOND67"),ILabel ./play.lat:40:9 (LabIdent "_WEND69"),IEndPhi ./play.lat:40:9,IEndPhi ./play.lat:34:1,IRet ./play.lat:34:1 (VVal ./play.lat:34:1 (Int ./play.lat:34:1) (ValIdent "%v_t_63~3"))],RegAlloc {regAlloc = fromList [(ValIdent "%a_t_61",RDI),(ValIdent "%v___temp_4",RDI),(ValIdent "%v_t_61",RDX),(ValIdent "%v_t_63~3",RCX),(ValIdent "%v_t_65~3",RAX),(ValIdent "%v_t_70",RCX),(ValIdent "%v_t_72",RAX)], numLocals = 0}),([".L_entry",".L_exit","_IELSE76","_IIF75"]
".L_entry" -> fromList [LabIdent "_IELSE76",LabIdent "_IIF75"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_IELSE76",LabIdent "_IIF75"]
"_IELSE76" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
"_IIF75" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
,Mthd ./play.lat:47:1 (Int ./play.lat:47:1) (QIdent ./play.lat:47:5 (SymIdent "~cl_TopLevel") (SymIdent "rfac")) [Param ./play.lat:47:1 (Int ./play.lat:47:10) (ValIdent "%a_t_74")] [ILabel ./play.lat:47:1 (LabIdent ".L_entry"),IEndPhi ./play.lat:47:1,ILoad ./play.lat:47:1 (ValIdent "%v_t_74") (PParam ./play.lat:47:1 (Ref ./play.lat:47:1 (Int ./play.lat:47:10)) 0 (ValIdent "%a_t_74")),IOp ./play.lat:48:13 (ValIdent "%v___temp_6") (VVal ./play.lat:48:13 (Int ./play.lat:47:10) (ValIdent "%v_t_74")) (OpEQU ./play.lat:48:15) (VInt ./play.lat:48:13 0),ICondJmp ./play.lat:48:13 (VVal ./play.lat:48:13 (Bool ./play.lat:48:13) (ValIdent "%v___temp_6")) (LabIdent "_IIF75") (LabIdent "_IELSE76"),ILabel ./play.lat:48:9 (LabIdent "_IELSE76"),IEndPhi ./play.lat:48:9,IOp ./play.lat:51:28 (ValIdent "%v_t_81") (VVal ./play.lat:51:28 (Int ./play.lat:51:28) (ValIdent "%v_t_74")) (OpAdd ./play.lat:51:28) (VInt ./play.lat:51:28 (-1)),ICall ./play.lat:51:22 (ValIdent "%v_t_82") (Call ./play.lat:51:22 (Int ./play.lat:47:1) (QIdent ./play.lat:51:22 (SymIdent "~cl_TopLevel") (SymIdent "rfac")) [VVal ./play.lat:51:22 (Int ./play.lat:47:10) (ValIdent "%v_t_81")] []),IOp ./play.lat:51:20 (ValIdent "%v_t_83") (VVal ./play.lat:51:20 (Int ./play.lat:51:20) (ValIdent "%v_t_74")) (OpMul ./play.lat:51:20) (VVal ./play.lat:51:20 (Int ./play.lat:47:10) (ValIdent "%v_t_82")),ISwap ./play.lat:47:1 (Int ./play.lat:47:1) (ValIdent "%v_return~2") (ValIdent "%v_t_83"),IJmp ./play.lat:47:1 (LabIdent ".L_exit"),ILabel ./play.lat:47:1 (LabIdent ".L_exit"),IEndPhi ./play.lat:47:1,IRet ./play.lat:47:1 (VVal ./play.lat:47:1 (Int ./play.lat:47:1) (ValIdent "%v_return~2")),ILabel ./play.lat:48:9 (LabIdent "_IIF75"),IEndPhi ./play.lat:48:9,ISet ./play.lat:47:1 (ValIdent "%v_return~2") (VInt ./play.lat:47:1 1),IJmp ./play.lat:47:1 (LabIdent ".L_exit")],RegAlloc {regAlloc = fromList [(ValIdent "%a_t_74",RDI),(ValIdent "%v___temp_6",RCX),(ValIdent "%v_return~2",RAX),(ValIdent "%v_t_74",RBX),(ValIdent "%v_t_81",RAX),(ValIdent "%v_t_82",RAX),(ValIdent "%v_t_83",RAX),(ValIdent "~arg_0_RDI",RDI)], numLocals = 0}),([".L_entry",".L_exit","_IELSE86","_IIF85"]
".L_entry" -> fromList [LabIdent "_IELSE86",LabIdent "_IIF85"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_IELSE86",LabIdent "_IIF85"]
"_IELSE86" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
"_IIF85" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
,Mthd ./play.lat:54:1 (Int ./play.lat:54:1) (QIdent ./play.lat:54:5 (SymIdent "~cl_TopLevel") (SymIdent "mfac")) [Param ./play.lat:54:1 (Int ./play.lat:54:10) (ValIdent "%a_t_84")] [ILabel ./play.lat:54:1 (LabIdent ".L_entry"),IEndPhi ./play.lat:54:1,ILoad ./play.lat:54:1 (ValIdent "%v_t_84") (PParam ./play.lat:54:1 (Ref ./play.lat:54:1 (Int ./play.lat:54:10)) 0 (ValIdent "%a_t_84")),IOp ./play.lat:55:13 (ValIdent "%v___temp_9") (VVal ./play.lat:55:13 (Int ./play.lat:54:10) (ValIdent "%v_t_84")) (OpEQU ./play.lat:55:15) (VInt ./play.lat:55:13 0),ICondJmp ./play.lat:55:13 (VVal ./play.lat:55:13 (Bool ./play.lat:55:13) (ValIdent "%v___temp_9")) (LabIdent "_IIF85") (LabIdent "_IELSE86"),ILabel ./play.lat:55:9 (LabIdent "_IELSE86"),IEndPhi ./play.lat:55:9,IOp ./play.lat:58:28 (ValIdent "%v_t_91") (VVal ./play.lat:58:28 (Int ./play.lat:58:28) (ValIdent "%v_t_84")) (OpAdd ./play.lat:58:28) (VInt ./play.lat:58:28 (-1)),ICall ./play.lat:58:22 (ValIdent "%v_t_92") (Call ./play.lat:58:22 (Int ./play.lat:61:1) (QIdent ./play.lat:58:22 (SymIdent "~cl_TopLevel") (SymIdent "nfac")) [VVal ./play.lat:58:22 (Int ./play.lat:61:10) (ValIdent "%v_t_91")] []),IOp ./play.lat:58:20 (ValIdent "%v_t_93") (VVal ./play.lat:58:20 (Int ./play.lat:58:20) (ValIdent "%v_t_84")) (OpMul ./play.lat:58:20) (VVal ./play.lat:58:20 (Int ./play.lat:54:10) (ValIdent "%v_t_92")),ISwap ./play.lat:54:1 (Int ./play.lat:54:1) (ValIdent "%v_return~2") (ValIdent "%v_t_93"),IJmp ./play.lat:54:1 (LabIdent ".L_exit"),ILabel ./play.lat:54:1 (LabIdent ".L_exit"),IEndPhi ./play.lat:54:1,IRet ./play.lat:54:1 (VVal ./play.lat:54:1 (Int ./play.lat:54:1) (ValIdent "%v_return~2")),ILabel ./play.lat:55:9 (LabIdent "_IIF85"),IEndPhi ./play.lat:55:9,ISet ./play.lat:54:1 (ValIdent "%v_return~2") (VInt ./play.lat:54:1 1),IJmp ./play.lat:54:1 (LabIdent ".L_exit")],RegAlloc {regAlloc = fromList [(ValIdent "%a_t_84",RDI),(ValIdent "%v___temp_9",RCX),(ValIdent "%v_return~2",RAX),(ValIdent "%v_t_84",RBX),(ValIdent "%v_t_91",RAX),(ValIdent "%v_t_92",RAX),(ValIdent "%v_t_93",RAX),(ValIdent "~arg_0_RDI",RDI)], numLocals = 0}),([".L_entry",".L_exit","_IELSE96","_IIF95"]
".L_entry" -> fromList [LabIdent "_IELSE96",LabIdent "_IIF95"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_IELSE96",LabIdent "_IIF95"]
"_IELSE96" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
"_IIF95" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
,Mthd ./play.lat:61:1 (Int ./play.lat:61:1) (QIdent ./play.lat:61:5 (SymIdent "~cl_TopLevel") (SymIdent "nfac")) [Param ./play.lat:61:1 (Int ./play.lat:61:10) (ValIdent "%a_t_94")] [ILabel ./play.lat:61:1 (LabIdent ".L_entry"),IEndPhi ./play.lat:61:1,ILoad ./play.lat:61:1 (ValIdent "%v_t_94") (PParam ./play.lat:61:1 (Ref ./play.lat:61:1 (Int ./play.lat:61:10)) 0 (ValIdent "%a_t_94")),IOp ./play.lat:62:13 (ValIdent "%v___temp_12") (VVal ./play.lat:62:13 (Int ./play.lat:61:10) (ValIdent "%v_t_94")) (OpNE ./play.lat:62:15) (VInt ./play.lat:62:13 0),ICondJmp ./play.lat:62:13 (VVal ./play.lat:62:13 (Bool ./play.lat:62:13) (ValIdent "%v___temp_12")) (LabIdent "_IIF95") (LabIdent "_IELSE96"),ILabel ./play.lat:62:9 (LabIdent "_IELSE96"),IEndPhi ./play.lat:62:9,ISet ./play.lat:61:1 (ValIdent "%v_return~2") (VInt ./play.lat:61:1 1),IJmp ./play.lat:61:1 (LabIdent ".L_exit"),ILabel ./play.lat:61:1 (LabIdent ".L_exit"),IEndPhi ./play.lat:61:1,IRet ./play.lat:61:1 (VVal ./play.lat:61:1 (Int ./play.lat:61:1) (ValIdent "%v_return~2")),ILabel ./play.lat:62:9 (LabIdent "_IIF95"),IEndPhi ./play.lat:62:9,IOp ./play.lat:63:24 (ValIdent "%v_t_100") (VVal ./play.lat:63:24 (Int ./play.lat:63:24) (ValIdent "%v_t_94")) (OpAdd ./play.lat:63:24) (VInt ./play.lat:63:24 (-1)),ICall ./play.lat:63:18 (ValIdent "%v_t_101") (Call ./play.lat:63:18 (Int ./play.lat:54:1) (QIdent ./play.lat:63:18 (SymIdent "~cl_TopLevel") (SymIdent "mfac")) [VVal ./play.lat:63:18 (Int ./play.lat:54:10) (ValIdent "%v_t_100")] []),IOp ./play.lat:63:28 (ValIdent "%v_t_102") (VVal ./play.lat:63:28 (Int ./play.lat:63:28) (ValIdent "%v_t_94")) (OpMul ./play.lat:63:28) (VVal ./play.lat:63:28 (Int ./play.lat:61:10) (ValIdent "%v_t_101")),ISwap ./play.lat:61:1 (Int ./play.lat:61:1) (ValIdent "%v_return~2") (ValIdent "%v_t_102"),IJmp ./play.lat:61:1 (LabIdent ".L_exit")],RegAlloc {regAlloc = fromList [(ValIdent "%a_t_94",RDI),(ValIdent "%v___temp_12",RCX),(ValIdent "%v_return~2",RAX),(ValIdent "%v_t_100",RAX),(ValIdent "%v_t_101",RAX),(ValIdent "%v_t_102",RAX),(ValIdent "%v_t_94",RBX),(ValIdent "~arg_0_RDI",RDI)], numLocals = 0}),([".L_entry"]
".L_entry" -> fromList [] <- fromList []
,Mthd ./play.lat:68:1 (Int ./play.lat:68:1) (QIdent ./play.lat:68:5 (SymIdent "~cl_TopLevel") (SymIdent "ifac")) [Param ./play.lat:68:1 (Int ./play.lat:68:10) (ValIdent "%a_t_104")] [ILabel ./play.lat:68:1 (LabIdent ".L_entry"),IEndPhi ./play.lat:68:1,ILoad ./play.lat:68:1 (ValIdent "%v_t_104") (PParam ./play.lat:68:1 (Ref ./play.lat:68:1 (Int ./play.lat:68:10)) 0 (ValIdent "%a_t_104")),ICall ./play.lat:68:26 (ValIdent "%v_t_106") (Call ./play.lat:68:26 (Int ./play.lat:70:1) (QIdent ./play.lat:68:26 (SymIdent "~cl_TopLevel") (SymIdent "ifac2f")) [VInt ./play.lat:68:26 1,VVal ./play.lat:68:26 (Int ./play.lat:70:19) (ValIdent "%v_t_104")] []),IEndPhi ./play.lat:68:1,IRet ./play.lat:68:1 (VVal ./play.lat:68:1 (Int ./play.lat:68:1) (ValIdent "%v_t_106"))],RegAlloc {regAlloc = fromList [(ValIdent "%a_t_104",RDI),(ValIdent "%v_t_104",RAX),(ValIdent "%v_t_106",RAX),(ValIdent "~arg_0_RDI",RDI),(ValIdent "~arg_1_RSI",RSI)], numLocals = 0}),([".L_entry",".L_exit","_IELSE110","_IELSE113","_IIF109","_IIF112"]
".L_entry" -> fromList [LabIdent "_IELSE110",LabIdent "_IIF109"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent "_IELSE113",LabIdent "_IIF109",LabIdent "_IIF112"]
"_IELSE110" -> fromList [LabIdent "_IELSE113",LabIdent "_IIF112"] <- fromList [LabIdent ".L_entry"]
"_IELSE113" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_IELSE110"]
"_IIF109" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent ".L_entry"]
"_IIF112" -> fromList [LabIdent ".L_exit"] <- fromList [LabIdent "_IELSE110"]
,Mthd ./play.lat:70:1 (Int ./play.lat:70:1) (QIdent ./play.lat:70:5 (SymIdent "~cl_TopLevel") (SymIdent "ifac2f")) [Param ./play.lat:70:1 (Int ./play.lat:70:12) (ValIdent "%a_t_107"),Param ./play.lat:70:1 (Int ./play.lat:70:19) (ValIdent "%a_t_108")] [ILabel ./play.lat:70:1 (LabIdent ".L_entry"),IEndPhi ./play.lat:70:1,ILoad ./play.lat:70:1 (ValIdent "%v_t_107") (PParam ./play.lat:70:1 (Ref ./play.lat:70:1 (Int ./play.lat:70:12)) 0 (ValIdent "%a_t_107")),ILoad ./play.lat:70:1 (ValIdent "%v_t_108") (PParam ./play.lat:70:1 (Ref ./play.lat:70:1 (Int ./play.lat:70:19)) 1 (ValIdent "%a_t_108")),IOp ./play.lat:71:13 (ValIdent "%v___temp_16") (VVal ./play.lat:71:13 (Int ./play.lat:70:12) (ValIdent "%v_t_107")) (OpEQU ./play.lat:71:15) (VVal ./play.lat:71:13 (Int ./play.lat:70:19) (ValIdent "%v_t_108")),ICondJmp ./play.lat:71:13 (VVal ./play.lat:71:13 (Bool ./play.lat:71:13) (ValIdent "%v___temp_16")) (LabIdent "_IIF109") (LabIdent "_IELSE110"),ILabel ./play.lat:71:9 (LabIdent "_IELSE110"),IEndPhi ./play.lat:71:9,IEndPhi ./play.lat:71:9,IOp ./play.lat:73:13 (ValIdent "%v___temp_18") (VVal ./play.lat:73:13 (Int ./play.lat:73:13) (ValIdent "%v_t_107")) (OpGTH ./play.lat:73:15) (VVal ./play.lat:73:13 (Int ./play.lat:73:13) (ValIdent "%v_t_108")),ICondJmp ./play.lat:73:13 (VVal ./play.lat:73:13 (Bool ./play.lat:73:13) (ValIdent "%v___temp_18")) (LabIdent "_IIF112") (LabIdent "_IELSE113"),ILabel ./play.lat:73:9 (LabIdent "_IELSE113"),IEndPhi ./play.lat:73:9,IEndPhi ./play.lat:73:9,IOp ./play.lat:76:16 (ValIdent "%v_t_118") (VVal ./play.lat:76:16 (Int ./play.lat:76:16) (ValIdent "%v_t_107")) (OpAdd ./play.lat:76:16) (VVal ./play.lat:76:16 (Int ./play.lat:76:16) (ValIdent "%v_t_108")),IOp ./play.lat:76:21 (ValIdent "%v_t_120") (VVal ./play.lat:76:21 (Int ./play.lat:70:12) (ValIdent "%v_t_118")) (OpDiv ./play.lat:76:21) (VInt ./play.lat:76:21 2),ICall ./play.lat:77:16 (ValIdent "%v_t_121") (Call ./play.lat:77:16 (Int ./play.lat:70:1) (QIdent ./play.lat:77:16 (SymIdent "~cl_TopLevel") (SymIdent "ifac2f")) [VVal ./play.lat:77:16 (Int ./play.lat:77:16) (ValIdent "%v_t_107"),VVal ./play.lat:77:16 (Int ./play.lat:77:16) (ValIdent "%v_t_120")] []),IOp ./play.lat:77:38 (ValIdent "%v_t_123") (VVal ./play.lat:77:38 (Int ./play.lat:77:38) (ValIdent "%v_t_120")) (OpAdd ./play.lat:77:38) (VInt ./play.lat:77:38 1),ICall ./play.lat:77:30 (ValIdent "%v_t_124") (Call ./play.lat:77:30 (Int ./play.lat:70:1) (QIdent ./play.lat:77:30 (SymIdent "~cl_TopLevel") (SymIdent "ifac2f")) [VVal ./play.lat:77:30 (Int ./play.lat:70:12) (ValIdent "%v_t_123"),VVal ./play.lat:77:30 (Int ./play.lat:77:30) (ValIdent "%v_t_108")] []),IOp ./play.lat:77:28 (ValIdent "%v_t_125") (VVal ./play.lat:77:28 (Int ./play.lat:70:1) (ValIdent "%v_t_121")) (OpMul ./play.lat:77:28) (VVal ./play.lat:77:28 (Int ./play.lat:70:1) (ValIdent "%v_t_124")),ISwap ./play.lat:70:1 (Int ./play.lat:70:1) (ValIdent "%v_return~2") (ValIdent "%v_t_125"),IJmp ./play.lat:70:1 (LabIdent ".L_exit"),ILabel ./play.lat:70:1 (LabIdent ".L_exit"),IEndPhi ./play.lat:70:1,IRet ./play.lat:70:1 (VVal ./play.lat:70:1 (Int ./play.lat:70:1) (ValIdent "%v_return~2")),ILabel ./play.lat:73:9 (LabIdent "_IIF112"),IEndPhi ./play.lat:73:9,ISet /usr/bin/ld: /tmp/cchSx9ad.o: warning: relocation against `_String_getBytes' in read-only section `.rodata'
/usr/bin/ld: warning: creating DT_TEXTREL in a PIE
./play.lat:70:1 (ValIdent "%v_return~2") (VInt ./play.lat:70:1 1),IJmp ./play.lat:70:1 (LabIdent ".L_exit"),ILabel ./play.lat:71:9 (LabIdent "_IIF109"),IEndPhi ./play.lat:71:9,ISwap ./play.lat:70:1 (Int ./play.lat:70:1) (ValIdent "%v_return~2") (ValIdent "%v_t_107"),IJmp ./play.lat:70:1 (LabIdent ".L_exit")],RegAlloc {regAlloc = fromList [(ValIdent "%a_t_107",RDI),(ValIdent "%a_t_108",RSI),(ValIdent "%v___temp_16",RCX),(ValIdent "%v___temp_18",RCX),(ValIdent "%v_return~2",RAX),(ValIdent "%v_t_107",R13),(ValIdent "%v_t_108",R12),(ValIdent "%v_t_118",RAX),(ValIdent "%v_t_120",R14),(ValIdent "%v_t_121",RBX),(ValIdent "%v_t_123",RAX),(ValIdent "%v_t_124",RAX),(ValIdent "%v_t_125",RAX),(ValIdent "~arg_0_RDI",RDI),(ValIdent "~arg_1_RSI",RSI),(ValIdent "~arg_2_RDI",RDI),(ValIdent "~arg_3_RSI",RSI)], numLocals = 0})]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Running correct compiler backend: X64
[94m[Info]    [0m[Reporting.Logs.logInfo#75] emitMethod Fix method stack offsets 40
[94m[Info]    [0m[Reporting.Logs.logInfo#75] emitMethod Fix method stack offsets 8
[94m[Info]    [0m[Reporting.Logs.logInfo#75] emitMethod Fix method stack offsets 24
[94m[Info]    [0m[Reporting.Logs.logInfo#75] emitMethod Fix method stack offsets 24
[94m[Info]    [0m[Reporting.Logs.logInfo#75] emitMethod Fix method stack offsets 24
[94m[Info]    [0m[Reporting.Logs.logInfo#75] emitMethod Fix method stack offsets 8
[94m[Info]    [0m[Reporting.Logs.logInfo#75] emitMethod Fix method stack offsets 24
[94m[Info]    [0m[Reporting.Logs.logInfo#75] emitMethod Fix method stack offsets 40
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Created file: ./play.s
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Calling backend compile step: X64
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Run GCC for X64 backend to generate './play' executable from object file './play.o'
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Executing command 'gcc -fPIE -Lsrc/Runtime/dependencies/_built_/lib lib/runtime -l:libunistring.a ./play.s -o ./play -z noexecstack'
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Command executed successfully.
[94m[Info]    [0m[Reporting.Logs.logInfo#75] X64 compilation of './play.s' seems to be successfull
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Backend code generation completed successfully ./play.lat -> ./play
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DONE
