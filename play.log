[94m[Info]    [0m[Reporting.Logs.logInfo#75] Parsing: ./play.lat
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Parsed: ./play.lat
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Transformed: ./play.lat
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Construct inheritance graph
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> int main()
{
	int a = 1;
	return foo(a);
}

int foo(int a)
{
	return 0;
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> int main()
{
	int a = 1;
	return foo(a);
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> int a = 1;
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- int a = (int)(1);
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> return foo(a);
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- return foo(a);
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- int main()
{
	int a = (int)(1);
	return foo(a);
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> int foo(int a)
{
	return 0;
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] before -> return 0;
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- return (int)(0);
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- int foo(int a)
{
	return (int)(0);
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] after  <- int main()
{
	int a = (int)(1);
	return foo(a);
}

int foo(int a)
{
	return (int)(0);
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Typecheck done./play.lat

int main()
{
	int a = (int)(1);
	return foo(a);
}

int foo(int a)
{
	return (int)(0);
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] ConstPropagation.run before:int main()
{
	int a = (int)(1);
	return foo(a);
}

int foo(int a)
{
	return (int)(0);
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] ConstPropagation.run after:int main()
{
	int _var_3000021#a = 1;
	return foo(1);
}

int foo(int _var_3000025#a)
{
	return 0;
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Optimizing AST round 1 (took 0 ms)
[94m[Info]    [0m[Reporting.Logs.logInfo#75] ConstPropagation.run before:int main()
{
	int _var_3000021#a = 1;
	return foo(1);
}

int foo(int _var_3000025#a)
{
	return 0;
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] ConstPropagation.run after:int main()
{
	int _var_3000021#a = 1;
	return foo(1);
}

int foo(int _var_3000025#a)
{
	return 0;
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Optimizing AST round 2 (took 0 ms)
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Optimization done./play.lat

int main()
{
	int _var_3000021#a = 1;
	return foo(1);
}

int foo(int _var_3000025#a)
{
	return 0;
}
[94m[Info]    [0m[Reporting.Logs.logInfo#75] APPDET [int]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DEBUG COLLECT_FUNCTIONS PROTOTYPES
[94m[Info]    [0m[Reporting.Logs.logInfo#75] [int main()
    int t_1 = <int>1
    int t_2 = <int>t_1
    int t_3 = <int>1
    int t_4 =     call<function> foo(<int>t_3)
    return <int>t_4
,int foo(int t_5)
    int t_6 = <int>0
    return <int>t_6
]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] END DEBUG
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Initial IR: 
struct Array extends [Array, Object]
    field obj<Object> elements;
    field int length;
    field int elementSize;
    method byte Object.equals ( obj<Object>)
    method int Object.getHashCode ()
    method obj<String> Array.toString ()

struct Object extends [Object]
    method byte Object.equals ( obj<Object>)
    method int Object.getHashCode ()
    method obj<String> Object.toString ()

struct String extends [String, Object]
    method int String.charAt ( int)
    method byte String.equals ( obj<Object>)
    method obj<String> String.concat ( obj<String>)
    method byte String.startsWith ( obj<String>)
    method byte String.endsWith ( obj<String>)
    method array<byte> String.getBytes ()
    method int String.indexOf ( int)
    method int String.length ()
    method obj<String> String.substring ( int)
    method obj<String> String.toString ()
    method int String.getHashCode ()

int main()
    int t_1 = <int>1
    int t_2 = <int>t_1
    int t_3 = <int>1
    int t_4 =     call<function> foo(<int>t_3)
    return <int>t_4

int foo(int t_5)
    int t_6 = <int>0
    return <int>t_6


[94m[Info]    [0m[Reporting.Logs.logInfo#75] Running linearizer internal transformation: Value propagator
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Successfully completed internal linearizer transformation: Value propagator
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Running linearizer internal transformation: Expression substituter
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Successfully completed internal linearizer transformation: Expression substituter
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Optimizing IR round 1 (took 0 ms)
[94m[Info]    [0m[Reporting.Logs.logInfo#75] > BEFORE ROUND
struct Array extends [Array, Object]
    field obj<Object> elements;
    field int length;
    field int elementSize;
    method byte Object.equals ( obj<Object>)
    method int Object.getHashCode ()
    method obj<String> Array.toString ()

struct Object extends [Object]
    method byte Object.equals ( obj<Object>)
    method int Object.getHashCode ()
    method obj<String> Object.toString ()

struct String extends [String, Object]
    method int String.charAt ( int)
    method byte String.equals ( obj<Object>)
    method obj<String> String.concat ( obj<String>)
    method byte String.startsWith ( obj<String>)
    method byte String.endsWith ( obj<String>)
    method array<byte> String.getBytes ()
    method int String.indexOf ( int)
    method int String.length ()
    method obj<String> String.substring ( int)
    method obj<String> String.toString ()
    method int String.getHashCode ()

int main()
    int t_1 = <int>1
    int t_2 = <int>t_1
    int t_3 = <int>1
    int t_4 =     call<function> foo(<int>t_3)
    return <int>t_4

int foo(int t_5)
    int t_6 = <int>0
    return <int>t_6


[94m[Info]    [0m[Reporting.Logs.logInfo#75] > AFTER ROUND
struct Array extends [Array, Object]
    field obj<Object> elements;
    field int length;
    field int elementSize;
    method byte Object.equals ( obj<Object>)
    method int Object.getHashCode ()
    method obj<String> Array.toString ()

struct Object extends [Object]
    method byte Object.equals ( obj<Object>)
    method int Object.getHashCode ()
    method obj<String> Object.toString ()

struct String extends [String, Object]
    method int String.charAt ( int)
    method byte String.equals ( obj<Object>)
    method obj<String> String.concat ( obj<String>)
    method byte String.startsWith ( obj<String>)
    method byte String.endsWith ( obj<String>)
    method array<byte> String.getBytes ()
    method int String.indexOf ( int)
    method int String.length ()
    method obj<String> String.substring ( int)
    method obj<String> String.toString ()
    method int String.getHashCode ()

int main()
    int t_4 =     call<function> foo(<int>1)
    return <int>t_4

int foo(int t_5)
    return <int>0


[94m[Info]    [0m[Reporting.Logs.logInfo#75] Running linearizer internal transformation: Value propagator
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Successfully completed internal linearizer transformation: Value propagator
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Running linearizer internal transformation: Expression substituter
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Successfully completed internal linearizer transformation: Expression substituter
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Optimizing IR round 2 (took 5 ms)
[94m[Info]    [0m[Reporting.Logs.logInfo#75] > BEFORE ROUND
struct Array extends [Array, Object]
    field obj<Object> elements;
    field int length;
    field int elementSize;
    method byte Object.equals ( obj<Object>)
    method int Object.getHashCode ()
    method obj<String> Array.toString ()

struct Object extends [Object]
    method byte Object.equals ( obj<Object>)
    method int Object.getHashCode ()
    method obj<String> Object.toString ()

struct String extends [String, Object]
    method int String.charAt ( int)
    method byte String.equals ( obj<Object>)
    method obj<String> String.concat ( obj<String>)
    method byte String.startsWith ( obj<String>)
    method byte String.endsWith ( obj<String>)
    method array<byte> String.getBytes ()
    method int String.indexOf ( int)
    method int String.length ()
    method obj<String> String.substring ( int)
    method obj<String> String.toString ()
    method int String.getHashCode ()

int main()
    int t_4 =     call<function> foo(<int>1)
    return <int>t_4

int foo(int t_5)
    return <int>0


[94m[Info]    [0m[Reporting.Logs.logInfo#75] > AFTER ROUND
struct Array extends [Array, Object]
    field obj<Object> elements;
    field int length;
    field int elementSize;
    method byte Object.equals ( obj<Object>)
    method int Object.getHashCode ()
    method obj<String> Array.toString ()

struct Object extends [Object]
    method byte Object.equals ( obj<Object>)
    method int Object.getHashCode ()
    method obj<String> Object.toString ()

struct String extends [String, Object]
    method int String.charAt ( int)
    method byte String.equals ( obj<Object>)
    method obj<String> String.concat ( obj<String>)
    method byte String.startsWith ( obj<String>)
    method byte String.endsWith ( obj<String>)
    method array<byte> String.getBytes ()
    method int String.indexOf ( int)
    method int String.length ()
    method obj<String> String.substring ( int)
    method obj<String> String.toString ()
    method int String.getHashCode ()

int main()
    int t_4 =     call<function> foo(<int>1)
    return <int>t_4

int foo(int t_5)
    return <int>0


[94m[Info]    [0m[Reporting.Logs.logInfo#75] Running linearizer internal transformation: Convert to FIR
[94m[Info]    [0m[Reporting.Logs.logInfo#75] AST to convert:
struct Array extends [Array, Object]
    field obj<Object> elements;
    field int length;
    field int elementSize;
    method byte Object.equals ( obj<Object>)
    method int Object.getHashCode ()
    method obj<String> Array.toString ()

struct Object extends [Object]
    method byte Object.equals ( obj<Object>)
    method int Object.getHashCode ()
    method obj<String> Object.toString ()

struct String extends [String, Object]
    method int String.charAt ( int)
    method byte String.equals ( obj<Object>)
    method obj<String> String.concat ( obj<String>)
    method byte String.startsWith ( obj<String>)
    method byte String.endsWith ( obj<String>)
    method array<byte> String.getBytes ()
    method int String.indexOf ( int)
    method int String.length ()
    method obj<String> String.substring ( int)
    method obj<String> String.toString ()
    method int String.getHashCode ()

int main()
    int t_4 =     call<function> foo(<int>1)
    return <int>t_4

int foo(int t_5)
    return <int>0


[94m[Info]    [0m[Reporting.Logs.logInfo#75] Successfully completed internal linearizer transformation: Convert to FIR
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Linearizer terminated
[94m[Info]    [0m[Reporting.Logs.logInfo#75] IR conversion done./play.lat

.metadata: [
  .classes: [
    Array  extends [SymIdent "Array", SymIdent "Object"] : [
      .fields: [
        Object & elements;
        int length;
        int elementSize;
      ]
      .methods: [
        int (Object &)Object.equals;
        int () Object.getHashCode;
        String & () Array.toString;
      ]
    ]
    Object  extends [SymIdent "Object"] : [
      .fields: [
        ]
      .methods: [
        int (Object &)Object.equals;
        int () Object.getHashCode;
        String & () Object.toString;
      ]
    ]
    String  extends [SymIdent "String", SymIdent "Object"] : [
      .fields: [
        ]
      .methods: [
        int (int)String.charAt;
        int (Object &)String.equals;
        String & (String &)String.concat;
        int (String &)String.startsWith;
        int (String &)String.endsWith;
        int [] & () String.getBytes;
        int (int)String.indexOf;
        int () String.length;
        String & (int)String.substring;
        String & () String.toString;
        int () String.getHashCode;
      ]
    ]
    ~cl_TopLevel  extends [] : [
      .fields: [
        ]
      .methods: [
        Array & () Array.toString;
        Object & () Object.toString;
        int () Object.getHashCode;
        int (Object &)Object.equals;
        int (Object &)String.equals;
        int () String.getHashCode;
        String & () String.toString;
        String & () String.substring;
        int () String.length;
        int (String &, int)String.indexOf;
        String & () String.getBytes;
        int (String &)String.endsWith;
        int (String &)String.startsWith;
        String & (String &, String &)String.concat;
        int (int)String.charAt;
        int (String &)~cl_TopLevel.printString;
        int (int)~cl_TopLevel.printInt;
        int (int)~cl_TopLevel.printByte;
        int (int)~cl_TopLevel.printBoolean;
        int (Array &)~cl_TopLevel.printBinArray;
        String & (int)~cl_TopLevel.byteToString;
        String & (int)~cl_TopLevel.boolToString;
        String & (int)~cl_TopLevel.intToString;
        int (Object &)~cl_TopLevel.print;
        int () ~cl_TopLevel.error;
        int () ~cl_TopLevel.readInt;
        String & () ~cl_TopLevel.readString;
        Object & (Object &, Object &)~cl_TopLevel.__cast;
        int () ~cl_TopLevel.main;
        int (int)~cl_TopLevel.foo;
      ]
    ]
  ]
]
.method int ~cl_TopLevel.main (): [
.L_entry:
  %v_t_4 := call int ~cl_TopLevel.foo (1);
  %v___temp_0 := int %v_t_4;
  %v_return := int %v___temp_0;
  jump .L_exit;
.L_exit:
  return int %v_return;
]
.method int ~cl_TopLevel.foo (int %a_t_5): [
.L_entry:
  %v_t_5 := load int & param 0 %a_t_5;
  %v___temp_1 := 0;
  %v_return := int %v___temp_1;
  jump .L_exit;
.L_exit:
  return int %v_return;
]

[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Try collapsing CFG nodes in CFG [
[".L_entry",".L_exit"]
".L_entry" -> fromList [LabIdent ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_entry"]

]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Collapse eligible edge .L_entry == to => .L_exit
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Try collapsing CFG nodes in CFG [
[".L_entry"]
".L_entry" -> fromList [] <- fromList []

]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Try collapsing CFG nodes in CFG [
[".L_entry",".L_exit"]
".L_entry" -> fromList [LabIdent ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_entry"]

]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Collapse eligible edge .L_entry == to => .L_exit
[94m[Info]    [0m[Reporting.Logs.logInfo#75] collapseOnce: Try collapsing CFG nodes in CFG [
[".L_entry"]
".L_entry" -> fromList [] <- fromList []

]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> GENERATED CFGS

CFG for ~cl_TopLevel.main:
[".L_entry",".L_exit"]
".L_entry" -> fromList [LabIdent ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_entry"]
Code: 
.method int ~cl_TopLevel.main (): [
.L_entry:
  %v_t_4 := call int ~cl_TopLevel.foo (1);
  %v___temp_0 := int %v_t_4;
  %v_return := int %v___temp_0;
  jump .L_exit;
.L_exit:
  return int %v_return;
]

CFG for ~cl_TopLevel.foo:
[".L_entry",".L_exit"]
".L_entry" -> fromList [LabIdent ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_entry"]
Code: 
.method int ~cl_TopLevel.foo (int %a_t_5): [
.L_entry:
  %v_t_5 := load int & param 0 %a_t_5;
  %v___temp_1 := 0;
  %v_return := int %v___temp_1;
  jump .L_exit;
.L_exit:
  return int %v_return;
]


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> GENERATED INTERMEDIATE STEP Removing unreachable blocks...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] CFG for ~cl_TopLevel.main:
[".L_entry",".L_exit"]
".L_entry" -> fromList [LabIdent ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_entry"]
Code: 
.method int ~cl_TopLevel.main (): [
.L_entry:
  %v_t_4 := call int ~cl_TopLevel.foo (1);
  %v___temp_0 := int %v_t_4;
  %v_return := int %v___temp_0;
  jump .L_exit;
.L_exit:
  return int %v_return;
]

CFG for ~cl_TopLevel.foo:
[".L_entry",".L_exit"]
".L_entry" -> fromList [LabIdent ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_entry"]
Code: 
.method int ~cl_TopLevel.foo (int %a_t_5): [
.L_entry:
  %v_t_5 := load int & param 0 %a_t_5;
  %v___temp_1 := 0;
  %v_return := int %v___temp_1;
  jump .L_exit;
.L_exit:
  return int %v_return;
]


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> END STEP Removing unreachable blocks...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> GENERATED INTERMEDIATE STEP Analysing liveness...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] CFG for ~cl_TopLevel.main:
[".L_entry",".L_exit"]
".L_entry" -> fromList [LabIdent ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_entry"]
Liveness at start of .L_entry: in = [], out = [], use = [], kill = []
Liveness at end of .L_entry: in = [("%v_return",(3,Int ()))], out = [("%v_return",(2,Int ()))], use = [], kill = []
Liveness at start of .L_exit: in = [("%v_return",(1,Int ()))], out = [("%v_return",(0,Int ()))], use = [], kill = []
Liveness at end of .L_exit: in = [("%v_return",(0,Int ()))], out = [], use = [("%v_return",Int ())], kill = []
Code: 
.method int ~cl_TopLevel.main (): [
.L_entry:
  %v_t_4 := call int ~cl_TopLevel.foo (1);
  %v___temp_0 := int %v_t_4;
  %v_return := int %v___temp_0;
  jump .L_exit;
.L_exit:
  return int %v_return;
]

CFG for ~cl_TopLevel.foo:
[".L_entry",".L_exit"]
".L_entry" -> fromList [LabIdent ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_entry"]
Liveness at start of .L_entry: in = [("%a_t_5",(1,Ref () (Int ())))], out = [("%a_t_5",(0,Ref () (Int ())))], use = [], kill = []
Liveness at end of .L_entry: in = [("%v_return",(3,Int ()))], out = [("%v_return",(2,Int ()))], use = [], kill = []
Liveness at start of .L_exit: in = [("%v_return",(1,Int ()))], out = [("%v_return",(0,Int ()))], use = [], kill = []
Liveness at end of .L_exit: in = [("%v_return",(0,Int ()))], out = [], use = [("%v_return",Int ())], kill = []
Code: 
.method int ~cl_TopLevel.foo (int %a_t_5): [
.L_entry:
  %v_t_5 := load int & param 0 %a_t_5;
  %v___temp_1 := 0;
  %v_return := int %v___temp_1;
  jump .L_exit;
.L_exit:
  return int %v_return;
]


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> END STEP Analysing liveness...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> GENERATED INTERMEDIATE STEP Transforming to SSA...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] CFG for ~cl_TopLevel.main:
[".L_entry",".L_exit"]
".L_entry" -> fromList [LabIdent ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_entry"]
Code: 
.method int ~cl_TopLevel.main (): [
.L_entry:
  %v_t_4 := call int ~cl_TopLevel.foo (1);
  %v___temp_0 := int %v_t_4;
  %v_return := int %v___temp_0;
  jump .L_exit;
.L_exit:
  return int %v_return;
]

CFG for ~cl_TopLevel.foo:
[".L_entry",".L_exit"]
".L_entry" -> fromList [LabIdent ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_entry"]
Code: 
.method int ~cl_TopLevel.foo (int %a_t_5): [
.L_entry:
  %v_t_5 := load int & param 0 %a_t_5;
  %v___temp_1 := 0;
  %v_return := int %v___temp_1;
  jump .L_exit;
.L_exit:
  return int %v_return;
]


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> END STEP Transforming to SSA...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> ENTIRE SSA CODE DUMP 


[94m[Info]    [0m[Reporting.Logs.logInfo#75] [(SSA [".L_entry",".L_exit"]
".L_entry" -> fromList [LabIdent ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_entry"]
,Mthd ./play.lat:2:1 (Int ./play.lat:2:1) (QIdent ./play.lat:2:5 (SymIdent "~cl_TopLevel") (SymIdent "main")) [] [ILabel ./play.lat:2:1 (LabIdent ".L_entry"),ICall ./play.lat:4:10 (ValIdent "%v_t_4") (Call ./play.lat:4:10 (Int ./play.lat:7:1) (QIdent ./play.lat:4:10 (SymIdent "~cl_TopLevel") (SymIdent "foo")) [VInt ./play.lat:4:10 1] []),ISet ./play.lat:4:3 (ValIdent "%v___temp_0") (VVal ./play.lat:4:3 (Int ./play.lat:7:1) (ValIdent "%v_t_4")),ISet ./play.lat:4:3 (ValIdent "%v_return") (VVal ./play.lat:4:3 (Int ./play.lat:7:1) (ValIdent "%v___temp_0")),IJmp ./play.lat:4:3 (LabIdent ".L_exit"),ILabel ./play.lat:2:1 (LabIdent ".L_exit"),IRet ./play.lat:2:1 (VVal ./play.lat:2:1 (Int ./play.lat:2:1) (ValIdent "%v_return"))]),(SSA [".L_entry",".L_exit"]
".L_entry" -> fromList [LabIdent ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_entry"]
,Mthd ./play.lat:7:1 (Int ./play.lat:7:1) (QIdent ./play.lat:7:5 (SymIdent "~cl_TopLevel") (SymIdent "foo")) [Param ./play.lat:7:1 (Int ./play.lat:7:9) (ValIdent "%a_t_5")] [ILabel ./play.lat:7:1 (LabIdent ".L_entry"),ILoad ./play.lat:7:1 (ValIdent "%v_t_5") (PParam ./play.lat:7:1 (Ref ./play.lat:7:1 (Int ./play.lat:7:9)) 0 (ValIdent "%a_t_5")),ISet ./play.lat:8:3 (ValIdent "%v___temp_1") (VInt ./play.lat:8:3 0),ISet ./play.lat:8:3 (ValIdent "%v_return") (VVal ./play.lat:8:3 (Int ./play.lat:8:10) (ValIdent "%v___temp_1")),IJmp ./play.lat:8:3 (LabIdent ".L_exit"),ILabel ./play.lat:7:1 (LabIdent ".L_exit"),IRet ./play.lat:7:1 (VVal ./play.lat:7:1 (Int ./play.lat:7:1) (ValIdent "%v_return"))])]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> END SSA CODE DUMP 


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> GENERATED INTERMEDIATE STEP Optimising Espresso...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] CFG for ~cl_TopLevel.main:
[".L_entry",".L_exit"]
".L_entry" -> fromList [LabIdent ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_entry"]
Code: 
.method int ~cl_TopLevel.main (): [
.L_entry:
  %v_t_4 := call int ~cl_TopLevel.foo (1);
  %v___temp_0 := int %v_t_4;
  %v_return := int %v___temp_0;
  jump .L_exit;
.L_exit:
  return int %v_return;
]

CFG for ~cl_TopLevel.foo:
[".L_entry",".L_exit"]
".L_entry" -> fromList [LabIdent ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_entry"]
Code: 
.method int ~cl_TopLevel.foo (int %a_t_5): [
.L_entry:
  %v_t_5 := load int & param 0 %a_t_5;
  %v___temp_1 := 0;
  %v_return := int %v___temp_1;
  jump .L_exit;
.L_exit:
  return int %v_return;
]


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> END STEP Optimising Espresso...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> ENTIRE OPTIMIZED CODE DUMP 


[94m[Info]    [0m[Reporting.Logs.logInfo#75] [(SSA [".L_entry",".L_exit"]
".L_entry" -> fromList [LabIdent ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_entry"]
,Mthd ./play.lat:2:1 (Int ./play.lat:2:1) (QIdent ./play.lat:2:5 (SymIdent "~cl_TopLevel") (SymIdent "main")) [] [ILabel ./play.lat:2:1 (LabIdent ".L_entry"),ICall ./play.lat:4:10 (ValIdent "%v_t_4") (Call ./play.lat:4:10 (Int ./play.lat:7:1) (QIdent ./play.lat:4:10 (SymIdent "~cl_TopLevel") (SymIdent "foo")) [VInt ./play.lat:4:10 1] []),ISet ./play.lat:4:3 (ValIdent "%v___temp_0") (VVal ./play.lat:4:3 (Int ./play.lat:7:1) (ValIdent "%v_t_4")),ISet ./play.lat:4:3 (ValIdent "%v_return") (VVal ./play.lat:4:3 (Int ./play.lat:7:1) (ValIdent "%v___temp_0")),IJmp ./play.lat:4:3 (LabIdent ".L_exit"),ILabel ./play.lat:2:1 (LabIdent ".L_exit"),IRet ./play.lat:2:1 (VVal ./play.lat:2:1 (Int ./play.lat:2:1) (ValIdent "%v_return"))]),(SSA [".L_entry",".L_exit"]
".L_entry" -> fromList [LabIdent ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_entry"]
,Mthd ./play.lat:7:1 (Int ./play.lat:7:1) (QIdent ./play.lat:7:5 (SymIdent "~cl_TopLevel") (SymIdent "foo")) [Param ./play.lat:7:1 (Int ./play.lat:7:9) (ValIdent "%a_t_5")] [ILabel ./play.lat:7:1 (LabIdent ".L_entry"),ILoad ./play.lat:7:1 (ValIdent "%v_t_5") (PParam ./play.lat:7:1 (Ref ./play.lat:7:1 (Int ./play.lat:7:9)) 0 (ValIdent "%a_t_5")),ISet ./play.lat:8:3 (ValIdent "%v___temp_1") (VInt ./play.lat:8:3 0),ISet ./play.lat:8:3 (ValIdent "%v_return") (VVal ./play.lat:8:3 (Int ./play.lat:8:10) (ValIdent "%v___temp_1")),IJmp ./play.lat:8:3 (LabIdent ".L_exit"),ILabel ./play.lat:7:1 (LabIdent ".L_exit"),IRet ./play.lat:7:1 (VVal ./play.lat:7:1 (Int ./play.lat:7:1) (ValIdent "%v_return"))])]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> END OPTIMIZED CODE DUMP 


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> GENERATED INTERMEDIATE STEP Reanalysing liveness...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] CFG for ~cl_TopLevel.main:
[".L_entry",".L_exit"]
".L_entry" -> fromList [LabIdent ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_entry"]
Liveness at start of .L_entry: in = [], out = [], use = [], kill = []
Liveness at end of .L_entry: in = [("%v_t_4",(4,Int ()))], out = [("%v_t_4",(3,Int ()))], use = [], kill = []
Liveness at start of .L_exit: in = [("%v_t_4",(2,Int ()))], out = [("%v_t_4",(1,Int ()))], use = [], kill = []
Liveness at end of .L_exit: in = [("%v_t_4",(0,Int ()))], out = [], use = [("%v_t_4",Int ())], kill = []
Code: 
.method int ~cl_TopLevel.main (): [
.L_entry:
  %v_t_4 := call int ~cl_TopLevel.foo (1);
  %v___temp_0 := int %v_t_4;
  %v_return := int %v___temp_0;
  jump .L_exit;
.L_exit:
  return int %v_return;
]

CFG for ~cl_TopLevel.foo:
[".L_entry",".L_exit"]
".L_entry" -> fromList [LabIdent ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_entry"]
Liveness at start of .L_entry: in = [], out = [], use = [], kill = []
Liveness at end of .L_entry: in = [], out = [], use = [], kill = []
Liveness at start of .L_exit: in = [], out = [], use = [], kill = []
Liveness at end of .L_exit: in = [], out = [], use = [], kill = []
Code: 
.method int ~cl_TopLevel.foo (int %a_t_5): [
.L_entry:
  %v_t_5 := load int & param 0 %a_t_5;
  %v___temp_1 := 0;
  %v_return := int %v___temp_1;
  jump .L_exit;
.L_exit:
  return int %v_return;
]


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> END STEP Reanalysing liveness...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> GENERATED INTERMEDIATE STEP Allocating registers...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] CFG for ~cl_TopLevel.main:
[".L_entry",".L_exit"]
".L_entry" -> fromList [LabIdent ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_entry"]
Liveness at start of .L_entry: in = [], out = [], use = [], kill = []
Liveness at end of .L_entry: in = [("%v_t_4",(4,Int ()))], out = [("%v_t_4",(3,Int ()))], use = [], kill = []
Liveness at start of .L_exit: in = [("%v_t_4",(2,Int ()))], out = [("%v_t_4",(1,Int ()))], use = [], kill = []
Liveness at end of .L_exit: in = [("%v_t_4",(0,Int ()))], out = [], use = [("%v_t_4",Int ())], kill = []
Code: 
.method int ~cl_TopLevel.main (): [
.L_entry:
  %v_t_4 := call int ~cl_TopLevel.foo (1);
  %v___temp_0 := int %v_t_4;
  %v_return := int %v___temp_0;
  jump .L_exit;
.L_exit:
  return int %v_return;
]

CFG for ~cl_TopLevel.foo:
[".L_entry",".L_exit"]
".L_entry" -> fromList [LabIdent ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_entry"]
Liveness at start of .L_entry: in = [], out = [], use = [], kill = []
Liveness at end of .L_entry: in = [], out = [], use = [], kill = []
Liveness at start of .L_exit: in = [], out = [], use = [], kill = []
Liveness at end of .L_exit: in = [], out = [], use = [], kill = []
Code: 
.method int ~cl_TopLevel.foo (int %a_t_5): [
.L_entry:
  %v_t_5 := load int & param 0 %a_t_5;
  %v___temp_1 := 0;
  %v_return := int %v___temp_1;
  jump .L_exit;
.L_exit:
  return int %v_return;
]


[94m[Info]    [0m[Reporting.Logs.logInfo#75] [%v_t_4 (reg preference: CallerSaved) (RAX): []
~arg_0_RDI (reg preference: CallerSaved) (RDI): []
,]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> END STEP Allocating registers...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> GENERATED INTERMEDIATE STEP Unfolding phis...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] CFG for ~cl_TopLevel.main:
[".L_entry",".L_exit"]
".L_entry" -> fromList [LabIdent ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_entry"]
Code: 
.method int ~cl_TopLevel.main (): [
.L_entry:
  %v_t_4 := call int ~cl_TopLevel.foo (1);
  %v___temp_0 := int %v_t_4;
  %v_return := int %v___temp_0;
  jump .L_exit;
.L_exit:
  return int %v_return;
]

CFG for ~cl_TopLevel.foo:
[".L_entry",".L_exit"]
".L_entry" -> fromList [LabIdent ".L_exit"] <- fromList []
".L_exit" -> fromList [] <- fromList [LabIdent ".L_entry"]
Code: 
.method int ~cl_TopLevel.foo (int %a_t_5): [
.L_entry:
  %v_t_5 := load int & param 0 %a_t_5;
  %v___temp_1 := 0;
  %v_return := int %v___temp_1;
  jump .L_exit;
.L_exit:
  return int %v_return;
]


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> END STEP Unfolding phis...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> GENERATED INTERMEDIATE STEP Inlining trivial jumps...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] CFG for ~cl_TopLevel.main:
[".L_entry"]
".L_entry" -> fromList [] <- fromList []
Code: 
.method int ~cl_TopLevel.main (): [
.L_entry:
  endphi;
  %v_t_4 := call int ~cl_TopLevel.foo (1);
  endphi;
  return int %v_t_4;
]

CFG for ~cl_TopLevel.foo:
[".L_entry"]
".L_entry" -> fromList [] <- fromList []
Code: 
.method int ~cl_TopLevel.foo (int %a_t_5): [
.L_entry:
  endphi;
  endphi;
  return 0;
]


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> END STEP Inlining trivial jumps...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> GENERATED INTERMEDIATE STEP Final liveness analysis...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] CFG for ~cl_TopLevel.main:
[".L_entry"]
".L_entry" -> fromList [] <- fromList []
Liveness at start of .L_entry: in = [], out = [], use = [], kill = []
Liveness at end of .L_entry: in = [("%v_t_4",(0,Int ()))], out = [], use = [("%v_t_4",Int ())], kill = []
Code: 
.method int ~cl_TopLevel.main (): [
.L_entry:
  endphi;
  %v_t_4 := call int ~cl_TopLevel.foo (1);
  endphi;
  return int %v_t_4;
]

CFG for ~cl_TopLevel.foo:
[".L_entry"]
".L_entry" -> fromList [] <- fromList []
Liveness at start of .L_entry: in = [], out = [], use = [], kill = []
Liveness at end of .L_entry: in = [], out = [], use = [], kill = []
Code: 
.method int ~cl_TopLevel.foo (int %a_t_5): [
.L_entry:
  endphi;
  endphi;
  return 0;
]


[94m[Info]    [0m[Reporting.Logs.logInfo#75] >> END STEP Final liveness analysis...


[94m[Info]    [0m[Reporting.Logs.logInfo#75] COMPL_ DONE./play.lat

CompiledProg ./play.lat:2:1 (Meta ./play.lat:2:1 [ClDef inside standard library (SymIdent "Array") [SymIdent "Array",SymIdent "Object"] [FldDef inside standard library (Ref inside standard library (Cl inside standard library (SymIdent "Object"))) (SymIdent "elements"),FldDef inside standard library (Int inside standard library) (SymIdent "length"),FldDef inside standard library (Int inside standard library) (SymIdent "elementSize")] [MthdDef inside standard library (FType inside standard library (Int inside standard library) [Ref inside standard library (Cl inside standard library (SymIdent "Object"))]) (QIdent inside standard library (SymIdent "Object") (SymIdent "equals")),MthdDef inside standard library (FType inside standard library (Int inside standard library) []) (QIdent inside standard library (SymIdent "Object") (SymIdent "getHashCode")),MthdDef inside standard library (FType inside standard library (Ref inside standard library (Cl inside standard library (SymIdent "String"))) []) (QIdent inside standard library (SymIdent "Array") (SymIdent "toString"))],ClDef inside standard library (SymIdent "Object") [SymIdent "Object"] [] [MthdDef inside standard library (FType inside standard library (Int inside standard library) [Ref inside standard library (Cl inside standard library (SymIdent "Object"))]) (QIdent inside standard library (SymIdent "Object") (SymIdent "equals")),MthdDef inside standard library (FType inside standard library (Int inside standard library) []) (QIdent inside standard library (SymIdent "Object") (SymIdent "getHashCode")),MthdDef inside standard library (FType inside standard library (Ref inside standard library (Cl inside standard library (SymIdent "String"))) []) (QIdent inside standard library (SymIdent "Object") (SymIdent "toString"))],ClDef inside standard library (SymIdent "String") [SymIdent "String",SymIdent "Object"] [] [MthdDef inside standard library (FType inside standard library (Int inside standard library) [Int inside standard library]) (QIdent inside standard library (SymIdent "String") (SymIdent "charAt")),MthdDef inside standard library (FType inside standard library (Int inside standard library) [Ref inside standard library (Cl inside standard library (SymIdent "Object"))]) (QIdent inside standard library (SymIdent "String") (SymIdent "equals")),MthdDef inside standard library (FType inside standard library (Ref inside standard library (Cl inside standard library (SymIdent "String"))) [Ref inside standard library (Cl inside standard library (SymIdent "String"))]) (QIdent inside standard library (SymIdent "String") (SymIdent "concat")),MthdDef inside standard library (FType inside standard library (Int inside standard library) [Ref inside standard library (Cl inside standard library (SymIdent "String"))]) (QIdent inside standard library (SymIdent "String") (SymIdent "startsWith")),MthdDef inside standard library (FType inside standard library (Int inside standard library) [Ref inside standard library (Cl inside standard library (SymIdent "String"))]) (QIdent inside standard library (SymIdent "String") (SymIdent "endsWith")),MthdDef inside standard library (FType inside standard library (Ref inside standard library (Arr inside standard library (Int inside standard library))) []) (QIdent inside standard library (SymIdent "String") (SymIdent "getBytes")),MthdDef inside standard library (FType inside standard library (Int inside standard library) [Int inside standard library]) (QIdent inside standard library (SymIdent "String") (SymIdent "indexOf")),MthdDef inside standard library (FType inside standard library (Int inside standard library) []) (QIdent inside standard library (SymIdent "String") (SymIdent "length")),MthdDef inside standard library (FType inside standard library (Ref inside standard library (Cl inside standard library (SymIdent "String"))) [Int inside standard library]) (QIdent inside standard library (SymIdent "String") (SymIdent "substring")),MthdDef inside standard library (FType inside standard library (Ref inside standard library (Cl inside standard library (SymIdent "String"))) []) (QIdent inside standard library (SymIdent "String") (SymIdent "toString")),MthdDef inside standard library (FType inside standard library (Int inside standard library) []) (QIdent inside standard library (SymIdent "String") (SymIdent "getHashCode"))],ClDef ./play.lat:2:1 (SymIdent "~cl_TopLevel") [] [] [MthdDef ./play.lat:2:1 (FType ./play.lat:2:1 (Ref ./play.lat:2:1 (Cl ./play.lat:2:1 (SymIdent "Array"))) []) (QIdent ./play.lat:2:1 (SymIdent "Array") (SymIdent "toString")),MthdDef ./play.lat:2:1 (FType ./play.lat:2:1 (Ref ./play.lat:2:1 (Cl ./play.lat:2:1 (SymIdent "Object"))) []) (QIdent ./play.lat:2:1 (SymIdent "Object") (SymIdent "toString")),MthdDef ./play.lat:2:1 (FType ./play.lat:2:1 (Int ./play.lat:2:1) []) (QIdent ./play.lat:2:1 (SymIdent "Object") (SymIdent "getHashCode")),MthdDef ./play.lat:2:1 (FType ./play.lat:2:1 (Int ./play.lat:2:1) [Ref ./play.lat:2:1 (Cl ./play.lat:2:1 (SymIdent "Object"))]) (QIdent ./play.lat:2:1 (SymIdent "Object") (SymIdent "equals")),MthdDef ./play.lat:2:1 (FType ./play.lat:2:1 (Int ./play.lat:2:1) [Ref ./play.lat:2:1 (Cl ./play.lat:2:1 (SymIdent "Object"))]) (QIdent ./play.lat:2:1 (SymIdent "String") (SymIdent "equals")),MthdDef ./play.lat:2:1 (FType ./play.lat:2:1 (Int ./play.lat:2:1) []) (QIdent ./play.lat:2:1 (SymIdent "String") (SymIdent "getHashCode")),MthdDef ./play.lat:2:1 (FType ./play.lat:2:1 (Ref ./play.lat:2:1 (Cl ./play.lat:2:1 (SymIdent "String"))) []) (QIdent ./play.lat:2:1 (SymIdent "String") (SymIdent "toString")),MthdDef ./play.lat:2:1 (FType ./play.lat:2:1 (Ref ./play.lat:2:1 (Cl ./play.lat:2:1 (SymIdent "String"))) []) (QIdent ./play.lat:2:1 (SymIdent "String") (SymIdent "substring")),MthdDef ./play.lat:2:1 (FType ./play.lat:2:1 (Int ./play.lat:2:1) []) (QIdent ./play.lat:2:1 (SymIdent "String") (SymIdent "length")),MthdDef ./play.lat:2:1 (FType ./play.lat:2:1 (Int ./play.lat:2:1) [Ref ./play.lat:2:1 (Cl ./play.lat:2:1 (SymIdent "String")),Int ./play.lat:2:1]) (QIdent ./play.lat:2:1 (SymIdent "String") (SymIdent "indexOf")),MthdDef ./play.lat:2:1 (FType ./play.lat:2:1 (Ref ./play.lat:2:1 (Cl ./play.lat:2:1 (SymIdent "String"))) []) (QIdent ./play.lat:2:1 (SymIdent "String") (SymIdent "getBytes")),MthdDef ./play.lat:2:1 (FType ./play.lat:2:1 (Int ./play.lat:2:1) [Ref ./play.lat:2:1 (Cl ./play.lat:2:1 (SymIdent "String"))]) (QIdent ./play.lat:2:1 (SymIdent "String") (SymIdent "endsWith")),MthdDef ./play.lat:2:1 (FType ./play.lat:2:1 (Int ./play.lat:2:1) [Ref ./play.lat:2:1 (Cl ./play.lat:2:1 (SymIdent "String"))]) (QIdent ./play.lat:2:1 (SymIdent "String") (SymIdent "startsWith")),MthdDef ./play.lat:2:1 (FType ./play.lat:2:1 (Ref ./play.lat:2:1 (Cl ./play.lat:2:1 (SymIdent "String"))) [Ref ./play.lat:2:1 (Cl ./play.lat:2:1 (SymIdent "String")),Ref ./play.lat:2:1 (Cl ./play.lat:2:1 (SymIdent "String"))]) (QIdent ./play.lat:2:1 (SymIdent "String") (SymIdent "concat")),MthdDef ./play.lat:2:1 (FType ./play.lat:2:1 (Int ./play.lat:2:1) [Int ./play.lat:2:1]) (QIdent ./play.lat:2:1 (SymIdent "String") (SymIdent "charAt")),MthdDef ./play.lat:2:1 (FType ./play.lat:2:1 (Int ./play.lat:2:1) [Ref ./play.lat:2:1 (Cl ./play.lat:2:1 (SymIdent "String"))]) (QIdent ./play.lat:2:1 (SymIdent "~cl_TopLevel") (SymIdent "printString")),MthdDef ./play.lat:2:1 (FType ./play.lat:2:1 (Int ./play.lat:2:1) [Int ./play.lat:2:1]) (QIdent ./play.lat:2:1 (SymIdent "~cl_TopLevel") (SymIdent "printInt")),MthdDef ./play.lat:2:1 (FType ./play.lat:2:1 (Int ./play.lat:2:1) [Int ./play.lat:2:1]) (QIdent ./play.lat:2:1 (SymIdent "~cl_TopLevel") (SymIdent "printByte")),MthdDef ./play.lat:2:1 (FType ./play.lat:2:1 (Int ./play.lat:2:1) [Int ./play.lat:2:1]) (QIdent ./play.lat:2:1 (SymIdent "~cl_TopLevel") (SymIdent "printBoolean")),MthdDef ./play.lat:2:1 (FType ./play.lat:2:1 (Int ./play.lat:2:1) [Ref ./play.lat:2:1 (Cl ./play.lat:2:1 (SymIdent "Array"))]) (QIdent ./play.lat:2:1 (SymIdent "~cl_TopLevel") (SymIdent "printBinArray")),MthdDef ./play.lat:2:1 (FType ./play.lat:2:1 (Ref ./play.lat:2:1 (Cl ./play.lat:2:1 (SymIdent "String"))) [Int ./play.lat:2:1]) (QIdent ./play.lat:2:1 (SymIdent "~cl_TopLevel") (SymIdent "byteToString")),MthdDef ./play.lat:2:1 (FType ./play.lat:2:1 (Ref ./play.lat:2:1 (Cl ./play.lat:2:1 (SymIdent "String"))) [Int ./play.lat:2:1]) (QIdent ./play.lat:2:1 (SymIdent "~cl_TopLevel") (SymIdent "boolToString")),MthdDef ./play.lat:2:1 (FType ./play.lat:2:1 (Ref ./play.lat:2:1 (Cl ./play.lat:2:1 (SymIdent "String"))) [Int ./play.lat:2:1]) (QIdent ./play.lat:2:1 (SymIdent "~cl_TopLevel") (SymIdent "intToString")),MthdDef ./play.lat:2:1 (FType ./play.lat:2:1 (Int ./play.lat:2:1) [Ref ./play.lat:2:1 (Cl ./play.lat:2:1 (SymIdent "Object"))]) (QIdent ./play.lat:2:1 (SymIdent "~cl_TopLevel") (SymIdent "print")),MthdDef ./play.lat:2:1 (FType ./play.lat:2:1 (Int ./play.lat:2:1) []) (QIdent ./play.lat:2:1 (SymIdent "~cl_TopLevel") (SymIdent "error")),MthdDef ./play.lat:2:1 (FType ./play.lat:2:1 (Int ./play.lat:2:1) []) (QIdent ./play.lat:2:1 (SymIdent "~cl_TopLevel") (SymIdent "readInt")),MthdDef ./play.lat:2:1 (FType ./play.lat:2:1 (Ref ./play.lat:2:1 (Cl ./play.lat:2:1 (SymIdent "String"))) []) (QIdent ./play.lat:2:1 (SymIdent "~cl_TopLevel") (SymIdent "readString")),MthdDef ./play.lat:2:1 (FType ./play.lat:2:1 (Ref ./play.lat:2:1 (Cl ./play.lat:2:1 (SymIdent "Object"))) [Ref ./play.lat:2:1 (Cl ./play.lat:2:1 (SymIdent "Object")),Ref ./play.lat:2:1 (Cl ./play.lat:2:1 (SymIdent "Object"))]) (QIdent ./play.lat:2:1 (SymIdent "~cl_TopLevel") (SymIdent "__cast")),MthdDef ./play.lat:2:1 (FType ./play.lat:2:1 (Int ./play.lat:2:1) []) (QIdent ./play.lat:2:5 (SymIdent "~cl_TopLevel") (SymIdent "main")),MthdDef ./play.lat:7:1 (FType ./play.lat:7:1 (Int ./play.lat:7:1) [Int ./play.lat:7:9]) (QIdent ./play.lat:7:5 (SymIdent "~cl_TopLevel") (SymIdent "foo"))]]) [([".L_entry"]
".L_entry" -> fromList [] <- fromList []
,Mthd ./play.lat:2:1 (Int ./play.lat:2:1) (QIdent ./play.lat:2:5 (SymIdent "~cl_TopLevel") (SymIdent "main")) [] [ILabel ./play.lat:2:1 (LabIdent ".L_entry"),IEndPhi ./play.lat:2:1,ICall ./play.lat:4:10 (Val/usr/bin/ld: /tmp/ccgt6k4W.o: warning: relocation against `_String_getBytes' in read-only section `.rodata'
/usr/bin/ld: warning: creating DT_TEXTREL in a PIE
Ident "%v_t_4") (Call ./play.lat:4:10 (Int ./play.lat:7:1) (QIdent ./play.lat:4:10 (SymIdent "~cl_TopLevel") (SymIdent "foo")) [VInt ./play.lat:4:10 1] []),IEndPhi ./play.lat:2:1,IRet ./play.lat:2:1 (VVal ./play.lat:2:1 (Int ./play.lat:2:1) (ValIdent "%v_t_4"))],RegAlloc {regAlloc = fromList [(ValIdent "%v_t_4",RAX),(ValIdent "~arg_0_RDI",RDI)], numLocals = 0}),([".L_entry"]
".L_entry" -> fromList [] <- fromList []
,Mthd ./play.lat:7:1 (Int ./play.lat:7:1) (QIdent ./play.lat:7:5 (SymIdent "~cl_TopLevel") (SymIdent "foo")) [Param ./play.lat:7:1 (Int ./play.lat:7:9) (ValIdent "%a_t_5")] [ILabel ./play.lat:7:1 (LabIdent ".L_entry"),IEndPhi ./play.lat:7:1,IEndPhi ./play.lat:7:1,IRet ./play.lat:7:1 (VInt ./play.lat:7:1 0)],RegAlloc {regAlloc = fromList [], numLocals = 0})]
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Running correct compiler backend: X64
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Created file: ./play.s
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Calling backend compile step: X64
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Run GCC for X64 backend to generate './play' executable from object file './play.o'
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Executing command 'gcc -fPIE -Lsrc/Runtime/dependencies/_built_/lib lib/runtime -l:libunistring.a ./play.s -o ./play -z noexecstack'
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Command executed successfully.
[94m[Info]    [0m[Reporting.Logs.logInfo#75] X64 compilation of './play.s' seems to be successfull
[94m[Info]    [0m[Reporting.Logs.logInfo#75] Backend code generation completed successfully ./play.lat -> ./play
[94m[Info]    [0m[Reporting.Logs.logInfo#75] DONE
